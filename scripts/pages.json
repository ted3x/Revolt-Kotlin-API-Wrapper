[{"name":"Access","description":"app.revolt.exception.RevoltUserPermissionApiType.Access","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/-access/index.html","searchKeys":["Access","Access","app.revolt.exception.RevoltUserPermissionApiType.Access"]},{"name":"Album","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.Album","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/-album/index.html","searchKeys":["Album","Album","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.Album"]},{"name":"AlreadyAuthenticated","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.AlreadyAuthenticated","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/-already-authenticated/index.html","searchKeys":["AlreadyAuthenticated","AlreadyAuthenticated","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.AlreadyAuthenticated"]},{"name":"AlreadyFriends","description":"app.revolt.exception.RevoltErrorApiType.AlreadyFriends","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-already-friends/index.html","searchKeys":["AlreadyFriends","AlreadyFriends","app.revolt.exception.RevoltErrorApiType.AlreadyFriends"]},{"name":"AlreadyInGroup","description":"app.revolt.exception.RevoltErrorApiType.AlreadyInGroup","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-already-in-group/index.html","searchKeys":["AlreadyInGroup","AlreadyInGroup","app.revolt.exception.RevoltErrorApiType.AlreadyInGroup"]},{"name":"AlreadyOnboarded","description":"app.revolt.exception.RevoltErrorApiType.AlreadyOnboarded","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-already-onboarded/index.html","searchKeys":["AlreadyOnboarded","AlreadyOnboarded","app.revolt.exception.RevoltErrorApiType.AlreadyOnboarded"]},{"name":"AlreadySentRequest","description":"app.revolt.exception.RevoltErrorApiType.AlreadySentRequest","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-already-sent-request/index.html","searchKeys":["AlreadySentRequest","AlreadySentRequest","app.revolt.exception.RevoltErrorApiType.AlreadySentRequest"]},{"name":"AssignRoles","description":"app.revolt.exception.RevoltPermissionApiType.AssignRoles","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-assign-roles/index.html","searchKeys":["AssignRoles","AssignRoles","app.revolt.exception.RevoltPermissionApiType.AssignRoles"]},{"name":"Avatar","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.Avatar","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-avatar/index.html","searchKeys":["Avatar","Avatar","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.Avatar"]},{"name":"Avatar","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.Avatar","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/-avatar/index.html","searchKeys":["Avatar","Avatar","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.Avatar"]},{"name":"BanMembers","description":"app.revolt.exception.RevoltPermissionApiType.BanMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-ban-members/index.html","searchKeys":["BanMembers","BanMembers","app.revolt.exception.RevoltPermissionApiType.BanMembers"]},{"name":"Banned","description":"app.revolt.exception.RevoltErrorApiType.Banned","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-banned/index.html","searchKeys":["Banned","Banned","app.revolt.exception.RevoltErrorApiType.Banned"]},{"name":"Blocked","description":"app.revolt.exception.RevoltErrorApiType.Blocked","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-blocked/index.html","searchKeys":["Blocked","Blocked","app.revolt.exception.RevoltErrorApiType.Blocked"]},{"name":"Blocked","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.Blocked","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-blocked/index.html","searchKeys":["Blocked","Blocked","app.revolt.model.general.RevoltRelationshipStatusApiType.Blocked"]},{"name":"BlockedByOther","description":"app.revolt.exception.RevoltErrorApiType.BlockedByOther","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-blocked-by-other/index.html","searchKeys":["BlockedByOther","BlockedByOther","app.revolt.exception.RevoltErrorApiType.BlockedByOther"]},{"name":"BlockedOther","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.BlockedOther","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-blocked-other/index.html","searchKeys":["BlockedOther","BlockedOther","app.revolt.model.general.RevoltRelationshipStatusApiType.BlockedOther"]},{"name":"BotIsPrivate","description":"app.revolt.exception.RevoltErrorApiType.BotIsPrivate","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-bot-is-private/index.html","searchKeys":["BotIsPrivate","BotIsPrivate","app.revolt.exception.RevoltErrorApiType.BotIsPrivate"]},{"name":"Busy","description":"app.revolt.model.user.RevoltUserPresenceApiType.Busy","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/-busy/index.html","searchKeys":["Busy","Busy","app.revolt.model.user.RevoltUserPresenceApiType.Busy"]},{"name":"CannotEditMessage","description":"app.revolt.exception.RevoltErrorApiType.CannotEditMessage","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-cannot-edit-message/index.html","searchKeys":["CannotEditMessage","CannotEditMessage","app.revolt.exception.RevoltErrorApiType.CannotEditMessage"]},{"name":"CannotGiveMissingPermissions","description":"app.revolt.exception.RevoltErrorApiType.CannotGiveMissingPermissions","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-cannot-give-missing-permissions/index.html","searchKeys":["CannotGiveMissingPermissions","CannotGiveMissingPermissions","app.revolt.exception.RevoltErrorApiType.CannotGiveMissingPermissions"]},{"name":"CannotJoinCall","description":"app.revolt.exception.RevoltErrorApiType.CannotJoinCall","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-cannot-join-call/index.html","searchKeys":["CannotJoinCall","CannotJoinCall","app.revolt.exception.RevoltErrorApiType.CannotJoinCall"]},{"name":"CannotRemoveYourself","description":"app.revolt.exception.RevoltErrorApiType.CannotRemoveYourself","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-cannot-remove-yourself/index.html","searchKeys":["CannotRemoveYourself","CannotRemoveYourself","app.revolt.exception.RevoltErrorApiType.CannotRemoveYourself"]},{"name":"CannotReportYourself","description":"app.revolt.exception.RevoltErrorApiType.CannotReportYourself","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-cannot-report-yourself/index.html","searchKeys":["CannotReportYourself","CannotReportYourself","app.revolt.exception.RevoltErrorApiType.CannotReportYourself"]},{"name":"ChangeAvatar","description":"app.revolt.exception.RevoltPermissionApiType.ChangeAvatar","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-change-avatar/index.html","searchKeys":["ChangeAvatar","ChangeAvatar","app.revolt.exception.RevoltPermissionApiType.ChangeAvatar"]},{"name":"ChangeNickname","description":"app.revolt.exception.RevoltPermissionApiType.ChangeNickname","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-change-nickname/index.html","searchKeys":["ChangeNickname","ChangeNickname","app.revolt.exception.RevoltPermissionApiType.ChangeNickname"]},{"name":"Channel","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.Channel","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-type/-channel/index.html","searchKeys":["Channel","Channel","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.Channel"]},{"name":"Channel","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Channel","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/-channel/index.html","searchKeys":["Channel","Channel","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Channel"]},{"name":"Clip","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Clip","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/-clip/index.html","searchKeys":["Clip","Clip","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Clip"]},{"name":"Connect","description":"app.revolt.exception.RevoltPermissionApiType.Connect","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-connect/index.html","searchKeys":["Connect","Connect","app.revolt.exception.RevoltPermissionApiType.Connect"]},{"name":"Core","description":"app.revolt.exception.RevoltErrorApiType.Core","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-core/index.html","searchKeys":["Core","Core","app.revolt.exception.RevoltErrorApiType.Core"]},{"name":"DatabaseError","description":"app.revolt.exception.RevoltErrorApiType.DatabaseError","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-database-error/index.html","searchKeys":["DatabaseError","DatabaseError","app.revolt.exception.RevoltErrorApiType.DatabaseError"]},{"name":"DeafenMembers","description":"app.revolt.exception.RevoltPermissionApiType.DeafenMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-deafen-members/index.html","searchKeys":["DeafenMembers","DeafenMembers","app.revolt.exception.RevoltPermissionApiType.DeafenMembers"]},{"name":"DisplayName","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.DisplayName","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-display-name/index.html","searchKeys":["DisplayName","DisplayName","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.DisplayName"]},{"name":"DuplicateNonce","description":"app.revolt.exception.RevoltErrorApiType.DuplicateNonce","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-duplicate-nonce/index.html","searchKeys":["DuplicateNonce","DuplicateNonce","app.revolt.exception.RevoltErrorApiType.DuplicateNonce"]},{"name":"EmptyMessage","description":"app.revolt.exception.RevoltErrorApiType.EmptyMessage","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-empty-message/index.html","searchKeys":["EmptyMessage","EmptyMessage","app.revolt.exception.RevoltErrorApiType.EmptyMessage"]},{"name":"FailedValidation","description":"app.revolt.exception.RevoltErrorApiType.FailedValidation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-failed-validation/index.html","searchKeys":["FailedValidation","FailedValidation","app.revolt.exception.RevoltErrorApiType.FailedValidation"]},{"name":"FieldValidation","description":"app.revolt.exception.RevoltErrorApiType.FieldValidation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-field-validation/index.html","searchKeys":["FieldValidation","FieldValidation","app.revolt.exception.RevoltErrorApiType.FieldValidation"]},{"name":"Focus","description":"app.revolt.model.user.RevoltUserPresenceApiType.Focus","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/-focus/index.html","searchKeys":["Focus","Focus","app.revolt.model.user.RevoltUserPresenceApiType.Focus"]},{"name":"Friend","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.Friend","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-friend/index.html","searchKeys":["Friend","Friend","app.revolt.model.general.RevoltRelationshipStatusApiType.Friend"]},{"name":"GIF","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.GIF","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/-g-i-f/index.html","searchKeys":["GIF","GIF","app.revolt.model.RevoltFileUploadApiRequest.ContentType.GIF"]},{"name":"GrantAll","description":"app.revolt.exception.RevoltPermissionApiType.GrantAll","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-grant-all/index.html","searchKeys":["GrantAll","GrantAll","app.revolt.exception.RevoltPermissionApiType.GrantAll"]},{"name":"GrantAllSafe","description":"app.revolt.exception.RevoltPermissionApiType.GrantAllSafe","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-grant-all-safe/index.html","searchKeys":["GrantAllSafe","GrantAllSafe","app.revolt.exception.RevoltPermissionApiType.GrantAllSafe"]},{"name":"GroupTooLarge","description":"app.revolt.exception.RevoltErrorApiType.GroupTooLarge","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-group-too-large/index.html","searchKeys":["GroupTooLarge","GroupTooLarge","app.revolt.exception.RevoltErrorApiType.GroupTooLarge"]},{"name":"Idle","description":"app.revolt.model.user.RevoltUserPresenceApiType.Idle","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/-idle/index.html","searchKeys":["Idle","Idle","app.revolt.model.user.RevoltUserPresenceApiType.Idle"]},{"name":"Incoming","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.Incoming","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-incoming/index.html","searchKeys":["Incoming","Incoming","app.revolt.model.general.RevoltRelationshipStatusApiType.Incoming"]},{"name":"InternalError","description":"app.revolt.exception.RevoltErrorApiType.InternalError","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-internal-error/index.html","searchKeys":["InternalError","InternalError","app.revolt.exception.RevoltErrorApiType.InternalError"]},{"name":"InternalError","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.InternalError","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/-internal-error/index.html","searchKeys":["InternalError","InternalError","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.InternalError"]},{"name":"InvalidCredentials","description":"app.revolt.exception.RevoltErrorApiType.InvalidCredentials","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-credentials/index.html","searchKeys":["InvalidCredentials","InvalidCredentials","app.revolt.exception.RevoltErrorApiType.InvalidCredentials"]},{"name":"InvalidOperation","description":"app.revolt.exception.RevoltErrorApiType.InvalidOperation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-operation/index.html","searchKeys":["InvalidOperation","InvalidOperation","app.revolt.exception.RevoltErrorApiType.InvalidOperation"]},{"name":"InvalidProperty","description":"app.revolt.exception.RevoltErrorApiType.InvalidProperty","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-property/index.html","searchKeys":["InvalidProperty","InvalidProperty","app.revolt.exception.RevoltErrorApiType.InvalidProperty"]},{"name":"InvalidRole","description":"app.revolt.exception.RevoltErrorApiType.InvalidRole","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-role/index.html","searchKeys":["InvalidRole","InvalidRole","app.revolt.exception.RevoltErrorApiType.InvalidRole"]},{"name":"InvalidSession","description":"app.revolt.exception.RevoltErrorApiType.InvalidSession","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-session/index.html","searchKeys":["InvalidSession","InvalidSession","app.revolt.exception.RevoltErrorApiType.InvalidSession"]},{"name":"InvalidSession","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.InvalidSession","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/-invalid-session/index.html","searchKeys":["InvalidSession","InvalidSession","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.InvalidSession"]},{"name":"InvalidToken","description":"app.revolt.exception.RevoltErrorApiType.InvalidToken","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-token/index.html","searchKeys":["InvalidToken","InvalidToken","app.revolt.exception.RevoltErrorApiType.InvalidToken"]},{"name":"InvalidUsername","description":"app.revolt.exception.RevoltErrorApiType.InvalidUsername","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-invalid-username/index.html","searchKeys":["InvalidUsername","InvalidUsername","app.revolt.exception.RevoltErrorApiType.InvalidUsername"]},{"name":"Invisible","description":"app.revolt.model.user.RevoltUserPresenceApiType.Invisible","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/-invisible/index.html","searchKeys":["Invisible","Invisible","app.revolt.model.user.RevoltUserPresenceApiType.Invisible"]},{"name":"Invite","description":"app.revolt.exception.RevoltUserPermissionApiType.Invite","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/-invite/index.html","searchKeys":["Invite","Invite","app.revolt.exception.RevoltUserPermissionApiType.Invite"]},{"name":"InviteOthers","description":"app.revolt.exception.RevoltPermissionApiType.InviteOthers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-invite-others/index.html","searchKeys":["InviteOthers","InviteOthers","app.revolt.exception.RevoltPermissionApiType.InviteOthers"]},{"name":"IsBot","description":"app.revolt.exception.RevoltErrorApiType.IsBot","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-is-bot/index.html","searchKeys":["IsBot","IsBot","app.revolt.exception.RevoltErrorApiType.IsBot"]},{"name":"JPEG","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.JPEG","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/-j-p-e-g/index.html","searchKeys":["JPEG","JPEG","app.revolt.model.RevoltFileUploadApiRequest.ContentType.JPEG"]},{"name":"JPG","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.JPG","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/-j-p-g/index.html","searchKeys":["JPG","JPG","app.revolt.model.RevoltFileUploadApiRequest.ContentType.JPG"]},{"name":"KickMembers","description":"app.revolt.exception.RevoltPermissionApiType.KickMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-kick-members/index.html","searchKeys":["KickMembers","KickMembers","app.revolt.exception.RevoltPermissionApiType.KickMembers"]},{"name":"LabelMe","description":"app.revolt.exception.RevoltErrorApiType.LabelMe","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-label-me/index.html","searchKeys":["LabelMe","LabelMe","app.revolt.exception.RevoltErrorApiType.LabelMe"]},{"name":"LabelMe","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.LabelMe","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/-label-me/index.html","searchKeys":["LabelMe","LabelMe","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.LabelMe"]},{"name":"Large","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size.Large","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/-large/index.html","searchKeys":["Large","Large","app.revolt.model.RevoltEmbedApiModel.Image.Size.Large"]},{"name":"Latest","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Latest","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/-latest/index.html","searchKeys":["Latest","Latest","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Latest"]},{"name":"ManageChannel","description":"app.revolt.exception.RevoltPermissionApiType.ManageChannel","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-channel/index.html","searchKeys":["ManageChannel","ManageChannel","app.revolt.exception.RevoltPermissionApiType.ManageChannel"]},{"name":"ManageCustomisation","description":"app.revolt.exception.RevoltPermissionApiType.ManageCustomisation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-customisation/index.html","searchKeys":["ManageCustomisation","ManageCustomisation","app.revolt.exception.RevoltPermissionApiType.ManageCustomisation"]},{"name":"ManageMessages","description":"app.revolt.exception.RevoltPermissionApiType.ManageMessages","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-messages/index.html","searchKeys":["ManageMessages","ManageMessages","app.revolt.exception.RevoltPermissionApiType.ManageMessages"]},{"name":"ManageNicknames","description":"app.revolt.exception.RevoltPermissionApiType.ManageNicknames","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-nicknames/index.html","searchKeys":["ManageNicknames","ManageNicknames","app.revolt.exception.RevoltPermissionApiType.ManageNicknames"]},{"name":"ManagePermissions","description":"app.revolt.exception.RevoltPermissionApiType.ManagePermissions","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-permissions/index.html","searchKeys":["ManagePermissions","ManagePermissions","app.revolt.exception.RevoltPermissionApiType.ManagePermissions"]},{"name":"ManageRole","description":"app.revolt.exception.RevoltPermissionApiType.ManageRole","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-role/index.html","searchKeys":["ManageRole","ManageRole","app.revolt.exception.RevoltPermissionApiType.ManageRole"]},{"name":"ManageServer","description":"app.revolt.exception.RevoltPermissionApiType.ManageServer","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-server/index.html","searchKeys":["ManageServer","ManageServer","app.revolt.exception.RevoltPermissionApiType.ManageServer"]},{"name":"ManageWebhooks","description":"app.revolt.exception.RevoltPermissionApiType.ManageWebhooks","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-manage-webhooks/index.html","searchKeys":["ManageWebhooks","ManageWebhooks","app.revolt.exception.RevoltPermissionApiType.ManageWebhooks"]},{"name":"Masquerade","description":"app.revolt.exception.RevoltPermissionApiType.Masquerade","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-masquerade/index.html","searchKeys":["Masquerade","Masquerade","app.revolt.exception.RevoltPermissionApiType.Masquerade"]},{"name":"MissingPermission","description":"app.revolt.exception.RevoltErrorApiType.MissingPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-missing-permission/index.html","searchKeys":["MissingPermission","MissingPermission","app.revolt.exception.RevoltErrorApiType.MissingPermission"]},{"name":"MissingUserPermission","description":"app.revolt.exception.RevoltErrorApiType.MissingUserPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-missing-user-permission/index.html","searchKeys":["MissingUserPermission","MissingUserPermission","app.revolt.exception.RevoltErrorApiType.MissingUserPermission"]},{"name":"MoveMembers","description":"app.revolt.exception.RevoltPermissionApiType.MoveMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-move-members/index.html","searchKeys":["MoveMembers","MoveMembers","app.revolt.exception.RevoltPermissionApiType.MoveMembers"]},{"name":"MuteMembers","description":"app.revolt.exception.RevoltPermissionApiType.MuteMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-mute-members/index.html","searchKeys":["MuteMembers","MuteMembers","app.revolt.exception.RevoltPermissionApiType.MuteMembers"]},{"name":"NoEffect","description":"app.revolt.exception.RevoltErrorApiType.NoEffect","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-no-effect/index.html","searchKeys":["NoEffect","NoEffect","app.revolt.exception.RevoltErrorApiType.NoEffect"]},{"name":"None","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.None","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-none/index.html","searchKeys":["None","None","app.revolt.model.general.RevoltRelationshipStatusApiType.None"]},{"name":"NotElevated","description":"app.revolt.exception.RevoltErrorApiType.NotElevated","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-elevated/index.html","searchKeys":["NotElevated","NotElevated","app.revolt.exception.RevoltErrorApiType.NotElevated"]},{"name":"NotFound","description":"app.revolt.exception.RevoltErrorApiType.NotFound","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-found/index.html","searchKeys":["NotFound","NotFound","app.revolt.exception.RevoltErrorApiType.NotFound"]},{"name":"NotFriends","description":"app.revolt.exception.RevoltErrorApiType.NotFriends","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-friends/index.html","searchKeys":["NotFriends","NotFriends","app.revolt.exception.RevoltErrorApiType.NotFriends"]},{"name":"NotInGroup","description":"app.revolt.exception.RevoltErrorApiType.NotInGroup","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-in-group/index.html","searchKeys":["NotInGroup","NotInGroup","app.revolt.exception.RevoltErrorApiType.NotInGroup"]},{"name":"NotOwner","description":"app.revolt.exception.RevoltErrorApiType.NotOwner","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-owner/index.html","searchKeys":["NotOwner","NotOwner","app.revolt.exception.RevoltErrorApiType.NotOwner"]},{"name":"NotPrivileged","description":"app.revolt.exception.RevoltErrorApiType.NotPrivileged","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-not-privileged/index.html","searchKeys":["NotPrivileged","NotPrivileged","app.revolt.exception.RevoltErrorApiType.NotPrivileged"]},{"name":"Oldest","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Oldest","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/-oldest/index.html","searchKeys":["Oldest","Oldest","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Oldest"]},{"name":"OnboardingNotFinished","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.OnboardingNotFinished","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/-onboarding-not-finished/index.html","searchKeys":["OnboardingNotFinished","OnboardingNotFinished","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.OnboardingNotFinished"]},{"name":"Online","description":"app.revolt.model.user.RevoltUserPresenceApiType.Online","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/-online/index.html","searchKeys":["Online","Online","app.revolt.model.user.RevoltUserPresenceApiType.Online"]},{"name":"Outgoing","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.Outgoing","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-outgoing/index.html","searchKeys":["Outgoing","Outgoing","app.revolt.model.general.RevoltRelationshipStatusApiType.Outgoing"]},{"name":"PNG","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.PNG","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/-p-n-g/index.html","searchKeys":["PNG","PNG","app.revolt.model.RevoltFileUploadApiRequest.ContentType.PNG"]},{"name":"Password","description":"app.revolt.model.auth.RevoltMFAMethodApiType.Password","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/-password/index.html","searchKeys":["Password","Password","app.revolt.model.auth.RevoltMFAMethodApiType.Password"]},{"name":"PayloadTooLarge","description":"app.revolt.exception.RevoltErrorApiType.PayloadTooLarge","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-payload-too-large/index.html","searchKeys":["PayloadTooLarge","PayloadTooLarge","app.revolt.exception.RevoltErrorApiType.PayloadTooLarge"]},{"name":"Preview","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size.Preview","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/-preview/index.html","searchKeys":["Preview","Preview","app.revolt.model.RevoltEmbedApiModel.Image.Size.Preview"]},{"name":"ProfileBackground","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.ProfileBackground","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-profile-background/index.html","searchKeys":["ProfileBackground","ProfileBackground","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.ProfileBackground"]},{"name":"ProfileBackground","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.ProfileBackground","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/-profile-background/index.html","searchKeys":["ProfileBackground","ProfileBackground","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.ProfileBackground"]},{"name":"ProfileContent","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.ProfileContent","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-profile-content/index.html","searchKeys":["ProfileContent","ProfileContent","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.ProfileContent"]},{"name":"ProfileContent","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.ProfileContent","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/-profile-content/index.html","searchKeys":["ProfileContent","ProfileContent","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.ProfileContent"]},{"name":"RateLimit","description":"app.revolt.exception.RevoltErrorApiType.RateLimit","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-rate-limit/index.html","searchKeys":["RateLimit","RateLimit","app.revolt.exception.RevoltErrorApiType.RateLimit"]},{"name":"ReachedMaximumBots","description":"app.revolt.exception.RevoltErrorApiType.ReachedMaximumBots","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-reached-maximum-bots/index.html","searchKeys":["ReachedMaximumBots","ReachedMaximumBots","app.revolt.exception.RevoltErrorApiType.ReachedMaximumBots"]},{"name":"React","description":"app.revolt.exception.RevoltPermissionApiType.React","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-react/index.html","searchKeys":["React","React","app.revolt.exception.RevoltPermissionApiType.React"]},{"name":"ReadMessageHistory","description":"app.revolt.exception.RevoltPermissionApiType.ReadMessageHistory","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-read-message-history/index.html","searchKeys":["ReadMessageHistory","ReadMessageHistory","app.revolt.exception.RevoltPermissionApiType.ReadMessageHistory"]},{"name":"Recovery","description":"app.revolt.model.auth.RevoltMFAMethodApiType.Recovery","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/-recovery/index.html","searchKeys":["Recovery","Recovery","app.revolt.model.auth.RevoltMFAMethodApiType.Recovery"]},{"name":"Relevance","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Relevance","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/-relevance/index.html","searchKeys":["Relevance","Relevance","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.Relevance"]},{"name":"RemoveAvatars","description":"app.revolt.exception.RevoltPermissionApiType.RemoveAvatars","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-remove-avatars/index.html","searchKeys":["RemoveAvatars","RemoveAvatars","app.revolt.exception.RevoltPermissionApiType.RemoveAvatars"]},{"name":"SendEmbeds","description":"app.revolt.exception.RevoltPermissionApiType.SendEmbeds","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-send-embeds/index.html","searchKeys":["SendEmbeds","SendEmbeds","app.revolt.exception.RevoltPermissionApiType.SendEmbeds"]},{"name":"SendMessage","description":"app.revolt.exception.RevoltPermissionApiType.SendMessage","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-send-message/index.html","searchKeys":["SendMessage","SendMessage","app.revolt.exception.RevoltPermissionApiType.SendMessage"]},{"name":"SendMessage","description":"app.revolt.exception.RevoltUserPermissionApiType.SendMessage","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/-send-message/index.html","searchKeys":["SendMessage","SendMessage","app.revolt.exception.RevoltUserPermissionApiType.SendMessage"]},{"name":"Speak","description":"app.revolt.exception.RevoltPermissionApiType.Speak","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-speak/index.html","searchKeys":["Speak","Speak","app.revolt.exception.RevoltPermissionApiType.Speak"]},{"name":"StatusPresence","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.StatusPresence","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-status-presence/index.html","searchKeys":["StatusPresence","StatusPresence","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.StatusPresence"]},{"name":"StatusText","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.StatusText","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/-status-text/index.html","searchKeys":["StatusText","StatusText","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.StatusText"]},{"name":"StatusText","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.StatusText","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/-status-text/index.html","searchKeys":["StatusText","StatusText","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.StatusText"]},{"name":"TimeoutMembers","description":"app.revolt.exception.RevoltPermissionApiType.TimeoutMembers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-timeout-members/index.html","searchKeys":["TimeoutMembers","TimeoutMembers","app.revolt.exception.RevoltPermissionApiType.TimeoutMembers"]},{"name":"TooManyAttachments","description":"app.revolt.exception.RevoltErrorApiType.TooManyAttachments","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-attachments/index.html","searchKeys":["TooManyAttachments","TooManyAttachments","app.revolt.exception.RevoltErrorApiType.TooManyAttachments"]},{"name":"TooManyChannels","description":"app.revolt.exception.RevoltErrorApiType.TooManyChannels","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-channels/index.html","searchKeys":["TooManyChannels","TooManyChannels","app.revolt.exception.RevoltErrorApiType.TooManyChannels"]},{"name":"TooManyEmbeds","description":"app.revolt.exception.RevoltErrorApiType.TooManyEmbeds","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-embeds/index.html","searchKeys":["TooManyEmbeds","TooManyEmbeds","app.revolt.exception.RevoltErrorApiType.TooManyEmbeds"]},{"name":"TooManyEmoji","description":"app.revolt.exception.RevoltErrorApiType.TooManyEmoji","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-emoji/index.html","searchKeys":["TooManyEmoji","TooManyEmoji","app.revolt.exception.RevoltErrorApiType.TooManyEmoji"]},{"name":"TooManyReplies","description":"app.revolt.exception.RevoltErrorApiType.TooManyReplies","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-replies/index.html","searchKeys":["TooManyReplies","TooManyReplies","app.revolt.exception.RevoltErrorApiType.TooManyReplies"]},{"name":"TooManyRoles","description":"app.revolt.exception.RevoltErrorApiType.TooManyRoles","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-roles/index.html","searchKeys":["TooManyRoles","TooManyRoles","app.revolt.exception.RevoltErrorApiType.TooManyRoles"]},{"name":"TooManyServers","description":"app.revolt.exception.RevoltErrorApiType.TooManyServers","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-too-many-servers/index.html","searchKeys":["TooManyServers","TooManyServers","app.revolt.exception.RevoltErrorApiType.TooManyServers"]},{"name":"Totp","description":"app.revolt.model.auth.RevoltMFAMethodApiType.Totp","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/-totp/index.html","searchKeys":["Totp","Totp","app.revolt.model.auth.RevoltMFAMethodApiType.Totp"]},{"name":"Track","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.Track","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/-track/index.html","searchKeys":["Track","Track","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.Track"]},{"name":"Unauthorized","description":"app.revolt.exception.RevoltErrorApiType.Unauthorized","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unauthorized/index.html","searchKeys":["Unauthorized","Unauthorized","app.revolt.exception.RevoltErrorApiType.Unauthorized"]},{"name":"Unknown","description":"app.revolt.exception.RevoltErrorApiType.Unknown","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown/index.html","searchKeys":["Unknown","Unknown","app.revolt.exception.RevoltErrorApiType.Unknown"]},{"name":"UnknownAttachment","description":"app.revolt.exception.RevoltErrorApiType.UnknownAttachment","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown-attachment/index.html","searchKeys":["UnknownAttachment","UnknownAttachment","app.revolt.exception.RevoltErrorApiType.UnknownAttachment"]},{"name":"UnknownChannel","description":"app.revolt.exception.RevoltErrorApiType.UnknownChannel","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown-channel/index.html","searchKeys":["UnknownChannel","UnknownChannel","app.revolt.exception.RevoltErrorApiType.UnknownChannel"]},{"name":"UnknownMessage","description":"app.revolt.exception.RevoltErrorApiType.UnknownMessage","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown-message/index.html","searchKeys":["UnknownMessage","UnknownMessage","app.revolt.exception.RevoltErrorApiType.UnknownMessage"]},{"name":"UnknownServer","description":"app.revolt.exception.RevoltErrorApiType.UnknownServer","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown-server/index.html","searchKeys":["UnknownServer","UnknownServer","app.revolt.exception.RevoltErrorApiType.UnknownServer"]},{"name":"UnknownUser","description":"app.revolt.exception.RevoltErrorApiType.UnknownUser","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-unknown-user/index.html","searchKeys":["UnknownUser","UnknownUser","app.revolt.exception.RevoltErrorApiType.UnknownUser"]},{"name":"UploadFiles","description":"app.revolt.exception.RevoltPermissionApiType.UploadFiles","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-upload-files/index.html","searchKeys":["UploadFiles","UploadFiles","app.revolt.exception.RevoltPermissionApiType.UploadFiles"]},{"name":"User","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.User","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/-user/index.html","searchKeys":["User","User","app.revolt.model.general.RevoltRelationshipStatusApiType.User"]},{"name":"UsernameTaken","description":"app.revolt.exception.RevoltErrorApiType.UsernameTaken","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-username-taken/index.html","searchKeys":["UsernameTaken","UsernameTaken","app.revolt.exception.RevoltErrorApiType.UsernameTaken"]},{"name":"Video","description":"app.revolt.exception.RevoltPermissionApiType.Video","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-video/index.html","searchKeys":["Video","Video","app.revolt.exception.RevoltPermissionApiType.Video"]},{"name":"Video","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Video","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/-video/index.html","searchKeys":["Video","Video","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.Video"]},{"name":"ViewChannel","description":"app.revolt.exception.RevoltPermissionApiType.ViewChannel","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/-view-channel/index.html","searchKeys":["ViewChannel","ViewChannel","app.revolt.exception.RevoltPermissionApiType.ViewChannel"]},{"name":"ViewProfile","description":"app.revolt.exception.RevoltUserPermissionApiType.ViewProfile","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/-view-profile/index.html","searchKeys":["ViewProfile","ViewProfile","app.revolt.exception.RevoltUserPermissionApiType.ViewProfile"]},{"name":"VosoUnavailable","description":"app.revolt.exception.RevoltErrorApiType.VosoUnavailable","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/-voso-unavailable/index.html","searchKeys":["VosoUnavailable","VosoUnavailable","app.revolt.exception.RevoltErrorApiType.VosoUnavailable"]},{"name":"abstract fun updateToken(token: String)","description":"app.revolt.client.ApiClientProvider.updateToken","location":"revolt-kotlin-api/app.revolt.client/-api-client-provider/update-token.html","searchKeys":["updateToken","abstract fun updateToken(token: String)","app.revolt.client.ApiClientProvider.updateToken"]},{"name":"abstract val client: HttpClient","description":"app.revolt.client.ApiClientProvider.client","location":"revolt-kotlin-api/app.revolt.client/-api-client-provider/client.html","searchKeys":["client","abstract val client: HttpClient","app.revolt.client.ApiClientProvider.client"]},{"name":"class RevoltAccountApiService(client: HttpClient)","description":"app.revolt.services.auth.RevoltAccountApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/index.html","searchKeys":["RevoltAccountApiService","class RevoltAccountApiService(client: HttpClient)","app.revolt.services.auth.RevoltAccountApiService"]},{"name":"class RevoltAdminApiService","description":"app.revolt.services.RevoltAdminApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-admin-api-service/index.html","searchKeys":["RevoltAdminApiService","class RevoltAdminApiService","app.revolt.services.RevoltAdminApiService"]},{"name":"class RevoltApi","description":"app.revolt.RevoltApi","location":"revolt-kotlin-api/app.revolt/-revolt-api/index.html","searchKeys":["RevoltApi","class RevoltApi","app.revolt.RevoltApi"]},{"name":"class RevoltApiExceptionHandler","description":"app.revolt.exception.RevoltApiExceptionHandler","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception-handler/index.html","searchKeys":["RevoltApiExceptionHandler","class RevoltApiExceptionHandler","app.revolt.exception.RevoltApiExceptionHandler"]},{"name":"class RevoltApiWebSocket(client: HttpClient, json: Json)","description":"app.revolt.websocket.RevoltApiWebSocket","location":"revolt-kotlin-api/app.revolt.websocket/-revolt-api-web-socket/index.html","searchKeys":["RevoltApiWebSocket","class RevoltApiWebSocket(client: HttpClient, json: Json)","app.revolt.websocket.RevoltApiWebSocket"]},{"name":"class RevoltAuthApiService(client: HttpClient)","description":"app.revolt.services.auth.RevoltAuthApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/index.html","searchKeys":["RevoltAuthApiService","class RevoltAuthApiService(client: HttpClient)","app.revolt.services.auth.RevoltAuthApiService"]},{"name":"class RevoltBotsApiService","description":"app.revolt.services.RevoltBotsApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-bots-api-service/index.html","searchKeys":["RevoltBotsApiService","class RevoltBotsApiService","app.revolt.services.RevoltBotsApiService"]},{"name":"class RevoltChannelsApiService(client: HttpClient)","description":"app.revolt.services.RevoltChannelsApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-channels-api-service/index.html","searchKeys":["RevoltChannelsApiService","class RevoltChannelsApiService(client: HttpClient)","app.revolt.services.RevoltChannelsApiService"]},{"name":"class RevoltCoreApiService(client: HttpClient)","description":"app.revolt.services.RevoltCoreApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-core-api-service/index.html","searchKeys":["RevoltCoreApiService","class RevoltCoreApiService(client: HttpClient)","app.revolt.services.RevoltCoreApiService"]},{"name":"class RevoltCustomisationApiService","description":"app.revolt.services.RevoltCustomisationApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-customisation-api-service/index.html","searchKeys":["RevoltCustomisationApiService","class RevoltCustomisationApiService","app.revolt.services.RevoltCustomisationApiService"]},{"name":"class RevoltFileApiService(client: HttpClient)","description":"app.revolt.services.RevoltFileApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-file-api-service/index.html","searchKeys":["RevoltFileApiService","class RevoltFileApiService(client: HttpClient)","app.revolt.services.RevoltFileApiService"]},{"name":"class RevoltInvitesApiService","description":"app.revolt.services.RevoltInvitesApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-invites-api-service/index.html","searchKeys":["RevoltInvitesApiService","class RevoltInvitesApiService","app.revolt.services.RevoltInvitesApiService"]},{"name":"class RevoltMFAApiService(client: HttpClient)","description":"app.revolt.services.auth.RevoltMFAApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/index.html","searchKeys":["RevoltMFAApiService","class RevoltMFAApiService(client: HttpClient)","app.revolt.services.auth.RevoltMFAApiService"]},{"name":"class RevoltMasqueradeApiModel(val name: String? = null, val avatar: String? = null, val color: String? = null)","description":"app.revolt.model.RevoltMasqueradeApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-masquerade-api-model/index.html","searchKeys":["RevoltMasqueradeApiModel","class RevoltMasqueradeApiModel(val name: String? = null, val avatar: String? = null, val color: String? = null)","app.revolt.model.RevoltMasqueradeApiModel"]},{"name":"class RevoltMessagingApiService(client: HttpClient)","description":"app.revolt.services.channels.RevoltMessagingApiService","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/index.html","searchKeys":["RevoltMessagingApiService","class RevoltMessagingApiService(client: HttpClient)","app.revolt.services.channels.RevoltMessagingApiService"]},{"name":"class RevoltMiscApiService","description":"app.revolt.services.RevoltMiscApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-misc-api-service/index.html","searchKeys":["RevoltMiscApiService","class RevoltMiscApiService","app.revolt.services.RevoltMiscApiService"]},{"name":"class RevoltOnboardingApiService(client: HttpClient)","description":"app.revolt.services.auth.RevoltOnboardingApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-onboarding-api-service/index.html","searchKeys":["RevoltOnboardingApiService","class RevoltOnboardingApiService(client: HttpClient)","app.revolt.services.auth.RevoltOnboardingApiService"]},{"name":"class RevoltServersApiService","description":"app.revolt.services.RevoltServersApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-servers-api-service/index.html","searchKeys":["RevoltServersApiService","class RevoltServersApiService","app.revolt.services.RevoltServersApiService"]},{"name":"class RevoltSessionApiService(client: HttpClient)","description":"app.revolt.services.auth.RevoltSessionApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/index.html","searchKeys":["RevoltSessionApiService","class RevoltSessionApiService(client: HttpClient)","app.revolt.services.auth.RevoltSessionApiService"]},{"name":"class RevoltUserChangeUsernameApiRequest(val username: String, val password: String)","description":"app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-change-username-api-request/index.html","searchKeys":["RevoltUserChangeUsernameApiRequest","class RevoltUserChangeUsernameApiRequest(val username: String, val password: String)","app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest"]},{"name":"class RevoltUsersApiService(client: HttpClient)","description":"app.revolt.services.RevoltUsersApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/index.html","searchKeys":["RevoltUsersApiService","class RevoltUsersApiService(client: HttpClient)","app.revolt.services.RevoltUsersApiService"]},{"name":"constructor()","description":"app.revolt.exception.RevoltApiExceptionHandler.RevoltApiExceptionHandler","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception-handler/-revolt-api-exception-handler.html","searchKeys":["RevoltApiExceptionHandler","constructor()","app.revolt.exception.RevoltApiExceptionHandler.RevoltApiExceptionHandler"]},{"name":"constructor()","description":"app.revolt.services.RevoltAdminApiService.RevoltAdminApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-admin-api-service/-revolt-admin-api-service.html","searchKeys":["RevoltAdminApiService","constructor()","app.revolt.services.RevoltAdminApiService.RevoltAdminApiService"]},{"name":"constructor()","description":"app.revolt.services.RevoltBotsApiService.RevoltBotsApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-bots-api-service/-revolt-bots-api-service.html","searchKeys":["RevoltBotsApiService","constructor()","app.revolt.services.RevoltBotsApiService.RevoltBotsApiService"]},{"name":"constructor()","description":"app.revolt.services.RevoltCustomisationApiService.RevoltCustomisationApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-customisation-api-service/-revolt-customisation-api-service.html","searchKeys":["RevoltCustomisationApiService","constructor()","app.revolt.services.RevoltCustomisationApiService.RevoltCustomisationApiService"]},{"name":"constructor()","description":"app.revolt.services.RevoltInvitesApiService.RevoltInvitesApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-invites-api-service/-revolt-invites-api-service.html","searchKeys":["RevoltInvitesApiService","constructor()","app.revolt.services.RevoltInvitesApiService.RevoltInvitesApiService"]},{"name":"constructor()","description":"app.revolt.services.RevoltMiscApiService.RevoltMiscApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-misc-api-service/-revolt-misc-api-service.html","searchKeys":["RevoltMiscApiService","constructor()","app.revolt.services.RevoltMiscApiService.RevoltMiscApiService"]},{"name":"constructor()","description":"app.revolt.services.RevoltServersApiService.RevoltServersApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-servers-api-service/-revolt-servers-api-service.html","searchKeys":["RevoltServersApiService","constructor()","app.revolt.services.RevoltServersApiService.RevoltServersApiService"]},{"name":"constructor(allowed: Int, disallowed: Int)","description":"app.revolt.model.general.RevoltOverrideFieldApiModel.RevoltOverrideFieldApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-override-field-api-model/-revolt-override-field-api-model.html","searchKeys":["RevoltOverrideFieldApiModel","constructor(allowed: Int, disallowed: Int)","app.revolt.model.general.RevoltOverrideFieldApiModel.RevoltOverrideFieldApiModel"]},{"name":"constructor(captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration, email: Boolean, inviteOnly: Boolean, autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.Features","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-features.html","searchKeys":["Features","constructor(captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration, email: Boolean, inviteOnly: Boolean, autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration)","app.revolt.model.RevoltConfigurationApiModel.Features.Features"]},{"name":"constructor(channel: String)","description":"app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping.BeginTyping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-begin-typing/-begin-typing.html","searchKeys":["BeginTyping","constructor(channel: String)","app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping.BeginTyping"]},{"name":"constructor(channel: String)","description":"app.revolt.websocket.client.RevoltClientApiEvent.EndTyping.EndTyping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-end-typing/-end-typing.html","searchKeys":["EndTyping","constructor(channel: String)","app.revolt.websocket.client.RevoltClientApiEvent.EndTyping.EndTyping"]},{"name":"constructor(channelId: String, limit: Int? = null, before: String? = null, after: String? = null, sort: RevoltFetchMessagesRequestApiModel.Sort = Sort.Latest, nearby: String? = null)","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.RevoltFetchMessagesRequestApiModel","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-revolt-fetch-messages-request-api-model.html","searchKeys":["RevoltFetchMessagesRequestApiModel","constructor(channelId: String, limit: Int? = null, before: String? = null, after: String? = null, sort: RevoltFetchMessagesRequestApiModel.Sort = Sort.Latest, nearby: String? = null)","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.RevoltFetchMessagesRequestApiModel"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.RevoltChannelsApiService.RevoltChannelsApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-channels-api-service/-revolt-channels-api-service.html","searchKeys":["RevoltChannelsApiService","constructor(client: HttpClient)","app.revolt.services.RevoltChannelsApiService.RevoltChannelsApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.RevoltCoreApiService.RevoltCoreApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-core-api-service/-revolt-core-api-service.html","searchKeys":["RevoltCoreApiService","constructor(client: HttpClient)","app.revolt.services.RevoltCoreApiService.RevoltCoreApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.RevoltFileApiService.RevoltFileApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-file-api-service/-revolt-file-api-service.html","searchKeys":["RevoltFileApiService","constructor(client: HttpClient)","app.revolt.services.RevoltFileApiService.RevoltFileApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.RevoltUsersApiService.RevoltUsersApiService","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/-revolt-users-api-service.html","searchKeys":["RevoltUsersApiService","constructor(client: HttpClient)","app.revolt.services.RevoltUsersApiService.RevoltUsersApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.auth.RevoltAccountApiService.RevoltAccountApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/-revolt-account-api-service.html","searchKeys":["RevoltAccountApiService","constructor(client: HttpClient)","app.revolt.services.auth.RevoltAccountApiService.RevoltAccountApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.auth.RevoltAuthApiService.RevoltAuthApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/-revolt-auth-api-service.html","searchKeys":["RevoltAuthApiService","constructor(client: HttpClient)","app.revolt.services.auth.RevoltAuthApiService.RevoltAuthApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.auth.RevoltMFAApiService.RevoltMFAApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/-revolt-m-f-a-api-service.html","searchKeys":["RevoltMFAApiService","constructor(client: HttpClient)","app.revolt.services.auth.RevoltMFAApiService.RevoltMFAApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.auth.RevoltOnboardingApiService.RevoltOnboardingApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-onboarding-api-service/-revolt-onboarding-api-service.html","searchKeys":["RevoltOnboardingApiService","constructor(client: HttpClient)","app.revolt.services.auth.RevoltOnboardingApiService.RevoltOnboardingApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.auth.RevoltSessionApiService.RevoltSessionApiService","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/-revolt-session-api-service.html","searchKeys":["RevoltSessionApiService","constructor(client: HttpClient)","app.revolt.services.auth.RevoltSessionApiService.RevoltSessionApiService"]},{"name":"constructor(client: HttpClient)","description":"app.revolt.services.channels.RevoltMessagingApiService.RevoltMessagingApiService","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/-revolt-messaging-api-service.html","searchKeys":["RevoltMessagingApiService","constructor(client: HttpClient)","app.revolt.services.channels.RevoltMessagingApiService.RevoltMessagingApiService"]},{"name":"constructor(client: HttpClient, json: Json)","description":"app.revolt.websocket.RevoltApiWebSocket.RevoltApiWebSocket","location":"revolt-kotlin-api/app.revolt.websocket/-revolt-api-web-socket/-revolt-api-web-socket.html","searchKeys":["RevoltApiWebSocket","constructor(client: HttpClient, json: Json)","app.revolt.websocket.RevoltApiWebSocket.RevoltApiWebSocket"]},{"name":"constructor(code: String)","description":"app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest.RevoltVerifyEmailApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-verify-email-api-request/-revolt-verify-email-api-request.html","searchKeys":["RevoltVerifyEmailApiRequest","constructor(code: String)","app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest.RevoltVerifyEmailApiRequest"]},{"name":"constructor(commitSHA: String, commitTimestamp: String, semver: String, originUrl: String, timestamp: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Build.Build","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/-build.html","searchKeys":["Build","constructor(commitSHA: String, commitTimestamp: String, semver: String, originUrl: String, timestamp: String)","app.revolt.model.RevoltConfigurationApiModel.Build.Build"]},{"name":"constructor(content: String)","description":"app.revolt.model.RevoltMessageApiModel.System.Text.Text","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-text/-text.html","searchKeys":["Text","constructor(content: String)","app.revolt.model.RevoltMessageApiModel.System.Text.Text"]},{"name":"constructor(content: String? = null, background: RevoltFileApiModel? = null)","description":"app.revolt.model.user.RevoltUserProfileApiModel.RevoltUserProfileApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-profile-api-model/-revolt-user-profile-api-model.html","searchKeys":["RevoltUserProfileApiModel","constructor(content: String? = null, background: RevoltFileApiModel? = null)","app.revolt.model.user.RevoltUserProfileApiModel.RevoltUserProfileApiModel"]},{"name":"constructor(content: String? = null, background: String? = null)","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.Profile","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-profile/-profile.html","searchKeys":["Profile","constructor(content: String? = null, background: String? = null)","app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.Profile"]},{"name":"constructor(data: Long)","description":"app.revolt.websocket.client.RevoltClientApiEvent.Ping.Ping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-ping/-ping.html","searchKeys":["Ping","constructor(data: Long)","app.revolt.websocket.client.RevoltClientApiEvent.Ping.Ping"]},{"name":"constructor(data: Long)","description":"app.revolt.websocket.server.RevoltServerApiEvent.Pong.Pong","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-pong/-pong.html","searchKeys":["Pong","constructor(data: Long)","app.revolt.websocket.server.RevoltServerApiEvent.Pong.Pong"]},{"name":"constructor(displayName: String? = null, avatarId: String? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserEditApiRequest.Profile? = null, badges: Int? = null, flags: Int? = null, remove: List<RevoltUserEditApiRequest.FieldsUser>? = null)","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.RevoltUserEditApiRequest","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-revolt-user-edit-api-request.html","searchKeys":["RevoltUserEditApiRequest","constructor(displayName: String? = null, avatarId: String? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserEditApiRequest.Profile? = null, badges: Int? = null, flags: Int? = null, remove: List<RevoltUserEditApiRequest.FieldsUser>? = null)","app.revolt.model.user.request.RevoltUserEditApiRequest.RevoltUserEditApiRequest"]},{"name":"constructor(email: String, captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.RevoltResendVerificationApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-resend-verification-api-request/-revolt-resend-verification-api-request.html","searchKeys":["RevoltResendVerificationApiRequest","constructor(email: String, captcha: String?)","app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.RevoltResendVerificationApiRequest"]},{"name":"constructor(email: String, captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.RevoltSendPasswordResetApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-send-password-reset-api-request/-revolt-send-password-reset-api-request.html","searchKeys":["RevoltSendPasswordResetApiRequest","constructor(email: String, captcha: String?)","app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.RevoltSendPasswordResetApiRequest"]},{"name":"constructor(email: String, currentPassword: String)","description":"app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.RevoltChangeEmailApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-email-api-request/-revolt-change-email-api-request.html","searchKeys":["RevoltChangeEmailApiRequest","constructor(email: String, currentPassword: String)","app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.RevoltChangeEmailApiRequest"]},{"name":"constructor(email: String, password: String, friendlyName: String? = null)","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.Normal","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-normal/-normal.html","searchKeys":["Normal","constructor(email: String, password: String, friendlyName: String? = null)","app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.Normal"]},{"name":"constructor(email: String, password: String, invite: String?, captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.RevoltCreateAccountApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/-revolt-create-account-api-request.html","searchKeys":["RevoltCreateAccountApiRequest","constructor(email: String, password: String, invite: String?, captcha: String?)","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.RevoltCreateAccountApiRequest"]},{"name":"constructor(emailOtp: Boolean, trustedHandover: Boolean, emailMFA: Boolean, totpMFA: Boolean, securityKeyMFA: Boolean, recoveryActive: Boolean)","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.RevoltMFAStatusApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/-revolt-m-f-a-status-api-response.html","searchKeys":["RevoltMFAStatusApiResponse","constructor(emailOtp: Boolean, trustedHandover: Boolean, emailMFA: Boolean, totpMFA: Boolean, securityKeyMFA: Boolean, recoveryActive: Boolean)","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.RevoltMFAStatusApiResponse"]},{"name":"constructor(enabled: Boolean, key: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.HCaptchaConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-h-captcha-configuration/-h-captcha-configuration.html","searchKeys":["HCaptchaConfiguration","constructor(enabled: Boolean, key: String)","app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.HCaptchaConfiguration"]},{"name":"constructor(enabled: Boolean, url: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.GeneralServerConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-general-server-configuration/-general-server-configuration.html","searchKeys":["GeneralServerConfiguration","constructor(enabled: Boolean, url: String)","app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.GeneralServerConfiguration"]},{"name":"constructor(enabled: Boolean, url: String, ws: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.VoiceServerConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-voice-server-configuration/-voice-server-configuration.html","searchKeys":["VoiceServerConfiguration","constructor(enabled: Boolean, url: String, ws: String)","app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.VoiceServerConfiguration"]},{"name":"constructor(endpoint: String, p256dh: String, auth: String)","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.Subscription","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-subscription/-subscription.html","searchKeys":["Subscription","constructor(endpoint: String, p256dh: String, auth: String)","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.Subscription"]},{"name":"constructor(error: RevoltErrorApiType, location: String?)","description":"app.revolt.exception.RevoltApiException.Default.Default","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-default/-default.html","searchKeys":["Default","constructor(error: RevoltErrorApiType, location: String?)","app.revolt.exception.RevoltApiException.Default.Default"]},{"name":"constructor(error: RevoltServerApiEvent.Error.ErrorType)","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.Error","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error.html","searchKeys":["Error","constructor(error: RevoltServerApiEvent.Error.ErrorType)","app.revolt.websocket.server.RevoltServerApiEvent.Error.Error"]},{"name":"constructor(events: List<RevoltServerApiEvent>)","description":"app.revolt.websocket.server.RevoltServerApiEvent.Bulk.Bulk","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-bulk/-bulk.html","searchKeys":["Bulk","constructor(events: List<RevoltServerApiEvent>)","app.revolt.websocket.server.RevoltServerApiEvent.Bulk.Bulk"]},{"name":"constructor(fieldError: String?, location: String?)","description":"app.revolt.exception.RevoltApiException.FieldValidation.FieldValidation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-field-validation/-field-validation.html","searchKeys":["FieldValidation","constructor(fieldError: String?, location: String?)","app.revolt.exception.RevoltApiException.FieldValidation.FieldValidation"]},{"name":"constructor(fileName: String, bytes: ByteArray, contentType: RevoltFileUploadApiRequest.ContentType)","description":"app.revolt.model.RevoltFileUploadApiRequest.RevoltFileUploadApiRequest","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-revolt-file-upload-api-request.html","searchKeys":["RevoltFileUploadApiRequest","constructor(fileName: String, bytes: ByteArray, contentType: RevoltFileUploadApiRequest.ContentType)","app.revolt.model.RevoltFileUploadApiRequest.RevoltFileUploadApiRequest"]},{"name":"constructor(flags: Int)","description":"app.revolt.model.user.response.RevoltUserFlagsApiResponse.RevoltUserFlagsApiResponse","location":"revolt-kotlin-api/app.revolt.model.user.response/-revolt-user-flags-api-response/-revolt-user-flags-api-response.html","searchKeys":["RevoltUserFlagsApiResponse","constructor(flags: Int)","app.revolt.model.user.response.RevoltUserFlagsApiResponse.RevoltUserFlagsApiResponse"]},{"name":"constructor(friendlyName: String)","description":"app.revolt.model.auth.session.request.RevoltSessionEditApiRequest.RevoltSessionEditApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-session-edit-api-request/-revolt-session-edit-api-request.html","searchKeys":["RevoltSessionEditApiRequest","constructor(friendlyName: String)","app.revolt.model.auth.session.request.RevoltSessionEditApiRequest.RevoltSessionEditApiRequest"]},{"name":"constructor(from: String, to: String)","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.ChannelOwnershipChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-ownership-changed/-channel-ownership-changed.html","searchKeys":["ChannelOwnershipChanged","constructor(from: String, to: String)","app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.ChannelOwnershipChanged"]},{"name":"constructor(iconUrl: String? = null, url: String? = null, title: String? = null, description: String? = null, media: RevoltFileApiModel? = null, color: String? = null)","description":"app.revolt.model.RevoltEmbedApiModel.Text.Text","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/-text.html","searchKeys":["Text","constructor(iconUrl: String? = null, url: String? = null, title: String? = null, description: String? = null, media: RevoltFileApiModel? = null, color: String? = null)","app.revolt.model.RevoltEmbedApiModel.Text.Text"]},{"name":"constructor(id: RevoltServerMemberApiModel.ID, joinedAt: String, nickname: String? = null, avatar: RevoltFileApiModel? = null, roles: List<String>? = null, timeout: String? = null)","description":"app.revolt.model.server.RevoltServerMemberApiModel.RevoltServerMemberApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/-revolt-server-member-api-model.html","searchKeys":["RevoltServerMemberApiModel","constructor(id: RevoltServerMemberApiModel.ID, joinedAt: String, nickname: String? = null, avatar: RevoltFileApiModel? = null, roles: List<String>? = null, timeout: String? = null)","app.revolt.model.server.RevoltServerMemberApiModel.RevoltServerMemberApiModel"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable.Streamable","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-streamable/-streamable.html","searchKeys":["Streamable","constructor(id: String)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable.Streamable"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltFileUploadApiResponse.RevoltFileUploadApiResponse","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-response/-revolt-file-upload-api-response.html","searchKeys":["RevoltFileUploadApiResponse","constructor(id: String)","app.revolt.model.RevoltFileUploadApiResponse.RevoltFileUploadApiResponse"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserBanned.UserBanned","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-banned/-user-banned.html","searchKeys":["UserBanned","constructor(id: String)","app.revolt.model.RevoltMessageApiModel.System.UserBanned.UserBanned"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserJoined.UserJoined","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-joined/-user-joined.html","searchKeys":["UserJoined","constructor(id: String)","app.revolt.model.RevoltMessageApiModel.System.UserJoined.UserJoined"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserKicked.UserKicked","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-kicked/-user-kicked.html","searchKeys":["UserKicked","constructor(id: String)","app.revolt.model.RevoltMessageApiModel.System.UserKicked.UserKicked"]},{"name":"constructor(id: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserLeft.UserLeft","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-left/-user-left.html","searchKeys":["UserLeft","constructor(id: String)","app.revolt.model.RevoltMessageApiModel.System.UserLeft.UserLeft"]},{"name":"constructor(id: String)","description":"app.revolt.model.general.RevoltEmojiApiModel.Parent.Server.Server","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-parent/-server/-server.html","searchKeys":["Server","constructor(id: String)","app.revolt.model.general.RevoltEmojiApiModel.Parent.Server.Server"]},{"name":"constructor(id: String, accountId: String, token: String, validated: Boolean, authorised: Boolean, lastTotpCode: String? = null)","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.RevoltCreateMFATicketApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/-revolt-create-m-f-a-ticket-api-response.html","searchKeys":["RevoltCreateMFATicketApiResponse","constructor(id: String, accountId: String, token: String, validated: Boolean, authorised: Boolean, lastTotpCode: String? = null)","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.RevoltCreateMFATicketApiResponse"]},{"name":"constructor(id: String, accountId: String, token: String, validated: Boolean, authorised: Boolean, lastTotpCode: String?)","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.Ticket","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/-ticket.html","searchKeys":["Ticket","constructor(id: String, accountId: String, token: String, validated: Boolean, authorised: Boolean, lastTotpCode: String?)","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.Ticket"]},{"name":"constructor(id: String, active: Boolean, recipients: List<String>, lastMessageId: String? = null)","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.DirectMessage","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/-direct-message.html","searchKeys":["DirectMessage","constructor(id: String, active: Boolean, recipients: List<String>, lastMessageId: String? = null)","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.DirectMessage"]},{"name":"constructor(id: String, by: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserAdded.UserAdded","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-added/-user-added.html","searchKeys":["UserAdded","constructor(id: String, by: String)","app.revolt.model.RevoltMessageApiModel.System.UserAdded.UserAdded"]},{"name":"constructor(id: String, by: String)","description":"app.revolt.model.RevoltMessageApiModel.System.UserRemoved.UserRemoved","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-removed/-user-removed.html","searchKeys":["UserRemoved","constructor(id: String, by: String)","app.revolt.model.RevoltMessageApiModel.System.UserRemoved.UserRemoved"]},{"name":"constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Bandcamp","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-bandcamp.html","searchKeys":["Bandcamp","constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Bandcamp"]},{"name":"constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Lightspeed","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-lightspeed.html","searchKeys":["Lightspeed","constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Lightspeed"]},{"name":"constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Twitch","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-twitch.html","searchKeys":["Twitch","constructor(id: String, contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Twitch"]},{"name":"constructor(id: String, contentType: String)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.Spotify","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-spotify/-spotify.html","searchKeys":["Spotify","constructor(id: String, contentType: String)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.Spotify"]},{"name":"constructor(id: String, data: RevoltUserUpdateApiModel, clear: List<RevoltServerApiEvent.UserUpdate.Field>)","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.UserUpdate","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-user-update.html","searchKeys":["UserUpdate","constructor(id: String, data: RevoltUserUpdateApiModel, clear: List<RevoltServerApiEvent.UserUpdate.Field>)","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.UserUpdate"]},{"name":"constructor(id: String, email: String)","description":"app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.RevoltFetchAccountApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-fetch-account-api-response/-revolt-fetch-account-api-response.html","searchKeys":["RevoltFetchAccountApiResponse","constructor(id: String, email: String)","app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.RevoltFetchAccountApiResponse"]},{"name":"constructor(id: String, name: String)","description":"app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.RevoltFetchSessionApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-fetch-session-api-response/-revolt-fetch-session-api-response.html","searchKeys":["RevoltFetchSessionApiResponse","constructor(id: String, name: String)","app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.RevoltFetchSessionApiResponse"]},{"name":"constructor(id: String, name: String, owner: String, description: String? = null, recipients: List<String>, icon: RevoltFileApiModel? = null, lastMessageId: String? = null, permissions: Int? = null, nsfw: Boolean? = null)","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.Group","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/-group.html","searchKeys":["Group","constructor(id: String, name: String, owner: String, description: String? = null, recipients: List<String>, icon: RevoltFileApiModel? = null, lastMessageId: String? = null, permissions: Int? = null, nsfw: Boolean? = null)","app.revolt.model.channel.RevoltChannelApiModel.Group.Group"]},{"name":"constructor(id: String, nonce: String? = null, channel: String, author: String, webhook: RevoltMessageApiModel.Webhook? = null, content: String? = null, system: RevoltMessageApiModel.System? = null, attachments: List<RevoltFileApiModel>? = null, edited: String? = null, embeds: List<RevoltEmbedApiModel>? = null, mentions: List<String>? = null, replies: List<String>? = null, reactions: Map<String, List<String>>? = null, interactions: RevoltMessageApiModel.Interactions? = null, masquerade: RevoltMasqueradeApiModel? = null)","description":"app.revolt.model.RevoltMessageApiModel.RevoltMessageApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-revolt-message-api-model.html","searchKeys":["RevoltMessageApiModel","constructor(id: String, nonce: String? = null, channel: String, author: String, webhook: RevoltMessageApiModel.Webhook? = null, content: String? = null, system: RevoltMessageApiModel.System? = null, attachments: List<RevoltFileApiModel>? = null, edited: String? = null, embeds: List<RevoltEmbedApiModel>? = null, mentions: List<String>? = null, replies: List<String>? = null, reactions: Map<String, List<String>>? = null, interactions: RevoltMessageApiModel.Interactions? = null, masquerade: RevoltMasqueradeApiModel? = null)","app.revolt.model.RevoltMessageApiModel.RevoltMessageApiModel"]},{"name":"constructor(id: String, owner: String, name: String, description: String? = null, channels: List<String>, categories: List<RevoltServerApiModel.Category>? = null, systemMessages: RevoltServerApiModel.SystemMessages? = null, roles: Map<String, RevoltServerRoleApiModel>? = null, defaultPermissions: Int? = null, icon: RevoltFileApiModel? = null, banner: RevoltFileApiModel? = null, flags: Int? = null, nsfw: Boolean? = null, analytics: Boolean? = null, discoverable: Boolean? = null)","description":"app.revolt.model.server.RevoltServerApiModel.RevoltServerApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-revolt-server-api-model.html","searchKeys":["RevoltServerApiModel","constructor(id: String, owner: String, name: String, description: String? = null, channels: List<String>, categories: List<RevoltServerApiModel.Category>? = null, systemMessages: RevoltServerApiModel.SystemMessages? = null, roles: Map<String, RevoltServerRoleApiModel>? = null, defaultPermissions: Int? = null, icon: RevoltFileApiModel? = null, banner: RevoltFileApiModel? = null, flags: Int? = null, nsfw: Boolean? = null, analytics: Boolean? = null, discoverable: Boolean? = null)","app.revolt.model.server.RevoltServerApiModel.RevoltServerApiModel"]},{"name":"constructor(id: String, parent: RevoltEmojiApiModel.Parent, creatorId: String, name: String, animated: Boolean? = null, nsfw: Boolean? = null)","description":"app.revolt.model.general.RevoltEmojiApiModel.RevoltEmojiApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-revolt-emoji-api-model.html","searchKeys":["RevoltEmojiApiModel","constructor(id: String, parent: RevoltEmojiApiModel.Parent, creatorId: String, name: String, animated: Boolean? = null, nsfw: Boolean? = null)","app.revolt.model.general.RevoltEmojiApiModel.RevoltEmojiApiModel"]},{"name":"constructor(id: String, server: String, name: String, description: String? = null, icon: RevoltFileApiModel? = null, defaultPermissions: RevoltOverrideFieldApiModel? = null, rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, nsfw: Boolean? = null)","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.VoiceChannel","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/-voice-channel.html","searchKeys":["VoiceChannel","constructor(id: String, server: String, name: String, description: String? = null, icon: RevoltFileApiModel? = null, defaultPermissions: RevoltOverrideFieldApiModel? = null, rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, nsfw: Boolean? = null)","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.VoiceChannel"]},{"name":"constructor(id: String, server: String, name: String, description: String? = null, icon: RevoltFileApiModel? = null, lastMessageId: String? = null, defaultPermissions: RevoltOverrideFieldApiModel? = null, rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, nsfw: Boolean? = null)","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.TextChannel","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/-text-channel.html","searchKeys":["TextChannel","constructor(id: String, server: String, name: String, description: String? = null, icon: RevoltFileApiModel? = null, lastMessageId: String? = null, defaultPermissions: RevoltOverrideFieldApiModel? = null, rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, nsfw: Boolean? = null)","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.TextChannel"]},{"name":"constructor(id: String, status: RevoltRelationshipStatusApiType)","description":"app.revolt.model.user.RevoltUserApiModel.Relationship.Relationship","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-relationship/-relationship.html","searchKeys":["Relationship","constructor(id: String, status: RevoltRelationshipStatusApiType)","app.revolt.model.user.RevoltUserApiModel.Relationship.Relationship"]},{"name":"constructor(id: String, tag: String, filename: String, metadata: RevoltMetadataApiModel, contentType: String, size: Int, deleted: Boolean? = null, reported: Boolean? = null, messageId: String? = null, userId: String? = null, serverId: String? = null, objectId: String? = null)","description":"app.revolt.model.general.RevoltFileApiModel.RevoltFileApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/-revolt-file-api-model.html","searchKeys":["RevoltFileApiModel","constructor(id: String, tag: String, filename: String, metadata: RevoltMetadataApiModel, contentType: String, size: Int, deleted: Boolean? = null, reported: Boolean? = null, messageId: String? = null, userId: String? = null, serverId: String? = null, objectId: String? = null)","app.revolt.model.general.RevoltFileApiModel.RevoltFileApiModel"]},{"name":"constructor(id: String, timestamp: String? = null)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.Youtube","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-youtube/-youtube.html","searchKeys":["Youtube","constructor(id: String, timestamp: String? = null)","app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.Youtube"]},{"name":"constructor(id: String, title: String, channels: List<String>)","description":"app.revolt.model.server.RevoltServerApiModel.Category.Category","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-category/-category.html","searchKeys":["Category","constructor(id: String, title: String, channels: List<String>)","app.revolt.model.server.RevoltServerApiModel.Category.Category"]},{"name":"constructor(id: String, user: String)","description":"app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.SavedMessages","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-saved-messages/-saved-messages.html","searchKeys":["SavedMessages","constructor(id: String, user: String)","app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.SavedMessages"]},{"name":"constructor(id: String, userId: String, token: String, name: String, subscription: RevoltLoginApiResponse.Success.Subscription? = null)","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Success","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-success.html","searchKeys":["Success","constructor(id: String, userId: String, token: String, name: String, subscription: RevoltLoginApiResponse.Success.Subscription? = null)","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Success"]},{"name":"constructor(id: String, username: String, discriminator: String, displayName: String? = null, avatar: RevoltFileApiModel? = null, relations: List<RevoltUserApiModel.Relationship>? = null, badges: Int? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserProfileApiModel? = null, flags: Int? = null, privileged: Boolean? = null, bot: RevoltUserApiModel.Bot? = null, relationship: RevoltRelationshipStatusApiType? = null, online: Boolean? = null)","description":"app.revolt.model.user.RevoltUserApiModel.RevoltUserApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-revolt-user-api-model.html","searchKeys":["RevoltUserApiModel","constructor(id: String, username: String, discriminator: String, displayName: String? = null, avatar: RevoltFileApiModel? = null, relations: List<RevoltUserApiModel.Relationship>? = null, badges: Int? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserProfileApiModel? = null, flags: Int? = null, privileged: Boolean? = null, bot: RevoltUserApiModel.Bot? = null, relationship: RevoltRelationshipStatusApiType? = null, online: Boolean? = null)","app.revolt.model.user.RevoltUserApiModel.RevoltUserApiModel"]},{"name":"constructor(max: Int, error: RevoltErrorApiType, location: String?)","description":"app.revolt.exception.RevoltApiException.CountLimitException.CountLimitException","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-count-limit-exception/-count-limit-exception.html","searchKeys":["CountLimitException","constructor(max: Int, error: RevoltErrorApiType, location: String?)","app.revolt.exception.RevoltApiException.CountLimitException.CountLimitException"]},{"name":"constructor(message: String?)","description":"app.revolt.exception.RevoltApiException.Unknown.Unknown","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-unknown/-unknown.html","searchKeys":["Unknown","constructor(message: String?)","app.revolt.exception.RevoltApiException.Unknown.Unknown"]},{"name":"constructor(messages: List<RevoltMessageApiModel>, users: List<RevoltUserApiModel>, members: List<RevoltServerMemberApiModel>? = null)","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.RevoltFetchMessagesResponseApiModel","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-response-api-model/-revolt-fetch-messages-response-api-model.html","searchKeys":["RevoltFetchMessagesResponseApiModel","constructor(messages: List<RevoltMessageApiModel>, users: List<RevoltUserApiModel>, members: List<RevoltServerMemberApiModel>? = null)","app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.RevoltFetchMessagesResponseApiModel"]},{"name":"constructor(mfaTicket: String, mfaResponse: RevoltMFAApiModel, friendlyName: String? = null)","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.MFA","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-m-f-a/-m-f-a.html","searchKeys":["MFA","constructor(mfaTicket: String, mfaResponse: RevoltMFAApiModel, friendlyName: String? = null)","app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.MFA"]},{"name":"constructor(name: String, avatar: String? = null)","description":"app.revolt.model.RevoltMessageApiModel.Webhook.Webhook","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-webhook/-webhook.html","searchKeys":["Webhook","constructor(name: String, avatar: String? = null)","app.revolt.model.RevoltMessageApiModel.Webhook.Webhook"]},{"name":"constructor(name: String, by: String)","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.ChannelDescriptionChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-description-changed/-channel-description-changed.html","searchKeys":["ChannelDescriptionChanged","constructor(name: String, by: String)","app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.ChannelDescriptionChanged"]},{"name":"constructor(name: String, by: String)","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.ChannelIconChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-icon-changed/-channel-icon-changed.html","searchKeys":["ChannelIconChanged","constructor(name: String, by: String)","app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.ChannelIconChanged"]},{"name":"constructor(name: String, by: String)","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.ChannelRenamed","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-renamed/-channel-renamed.html","searchKeys":["ChannelRenamed","constructor(name: String, by: String)","app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.ChannelRenamed"]},{"name":"constructor(name: String, permissions: RevoltOverrideFieldApiModel, color: String? = null, hoist: Boolean? = null, rank: Int = 0)","description":"app.revolt.model.server.RevoltServerRoleApiModel.RevoltServerRoleApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/-revolt-server-role-api-model.html","searchKeys":["RevoltServerRoleApiModel","constructor(name: String, permissions: RevoltOverrideFieldApiModel, color: String? = null, hoist: Boolean? = null, rank: Int = 0)","app.revolt.model.server.RevoltServerRoleApiModel.RevoltServerRoleApiModel"]},{"name":"constructor(name: String? = null, avatar: String? = null, color: String? = null)","description":"app.revolt.model.RevoltMasqueradeApiModel.RevoltMasqueradeApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-masquerade-api-model/-revolt-masquerade-api-model.html","searchKeys":["RevoltMasqueradeApiModel","constructor(name: String? = null, avatar: String? = null, color: String? = null)","app.revolt.model.RevoltMasqueradeApiModel.RevoltMasqueradeApiModel"]},{"name":"constructor(onboarding: Boolean)","description":"app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse.RevoltOnboardingStatusApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.response/-revolt-onboarding-status-api-response/-revolt-onboarding-status-api-response.html","searchKeys":["RevoltOnboardingStatusApiResponse","constructor(onboarding: Boolean)","app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse.RevoltOnboardingStatusApiResponse"]},{"name":"constructor(operation: String, with: String, collection: String?, location: String?)","description":"app.revolt.exception.RevoltApiException.DatabaseError.DatabaseError","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/-database-error.html","searchKeys":["DatabaseError","constructor(operation: String, with: String, collection: String?, location: String?)","app.revolt.exception.RevoltApiException.DatabaseError.DatabaseError"]},{"name":"constructor(owner: String)","description":"app.revolt.model.user.RevoltUserApiModel.Bot.Bot","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-bot/-bot.html","searchKeys":["Bot","constructor(owner: String)","app.revolt.model.user.RevoltUserApiModel.Bot.Bot"]},{"name":"constructor(password: String)","description":"app.revolt.model.auth.RevoltMFAApiModel.Password.Password","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-password/-password.html","searchKeys":["Password","constructor(password: String)","app.revolt.model.auth.RevoltMFAApiModel.Password.Password"]},{"name":"constructor(password: String)","description":"app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest.RevoltCreateMFATicketApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.request/-revolt-create-m-f-a-ticket-api-request/-revolt-create-m-f-a-ticket-api-request.html","searchKeys":["RevoltCreateMFATicketApiRequest","constructor(password: String)","app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest.RevoltCreateMFATicketApiRequest"]},{"name":"constructor(password: String, currentPassword: String)","description":"app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.RevoltChangePasswordApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-password-api-request/-revolt-change-password-api-request.html","searchKeys":["RevoltChangePasswordApiRequest","constructor(password: String, currentPassword: String)","app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.RevoltChangePasswordApiRequest"]},{"name":"constructor(permissionType: RevoltPermissionApiType, location: String?)","description":"app.revolt.exception.RevoltApiException.MissingPermission.MissingPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-permission/-missing-permission.html","searchKeys":["MissingPermission","constructor(permissionType: RevoltPermissionApiType, location: String?)","app.revolt.exception.RevoltApiException.MissingPermission.MissingPermission"]},{"name":"constructor(permissionType: RevoltUserPermissionApiType, location: String?)","description":"app.revolt.exception.RevoltApiException.MissingUserPermission.MissingUserPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-user-permission/-missing-user-permission.html","searchKeys":["MissingUserPermission","constructor(permissionType: RevoltUserPermissionApiType, location: String?)","app.revolt.exception.RevoltApiException.MissingUserPermission.MissingUserPermission"]},{"name":"constructor(reactions: List<String>?, restrictReactions: Boolean? = null)","description":"app.revolt.model.RevoltMessageApiModel.Interactions.Interactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-interactions/-interactions.html","searchKeys":["Interactions","constructor(reactions: List<String>?, restrictReactions: Boolean? = null)","app.revolt.model.RevoltMessageApiModel.Interactions.Interactions"]},{"name":"constructor(recoveryCode: String)","description":"app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode.RecoveryCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-recovery-code/-recovery-code.html","searchKeys":["RecoveryCode","constructor(recoveryCode: String)","app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode.RecoveryCode"]},{"name":"constructor(retryAfter: Int)","description":"app.revolt.exception.RevoltApiException.RateLimitException.RateLimitException","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-rate-limit-exception/-rate-limit-exception.html","searchKeys":["RateLimitException","constructor(retryAfter: Int)","app.revolt.exception.RevoltApiException.RateLimitException.RateLimitException"]},{"name":"constructor(revolt: String, features: RevoltConfigurationApiModel.Features, ws: String, app: String, vapid: String, build: RevoltConfigurationApiModel.Build)","description":"app.revolt.model.RevoltConfigurationApiModel.RevoltConfigurationApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-revolt-configuration-api-model.html","searchKeys":["RevoltConfigurationApiModel","constructor(revolt: String, features: RevoltConfigurationApiModel.Features, ws: String, app: String, vapid: String, build: RevoltConfigurationApiModel.Build)","app.revolt.model.RevoltConfigurationApiModel.RevoltConfigurationApiModel"]},{"name":"constructor(secret: String)","description":"app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse.RevoltGenerateTOTPSecretApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-generate-t-o-t-p-secret-api-response/-revolt-generate-t-o-t-p-secret-api-response.html","searchKeys":["RevoltGenerateTOTPSecretApiResponse","constructor(secret: String)","app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse.RevoltGenerateTOTPSecretApiResponse"]},{"name":"constructor(text: String? = null, presence: RevoltUserPresenceApiType? = null)","description":"app.revolt.model.user.RevoltUserStatusApiModel.RevoltUserStatusApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-status-api-model/-revolt-user-status-api-model.html","searchKeys":["RevoltUserStatusApiModel","constructor(text: String? = null, presence: RevoltUserPresenceApiType? = null)","app.revolt.model.user.RevoltUserStatusApiModel.RevoltUserStatusApiModel"]},{"name":"constructor(ticket: RevoltVerifyEmailApiResponse.Ticket)","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.RevoltVerifyEmailApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-revolt-verify-email-api-response.html","searchKeys":["RevoltVerifyEmailApiResponse","constructor(ticket: RevoltVerifyEmailApiResponse.Ticket)","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.RevoltVerifyEmailApiResponse"]},{"name":"constructor(ticket: String, allowedMethods: RevoltMFAMethodApiType)","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.MFA","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-m-f-a/-m-f-a.html","searchKeys":["MFA","constructor(ticket: String, allowedMethods: RevoltMFAMethodApiType)","app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.MFA"]},{"name":"constructor(token: String)","description":"app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest.RevoltConfirmAccountDeletionApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-confirm-account-deletion-api-request/-revolt-confirm-account-deletion-api-request.html","searchKeys":["RevoltConfirmAccountDeletionApiRequest","constructor(token: String)","app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest.RevoltConfirmAccountDeletionApiRequest"]},{"name":"constructor(token: String)","description":"app.revolt.websocket.client.RevoltClientApiEvent.Authenticate.Authenticate","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-authenticate/-authenticate.html","searchKeys":["Authenticate","constructor(token: String)","app.revolt.websocket.client.RevoltClientApiEvent.Authenticate.Authenticate"]},{"name":"constructor(token: String, password: String, removeSessions: Boolean = false)","description":"app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.RevoltResetPasswordApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-reset-password-api-request/-revolt-reset-password-api-request.html","searchKeys":["RevoltResetPasswordApiRequest","constructor(token: String, password: String, removeSessions: Boolean = false)","app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.RevoltResetPasswordApiRequest"]},{"name":"constructor(token: String? = null)","description":"app.revolt.RevoltApiConfig.RevoltApiConfig","location":"revolt-kotlin-api/app.revolt/-revolt-api-config/-revolt-api-config.html","searchKeys":["RevoltApiConfig","constructor(token: String? = null)","app.revolt.RevoltApiConfig.RevoltApiConfig"]},{"name":"constructor(totpCode: String)","description":"app.revolt.model.auth.RevoltMFAApiModel.TOTPCode.TOTPCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-t-o-t-p-code/-t-o-t-p-code.html","searchKeys":["TOTPCode","constructor(totpCode: String)","app.revolt.model.auth.RevoltMFAApiModel.TOTPCode.TOTPCode"]},{"name":"constructor(url: String, width: Int, height: Int)","description":"app.revolt.model.RevoltEmbedApiModel.Video.Video","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-video/-video.html","searchKeys":["Video","constructor(url: String, width: Int, height: Int)","app.revolt.model.RevoltEmbedApiModel.Video.Video"]},{"name":"constructor(url: String, width: Int, height: Int, size: RevoltEmbedApiModel.Image.Size)","description":"app.revolt.model.RevoltEmbedApiModel.Image.Image","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-image.html","searchKeys":["Image","constructor(url: String, width: Int, height: Int, size: RevoltEmbedApiModel.Image.Size)","app.revolt.model.RevoltEmbedApiModel.Image.Image"]},{"name":"constructor(url: String? = null, originalUrl: String? = null, special: RevoltEmbedApiModel.Website.Special? = null, title: String? = null, description: String? = null, image: RevoltEmbedApiModel.Image? = null, video: RevoltEmbedApiModel.Video? = null, siteName: String? = null, iconUrl: String? = null, color: String? = null)","description":"app.revolt.model.RevoltEmbedApiModel.Website.Website","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-website.html","searchKeys":["Website","constructor(url: String? = null, originalUrl: String? = null, special: RevoltEmbedApiModel.Website.Special? = null, title: String? = null, description: String? = null, image: RevoltEmbedApiModel.Image? = null, video: RevoltEmbedApiModel.Video? = null, siteName: String? = null, iconUrl: String? = null, color: String? = null)","app.revolt.model.RevoltEmbedApiModel.Website.Website"]},{"name":"constructor(user: String, server: String)","description":"app.revolt.model.server.RevoltServerMemberApiModel.ID.ID","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/-i-d/-i-d.html","searchKeys":["ID","constructor(user: String, server: String)","app.revolt.model.server.RevoltServerMemberApiModel.ID.ID"]},{"name":"constructor(userId: String)","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled.Disabled","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-disabled/-disabled.html","searchKeys":["Disabled","constructor(userId: String)","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled.Disabled"]},{"name":"constructor(userJoined: String? = null, userLeft: String? = null, userKicked: String? = null, userBanned: String? = null)","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages.SystemMessages","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/-system-messages.html","searchKeys":["SystemMessages","constructor(userJoined: String? = null, userLeft: String? = null, userKicked: String? = null, userBanned: String? = null)","app.revolt.model.server.RevoltServerApiModel.SystemMessages.SystemMessages"]},{"name":"constructor(username: String)","description":"app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest.RevoltOnboardingCompleteApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.request/-revolt-onboarding-complete-api-request/-revolt-onboarding-complete-api-request.html","searchKeys":["RevoltOnboardingCompleteApiRequest","constructor(username: String)","app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest.RevoltOnboardingCompleteApiRequest"]},{"name":"constructor(username: String, password: String)","description":"app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.RevoltUserChangeUsernameApiRequest","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-change-username-api-request/-revolt-user-change-username-api-request.html","searchKeys":["RevoltUserChangeUsernameApiRequest","constructor(username: String, password: String)","app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.RevoltUserChangeUsernameApiRequest"]},{"name":"constructor(username: String? = null, discriminator: String? = null, displayName: String? = null, avatar: RevoltFileApiModel? = null, relations: List<RevoltUserApiModel.Relationship>? = null, badges: Int? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserProfileApiModel? = null, flags: Int? = null, privileged: Boolean? = null, bot: RevoltUserApiModel.Bot? = null, relationship: RevoltRelationshipStatusApiType? = null, online: Boolean? = null)","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.RevoltUserUpdateApiModel","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/-revolt-user-update-api-model.html","searchKeys":["RevoltUserUpdateApiModel","constructor(username: String? = null, discriminator: String? = null, displayName: String? = null, avatar: RevoltFileApiModel? = null, relations: List<RevoltUserApiModel.Relationship>? = null, badges: Int? = null, status: RevoltUserStatusApiModel? = null, profile: RevoltUserProfileApiModel? = null, flags: Int? = null, privileged: Boolean? = null, bot: RevoltUserApiModel.Bot? = null, relationship: RevoltRelationshipStatusApiType? = null, online: Boolean? = null)","app.revolt.model.websocket.RevoltUserUpdateApiModel.RevoltUserUpdateApiModel"]},{"name":"constructor(users: List<RevoltUserApiModel>, channels: List<RevoltChannelApiModel>, servers: List<RevoltServerApiModel>, emojis: List<RevoltEmojiApiModel>)","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready.Ready","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/-ready.html","searchKeys":["Ready","constructor(users: List<RevoltUserApiModel>, channels: List<RevoltChannelApiModel>, servers: List<RevoltServerApiModel>, emojis: List<RevoltEmojiApiModel>)","app.revolt.websocket.server.RevoltServerApiEvent.Ready.Ready"]},{"name":"constructor(width: Int, height: Int)","description":"app.revolt.model.general.RevoltMetadataApiModel.Image.Image","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-image/-image.html","searchKeys":["Image","constructor(width: Int, height: Int)","app.revolt.model.general.RevoltMetadataApiModel.Image.Image"]},{"name":"constructor(width: Int, height: Int)","description":"app.revolt.model.general.RevoltMetadataApiModel.Video.Video","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-video/-video.html","searchKeys":["Video","constructor(width: Int, height: Int)","app.revolt.model.general.RevoltMetadataApiModel.Video.Video"]},{"name":"data class Authenticate(val token: String) : RevoltClientApiEvent","description":"app.revolt.websocket.client.RevoltClientApiEvent.Authenticate","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-authenticate/index.html","searchKeys":["Authenticate","data class Authenticate(val token: String) : RevoltClientApiEvent","app.revolt.websocket.client.RevoltClientApiEvent.Authenticate"]},{"name":"data class Bandcamp(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/index.html","searchKeys":["Bandcamp","data class Bandcamp(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp"]},{"name":"data class BeginTyping(val channel: String) : RevoltClientApiEvent","description":"app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-begin-typing/index.html","searchKeys":["BeginTyping","data class BeginTyping(val channel: String) : RevoltClientApiEvent","app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping"]},{"name":"data class Bot(val owner: String)","description":"app.revolt.model.user.RevoltUserApiModel.Bot","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-bot/index.html","searchKeys":["Bot","data class Bot(val owner: String)","app.revolt.model.user.RevoltUserApiModel.Bot"]},{"name":"data class Build(val commitSHA: String, val commitTimestamp: String, val semver: String, val originUrl: String, val timestamp: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Build","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/index.html","searchKeys":["Build","data class Build(val commitSHA: String, val commitTimestamp: String, val semver: String, val originUrl: String, val timestamp: String)","app.revolt.model.RevoltConfigurationApiModel.Build"]},{"name":"data class Bulk(val events: List<RevoltServerApiEvent>) : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.Bulk","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-bulk/index.html","searchKeys":["Bulk","data class Bulk(val events: List<RevoltServerApiEvent>) : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.Bulk"]},{"name":"data class Category(val id: String, val title: String, val channels: List<String>)","description":"app.revolt.model.server.RevoltServerApiModel.Category","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-category/index.html","searchKeys":["Category","data class Category(val id: String, val title: String, val channels: List<String>)","app.revolt.model.server.RevoltServerApiModel.Category"]},{"name":"data class ChannelDescriptionChanged(val name: String, val by: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-description-changed/index.html","searchKeys":["ChannelDescriptionChanged","data class ChannelDescriptionChanged(val name: String, val by: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged"]},{"name":"data class ChannelIconChanged(val name: String, val by: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-icon-changed/index.html","searchKeys":["ChannelIconChanged","data class ChannelIconChanged(val name: String, val by: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged"]},{"name":"data class ChannelOwnershipChanged(val from: String, val to: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-ownership-changed/index.html","searchKeys":["ChannelOwnershipChanged","data class ChannelOwnershipChanged(val from: String, val to: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged"]},{"name":"data class ChannelRenamed(val name: String, val by: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-renamed/index.html","searchKeys":["ChannelRenamed","data class ChannelRenamed(val name: String, val by: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed"]},{"name":"data class CountLimitException(val max: Int, val error: RevoltErrorApiType, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.CountLimitException","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-count-limit-exception/index.html","searchKeys":["CountLimitException","data class CountLimitException(val max: Int, val error: RevoltErrorApiType, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.CountLimitException"]},{"name":"data class DatabaseError(val operation: String, val with: String, val collection: String?, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.DatabaseError","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/index.html","searchKeys":["DatabaseError","data class DatabaseError(val operation: String, val with: String, val collection: String?, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.DatabaseError"]},{"name":"data class Default(val error: RevoltErrorApiType, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.Default","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-default/index.html","searchKeys":["Default","data class Default(val error: RevoltErrorApiType, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.Default"]},{"name":"data class DirectMessage(val id: String, val active: Boolean, val recipients: List<String>, val lastMessageId: String? = null) : RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/index.html","searchKeys":["DirectMessage","data class DirectMessage(val id: String, val active: Boolean, val recipients: List<String>, val lastMessageId: String? = null) : RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage"]},{"name":"data class Disabled(val userId: String) : RevoltLoginApiResponse","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-disabled/index.html","searchKeys":["Disabled","data class Disabled(val userId: String) : RevoltLoginApiResponse","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled"]},{"name":"data class EndTyping(val channel: String) : RevoltClientApiEvent","description":"app.revolt.websocket.client.RevoltClientApiEvent.EndTyping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-end-typing/index.html","searchKeys":["EndTyping","data class EndTyping(val channel: String) : RevoltClientApiEvent","app.revolt.websocket.client.RevoltClientApiEvent.EndTyping"]},{"name":"data class Error(val error: RevoltServerApiEvent.Error.ErrorType) : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/index.html","searchKeys":["Error","data class Error(val error: RevoltServerApiEvent.Error.ErrorType) : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.Error"]},{"name":"data class Features(val captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration, val email: Boolean, val inviteOnly: Boolean, val autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, val january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, val voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration)","description":"app.revolt.model.RevoltConfigurationApiModel.Features","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/index.html","searchKeys":["Features","data class Features(val captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration, val email: Boolean, val inviteOnly: Boolean, val autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, val january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration, val voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration)","app.revolt.model.RevoltConfigurationApiModel.Features"]},{"name":"data class FieldValidation(val fieldError: String?, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.FieldValidation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-field-validation/index.html","searchKeys":["FieldValidation","data class FieldValidation(val fieldError: String?, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.FieldValidation"]},{"name":"data class GeneralServerConfiguration(val enabled: Boolean, val url: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-general-server-configuration/index.html","searchKeys":["GeneralServerConfiguration","data class GeneralServerConfiguration(val enabled: Boolean, val url: String)","app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration"]},{"name":"data class Group(val id: String, val name: String, val owner: String, val description: String? = null, val recipients: List<String>, val icon: RevoltFileApiModel? = null, val lastMessageId: String? = null, val permissions: Int? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel.Group","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/index.html","searchKeys":["Group","data class Group(val id: String, val name: String, val owner: String, val description: String? = null, val recipients: List<String>, val icon: RevoltFileApiModel? = null, val lastMessageId: String? = null, val permissions: Int? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel.Group"]},{"name":"data class HCaptchaConfiguration(val enabled: Boolean, val key: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-h-captcha-configuration/index.html","searchKeys":["HCaptchaConfiguration","data class HCaptchaConfiguration(val enabled: Boolean, val key: String)","app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration"]},{"name":"data class ID(val user: String, val server: String)","description":"app.revolt.model.server.RevoltServerMemberApiModel.ID","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/-i-d/index.html","searchKeys":["ID","data class ID(val user: String, val server: String)","app.revolt.model.server.RevoltServerMemberApiModel.ID"]},{"name":"data class Image(val url: String, val width: Int, val height: Int, val size: RevoltEmbedApiModel.Image.Size) : RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel.Image","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/index.html","searchKeys":["Image","data class Image(val url: String, val width: Int, val height: Int, val size: RevoltEmbedApiModel.Image.Size) : RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel.Image"]},{"name":"data class Image(val width: Int, val height: Int) : RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel.Image","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-image/index.html","searchKeys":["Image","data class Image(val width: Int, val height: Int) : RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel.Image"]},{"name":"data class Interactions(val reactions: List<String>?, val restrictReactions: Boolean? = null)","description":"app.revolt.model.RevoltMessageApiModel.Interactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-interactions/index.html","searchKeys":["Interactions","data class Interactions(val reactions: List<String>?, val restrictReactions: Boolean? = null)","app.revolt.model.RevoltMessageApiModel.Interactions"]},{"name":"data class Lightspeed(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/index.html","searchKeys":["Lightspeed","data class Lightspeed(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed"]},{"name":"data class MFA(val mfaTicket: String, val mfaResponse: RevoltMFAApiModel, val friendlyName: String? = null)","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-m-f-a/index.html","searchKeys":["MFA","data class MFA(val mfaTicket: String, val mfaResponse: RevoltMFAApiModel, val friendlyName: String? = null)","app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA"]},{"name":"data class MFA(val ticket: String, val allowedMethods: RevoltMFAMethodApiType) : RevoltLoginApiResponse","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-m-f-a/index.html","searchKeys":["MFA","data class MFA(val ticket: String, val allowedMethods: RevoltMFAMethodApiType) : RevoltLoginApiResponse","app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA"]},{"name":"data class MissingPermission(val permissionType: RevoltPermissionApiType, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.MissingPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-permission/index.html","searchKeys":["MissingPermission","data class MissingPermission(val permissionType: RevoltPermissionApiType, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.MissingPermission"]},{"name":"data class MissingUserPermission(val permissionType: RevoltUserPermissionApiType, val location: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.MissingUserPermission","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-user-permission/index.html","searchKeys":["MissingUserPermission","data class MissingUserPermission(val permissionType: RevoltUserPermissionApiType, val location: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.MissingUserPermission"]},{"name":"data class Normal(val email: String, val password: String, val friendlyName: String? = null) : RevoltLoginApiRequest","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-normal/index.html","searchKeys":["Normal","data class Normal(val email: String, val password: String, val friendlyName: String? = null) : RevoltLoginApiRequest","app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal"]},{"name":"data class Password(val password: String) : RevoltMFAApiModel","description":"app.revolt.model.auth.RevoltMFAApiModel.Password","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-password/index.html","searchKeys":["Password","data class Password(val password: String) : RevoltMFAApiModel","app.revolt.model.auth.RevoltMFAApiModel.Password"]},{"name":"data class Ping(val data: Long) : RevoltClientApiEvent","description":"app.revolt.websocket.client.RevoltClientApiEvent.Ping","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-ping/index.html","searchKeys":["Ping","data class Ping(val data: Long) : RevoltClientApiEvent","app.revolt.websocket.client.RevoltClientApiEvent.Ping"]},{"name":"data class Pong(val data: Long) : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.Pong","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-pong/index.html","searchKeys":["Pong","data class Pong(val data: Long) : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.Pong"]},{"name":"data class Profile(val content: String? = null, val background: String? = null)","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.Profile","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-profile/index.html","searchKeys":["Profile","data class Profile(val content: String? = null, val background: String? = null)","app.revolt.model.user.request.RevoltUserEditApiRequest.Profile"]},{"name":"data class RateLimitException(val retryAfter: Int) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.RateLimitException","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-rate-limit-exception/index.html","searchKeys":["RateLimitException","data class RateLimitException(val retryAfter: Int) : RevoltApiException","app.revolt.exception.RevoltApiException.RateLimitException"]},{"name":"data class Ready(val users: List<RevoltUserApiModel>, val channels: List<RevoltChannelApiModel>, val servers: List<RevoltServerApiModel>, val emojis: List<RevoltEmojiApiModel>) : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/index.html","searchKeys":["Ready","data class Ready(val users: List<RevoltUserApiModel>, val channels: List<RevoltChannelApiModel>, val servers: List<RevoltServerApiModel>, val emojis: List<RevoltEmojiApiModel>) : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.Ready"]},{"name":"data class RecoveryCode(val recoveryCode: String) : RevoltMFAApiModel","description":"app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-recovery-code/index.html","searchKeys":["RecoveryCode","data class RecoveryCode(val recoveryCode: String) : RevoltMFAApiModel","app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode"]},{"name":"data class Relationship(val id: String, val status: RevoltRelationshipStatusApiType)","description":"app.revolt.model.user.RevoltUserApiModel.Relationship","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-relationship/index.html","searchKeys":["Relationship","data class Relationship(val id: String, val status: RevoltRelationshipStatusApiType)","app.revolt.model.user.RevoltUserApiModel.Relationship"]},{"name":"data class RevoltApiConfig(val token: String? = null)","description":"app.revolt.RevoltApiConfig","location":"revolt-kotlin-api/app.revolt/-revolt-api-config/index.html","searchKeys":["RevoltApiConfig","data class RevoltApiConfig(val token: String? = null)","app.revolt.RevoltApiConfig"]},{"name":"data class RevoltChangeEmailApiRequest(val email: String, val currentPassword: String)","description":"app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-email-api-request/index.html","searchKeys":["RevoltChangeEmailApiRequest","data class RevoltChangeEmailApiRequest(val email: String, val currentPassword: String)","app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest"]},{"name":"data class RevoltChangePasswordApiRequest(val password: String, val currentPassword: String)","description":"app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-password-api-request/index.html","searchKeys":["RevoltChangePasswordApiRequest","data class RevoltChangePasswordApiRequest(val password: String, val currentPassword: String)","app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest"]},{"name":"data class RevoltConfigurationApiModel(val revolt: String, val features: RevoltConfigurationApiModel.Features, val ws: String, val app: String, val vapid: String, val build: RevoltConfigurationApiModel.Build)","description":"app.revolt.model.RevoltConfigurationApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/index.html","searchKeys":["RevoltConfigurationApiModel","data class RevoltConfigurationApiModel(val revolt: String, val features: RevoltConfigurationApiModel.Features, val ws: String, val app: String, val vapid: String, val build: RevoltConfigurationApiModel.Build)","app.revolt.model.RevoltConfigurationApiModel"]},{"name":"data class RevoltConfirmAccountDeletionApiRequest(val token: String)","description":"app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-confirm-account-deletion-api-request/index.html","searchKeys":["RevoltConfirmAccountDeletionApiRequest","data class RevoltConfirmAccountDeletionApiRequest(val token: String)","app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest"]},{"name":"data class RevoltCreateAccountApiRequest(val email: String, val password: String, val invite: String?, val captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/index.html","searchKeys":["RevoltCreateAccountApiRequest","data class RevoltCreateAccountApiRequest(val email: String, val password: String, val invite: String?, val captcha: String?)","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest"]},{"name":"data class RevoltCreateMFATicketApiRequest(val password: String)","description":"app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.request/-revolt-create-m-f-a-ticket-api-request/index.html","searchKeys":["RevoltCreateMFATicketApiRequest","data class RevoltCreateMFATicketApiRequest(val password: String)","app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest"]},{"name":"data class RevoltCreateMFATicketApiResponse(val id: String, val accountId: String, val token: String, val validated: Boolean, val authorised: Boolean, val lastTotpCode: String? = null)","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/index.html","searchKeys":["RevoltCreateMFATicketApiResponse","data class RevoltCreateMFATicketApiResponse(val id: String, val accountId: String, val token: String, val validated: Boolean, val authorised: Boolean, val lastTotpCode: String? = null)","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse"]},{"name":"data class RevoltEmojiApiModel(val id: String, val parent: RevoltEmojiApiModel.Parent, val creatorId: String, val name: String, val animated: Boolean? = null, val nsfw: Boolean? = null)","description":"app.revolt.model.general.RevoltEmojiApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/index.html","searchKeys":["RevoltEmojiApiModel","data class RevoltEmojiApiModel(val id: String, val parent: RevoltEmojiApiModel.Parent, val creatorId: String, val name: String, val animated: Boolean? = null, val nsfw: Boolean? = null)","app.revolt.model.general.RevoltEmojiApiModel"]},{"name":"data class RevoltFetchAccountApiResponse(val id: String, val email: String)","description":"app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-fetch-account-api-response/index.html","searchKeys":["RevoltFetchAccountApiResponse","data class RevoltFetchAccountApiResponse(val id: String, val email: String)","app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse"]},{"name":"data class RevoltFetchMessagesRequestApiModel(val channelId: String, val limit: Int? = null, val before: String? = null, val after: String? = null, val sort: RevoltFetchMessagesRequestApiModel.Sort = Sort.Latest, val nearby: String? = null)","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/index.html","searchKeys":["RevoltFetchMessagesRequestApiModel","data class RevoltFetchMessagesRequestApiModel(val channelId: String, val limit: Int? = null, val before: String? = null, val after: String? = null, val sort: RevoltFetchMessagesRequestApiModel.Sort = Sort.Latest, val nearby: String? = null)","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel"]},{"name":"data class RevoltFetchMessagesResponseApiModel(val messages: List<RevoltMessageApiModel>, val users: List<RevoltUserApiModel>, val members: List<RevoltServerMemberApiModel>? = null)","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-response-api-model/index.html","searchKeys":["RevoltFetchMessagesResponseApiModel","data class RevoltFetchMessagesResponseApiModel(val messages: List<RevoltMessageApiModel>, val users: List<RevoltUserApiModel>, val members: List<RevoltServerMemberApiModel>? = null)","app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel"]},{"name":"data class RevoltFetchSessionApiResponse(val id: String, val name: String)","description":"app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-fetch-session-api-response/index.html","searchKeys":["RevoltFetchSessionApiResponse","data class RevoltFetchSessionApiResponse(val id: String, val name: String)","app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse"]},{"name":"data class RevoltFileApiModel(val id: String, val tag: String, val filename: String, val metadata: RevoltMetadataApiModel, val contentType: String, val size: Int, val deleted: Boolean? = null, val reported: Boolean? = null, val messageId: String? = null, val userId: String? = null, val serverId: String? = null, val objectId: String? = null)","description":"app.revolt.model.general.RevoltFileApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/index.html","searchKeys":["RevoltFileApiModel","data class RevoltFileApiModel(val id: String, val tag: String, val filename: String, val metadata: RevoltMetadataApiModel, val contentType: String, val size: Int, val deleted: Boolean? = null, val reported: Boolean? = null, val messageId: String? = null, val userId: String? = null, val serverId: String? = null, val objectId: String? = null)","app.revolt.model.general.RevoltFileApiModel"]},{"name":"data class RevoltFileUploadApiRequest(val fileName: String, val bytes: ByteArray, val contentType: RevoltFileUploadApiRequest.ContentType)","description":"app.revolt.model.RevoltFileUploadApiRequest","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/index.html","searchKeys":["RevoltFileUploadApiRequest","data class RevoltFileUploadApiRequest(val fileName: String, val bytes: ByteArray, val contentType: RevoltFileUploadApiRequest.ContentType)","app.revolt.model.RevoltFileUploadApiRequest"]},{"name":"data class RevoltFileUploadApiResponse(val id: String)","description":"app.revolt.model.RevoltFileUploadApiResponse","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-response/index.html","searchKeys":["RevoltFileUploadApiResponse","data class RevoltFileUploadApiResponse(val id: String)","app.revolt.model.RevoltFileUploadApiResponse"]},{"name":"data class RevoltGenerateTOTPSecretApiResponse(val secret: String)","description":"app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-generate-t-o-t-p-secret-api-response/index.html","searchKeys":["RevoltGenerateTOTPSecretApiResponse","data class RevoltGenerateTOTPSecretApiResponse(val secret: String)","app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse"]},{"name":"data class RevoltMFAStatusApiResponse(val emailOtp: Boolean, val trustedHandover: Boolean, val emailMFA: Boolean, val totpMFA: Boolean, val securityKeyMFA: Boolean, val recoveryActive: Boolean)","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/index.html","searchKeys":["RevoltMFAStatusApiResponse","data class RevoltMFAStatusApiResponse(val emailOtp: Boolean, val trustedHandover: Boolean, val emailMFA: Boolean, val totpMFA: Boolean, val securityKeyMFA: Boolean, val recoveryActive: Boolean)","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse"]},{"name":"data class RevoltMessageApiModel(val id: String, val nonce: String? = null, val channel: String, val author: String, val webhook: RevoltMessageApiModel.Webhook? = null, val content: String? = null, val system: RevoltMessageApiModel.System? = null, val attachments: List<RevoltFileApiModel>? = null, val edited: String? = null, val embeds: List<RevoltEmbedApiModel>? = null, val mentions: List<String>? = null, val replies: List<String>? = null, val reactions: Map<String, List<String>>? = null, val interactions: RevoltMessageApiModel.Interactions? = null, val masquerade: RevoltMasqueradeApiModel? = null)","description":"app.revolt.model.RevoltMessageApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/index.html","searchKeys":["RevoltMessageApiModel","data class RevoltMessageApiModel(val id: String, val nonce: String? = null, val channel: String, val author: String, val webhook: RevoltMessageApiModel.Webhook? = null, val content: String? = null, val system: RevoltMessageApiModel.System? = null, val attachments: List<RevoltFileApiModel>? = null, val edited: String? = null, val embeds: List<RevoltEmbedApiModel>? = null, val mentions: List<String>? = null, val replies: List<String>? = null, val reactions: Map<String, List<String>>? = null, val interactions: RevoltMessageApiModel.Interactions? = null, val masquerade: RevoltMasqueradeApiModel? = null)","app.revolt.model.RevoltMessageApiModel"]},{"name":"data class RevoltOnboardingCompleteApiRequest(val username: String)","description":"app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.request/-revolt-onboarding-complete-api-request/index.html","searchKeys":["RevoltOnboardingCompleteApiRequest","data class RevoltOnboardingCompleteApiRequest(val username: String)","app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest"]},{"name":"data class RevoltOnboardingStatusApiResponse(val onboarding: Boolean)","description":"app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.response/-revolt-onboarding-status-api-response/index.html","searchKeys":["RevoltOnboardingStatusApiResponse","data class RevoltOnboardingStatusApiResponse(val onboarding: Boolean)","app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse"]},{"name":"data class RevoltOverrideFieldApiModel(val allowed: Int, val disallowed: Int)","description":"app.revolt.model.general.RevoltOverrideFieldApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-override-field-api-model/index.html","searchKeys":["RevoltOverrideFieldApiModel","data class RevoltOverrideFieldApiModel(val allowed: Int, val disallowed: Int)","app.revolt.model.general.RevoltOverrideFieldApiModel"]},{"name":"data class RevoltResendVerificationApiRequest(val email: String, val captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-resend-verification-api-request/index.html","searchKeys":["RevoltResendVerificationApiRequest","data class RevoltResendVerificationApiRequest(val email: String, val captcha: String?)","app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest"]},{"name":"data class RevoltResetPasswordApiRequest(val token: String, val password: String, val removeSessions: Boolean = false)","description":"app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-reset-password-api-request/index.html","searchKeys":["RevoltResetPasswordApiRequest","data class RevoltResetPasswordApiRequest(val token: String, val password: String, val removeSessions: Boolean = false)","app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest"]},{"name":"data class RevoltSendPasswordResetApiRequest(val email: String, val captcha: String?)","description":"app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-send-password-reset-api-request/index.html","searchKeys":["RevoltSendPasswordResetApiRequest","data class RevoltSendPasswordResetApiRequest(val email: String, val captcha: String?)","app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest"]},{"name":"data class RevoltServerApiModel(val id: String, val owner: String, val name: String, val description: String? = null, val channels: List<String>, val categories: List<RevoltServerApiModel.Category>? = null, val systemMessages: RevoltServerApiModel.SystemMessages? = null, val roles: Map<String, RevoltServerRoleApiModel>? = null, val defaultPermissions: Int? = null, val icon: RevoltFileApiModel? = null, val banner: RevoltFileApiModel? = null, val flags: Int? = null, val nsfw: Boolean? = null, val analytics: Boolean? = null, val discoverable: Boolean? = null)","description":"app.revolt.model.server.RevoltServerApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/index.html","searchKeys":["RevoltServerApiModel","data class RevoltServerApiModel(val id: String, val owner: String, val name: String, val description: String? = null, val channels: List<String>, val categories: List<RevoltServerApiModel.Category>? = null, val systemMessages: RevoltServerApiModel.SystemMessages? = null, val roles: Map<String, RevoltServerRoleApiModel>? = null, val defaultPermissions: Int? = null, val icon: RevoltFileApiModel? = null, val banner: RevoltFileApiModel? = null, val flags: Int? = null, val nsfw: Boolean? = null, val analytics: Boolean? = null, val discoverable: Boolean? = null)","app.revolt.model.server.RevoltServerApiModel"]},{"name":"data class RevoltServerMemberApiModel(val id: RevoltServerMemberApiModel.ID, val joinedAt: String, val nickname: String? = null, val avatar: RevoltFileApiModel? = null, val roles: List<String>? = null, val timeout: String? = null)","description":"app.revolt.model.server.RevoltServerMemberApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/index.html","searchKeys":["RevoltServerMemberApiModel","data class RevoltServerMemberApiModel(val id: RevoltServerMemberApiModel.ID, val joinedAt: String, val nickname: String? = null, val avatar: RevoltFileApiModel? = null, val roles: List<String>? = null, val timeout: String? = null)","app.revolt.model.server.RevoltServerMemberApiModel"]},{"name":"data class RevoltServerRoleApiModel(val name: String, val permissions: RevoltOverrideFieldApiModel, val color: String? = null, val hoist: Boolean? = null, val rank: Int = 0)","description":"app.revolt.model.server.RevoltServerRoleApiModel","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/index.html","searchKeys":["RevoltServerRoleApiModel","data class RevoltServerRoleApiModel(val name: String, val permissions: RevoltOverrideFieldApiModel, val color: String? = null, val hoist: Boolean? = null, val rank: Int = 0)","app.revolt.model.server.RevoltServerRoleApiModel"]},{"name":"data class RevoltSessionEditApiRequest(val friendlyName: String)","description":"app.revolt.model.auth.session.request.RevoltSessionEditApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-session-edit-api-request/index.html","searchKeys":["RevoltSessionEditApiRequest","data class RevoltSessionEditApiRequest(val friendlyName: String)","app.revolt.model.auth.session.request.RevoltSessionEditApiRequest"]},{"name":"data class RevoltUserApiModel(val id: String, val username: String, val discriminator: String, val displayName: String? = null, val avatar: RevoltFileApiModel? = null, val relations: List<RevoltUserApiModel.Relationship>? = null, val badges: Int? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserProfileApiModel? = null, val flags: Int? = null, val privileged: Boolean? = null, val bot: RevoltUserApiModel.Bot? = null, val relationship: RevoltRelationshipStatusApiType? = null, val online: Boolean? = null)","description":"app.revolt.model.user.RevoltUserApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/index.html","searchKeys":["RevoltUserApiModel","data class RevoltUserApiModel(val id: String, val username: String, val discriminator: String, val displayName: String? = null, val avatar: RevoltFileApiModel? = null, val relations: List<RevoltUserApiModel.Relationship>? = null, val badges: Int? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserProfileApiModel? = null, val flags: Int? = null, val privileged: Boolean? = null, val bot: RevoltUserApiModel.Bot? = null, val relationship: RevoltRelationshipStatusApiType? = null, val online: Boolean? = null)","app.revolt.model.user.RevoltUserApiModel"]},{"name":"data class RevoltUserEditApiRequest(val displayName: String? = null, val avatarId: String? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserEditApiRequest.Profile? = null, val badges: Int? = null, val flags: Int? = null, val remove: List<RevoltUserEditApiRequest.FieldsUser>? = null)","description":"app.revolt.model.user.request.RevoltUserEditApiRequest","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/index.html","searchKeys":["RevoltUserEditApiRequest","data class RevoltUserEditApiRequest(val displayName: String? = null, val avatarId: String? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserEditApiRequest.Profile? = null, val badges: Int? = null, val flags: Int? = null, val remove: List<RevoltUserEditApiRequest.FieldsUser>? = null)","app.revolt.model.user.request.RevoltUserEditApiRequest"]},{"name":"data class RevoltUserFlagsApiResponse(val flags: Int)","description":"app.revolt.model.user.response.RevoltUserFlagsApiResponse","location":"revolt-kotlin-api/app.revolt.model.user.response/-revolt-user-flags-api-response/index.html","searchKeys":["RevoltUserFlagsApiResponse","data class RevoltUserFlagsApiResponse(val flags: Int)","app.revolt.model.user.response.RevoltUserFlagsApiResponse"]},{"name":"data class RevoltUserProfileApiModel(val content: String? = null, val background: RevoltFileApiModel? = null)","description":"app.revolt.model.user.RevoltUserProfileApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-profile-api-model/index.html","searchKeys":["RevoltUserProfileApiModel","data class RevoltUserProfileApiModel(val content: String? = null, val background: RevoltFileApiModel? = null)","app.revolt.model.user.RevoltUserProfileApiModel"]},{"name":"data class RevoltUserStatusApiModel(val text: String? = null, val presence: RevoltUserPresenceApiType? = null)","description":"app.revolt.model.user.RevoltUserStatusApiModel","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-status-api-model/index.html","searchKeys":["RevoltUserStatusApiModel","data class RevoltUserStatusApiModel(val text: String? = null, val presence: RevoltUserPresenceApiType? = null)","app.revolt.model.user.RevoltUserStatusApiModel"]},{"name":"data class RevoltUserUpdateApiModel(val username: String? = null, val discriminator: String? = null, val displayName: String? = null, val avatar: RevoltFileApiModel? = null, val relations: List<RevoltUserApiModel.Relationship>? = null, val badges: Int? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserProfileApiModel? = null, val flags: Int? = null, val privileged: Boolean? = null, val bot: RevoltUserApiModel.Bot? = null, val relationship: RevoltRelationshipStatusApiType? = null, val online: Boolean? = null)","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/index.html","searchKeys":["RevoltUserUpdateApiModel","data class RevoltUserUpdateApiModel(val username: String? = null, val discriminator: String? = null, val displayName: String? = null, val avatar: RevoltFileApiModel? = null, val relations: List<RevoltUserApiModel.Relationship>? = null, val badges: Int? = null, val status: RevoltUserStatusApiModel? = null, val profile: RevoltUserProfileApiModel? = null, val flags: Int? = null, val privileged: Boolean? = null, val bot: RevoltUserApiModel.Bot? = null, val relationship: RevoltRelationshipStatusApiType? = null, val online: Boolean? = null)","app.revolt.model.websocket.RevoltUserUpdateApiModel"]},{"name":"data class RevoltVerifyEmailApiRequest(val code: String)","description":"app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-verify-email-api-request/index.html","searchKeys":["RevoltVerifyEmailApiRequest","data class RevoltVerifyEmailApiRequest(val code: String)","app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest"]},{"name":"data class RevoltVerifyEmailApiResponse(val ticket: RevoltVerifyEmailApiResponse.Ticket)","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/index.html","searchKeys":["RevoltVerifyEmailApiResponse","data class RevoltVerifyEmailApiResponse(val ticket: RevoltVerifyEmailApiResponse.Ticket)","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse"]},{"name":"data class SavedMessages(val id: String, val user: String) : RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel.SavedMessages","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-saved-messages/index.html","searchKeys":["SavedMessages","data class SavedMessages(val id: String, val user: String) : RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel.SavedMessages"]},{"name":"data class Server(val id: String) : RevoltEmojiApiModel.Parent","description":"app.revolt.model.general.RevoltEmojiApiModel.Parent.Server","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-parent/-server/index.html","searchKeys":["Server","data class Server(val id: String) : RevoltEmojiApiModel.Parent","app.revolt.model.general.RevoltEmojiApiModel.Parent.Server"]},{"name":"data class Spotify(val id: String, val contentType: String) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-spotify/index.html","searchKeys":["Spotify","data class Spotify(val id: String, val contentType: String) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify"]},{"name":"data class Streamable(val id: String) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-streamable/index.html","searchKeys":["Streamable","data class Streamable(val id: String) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable"]},{"name":"data class Subscription(val endpoint: String, val p256dh: String, val auth: String)","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-subscription/index.html","searchKeys":["Subscription","data class Subscription(val endpoint: String, val p256dh: String, val auth: String)","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription"]},{"name":"data class Success(val id: String, val userId: String, val token: String, val name: String, val subscription: RevoltLoginApiResponse.Success.Subscription? = null) : RevoltLoginApiResponse","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/index.html","searchKeys":["Success","data class Success(val id: String, val userId: String, val token: String, val name: String, val subscription: RevoltLoginApiResponse.Success.Subscription? = null) : RevoltLoginApiResponse","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success"]},{"name":"data class SystemMessages(val userJoined: String? = null, val userLeft: String? = null, val userKicked: String? = null, val userBanned: String? = null)","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/index.html","searchKeys":["SystemMessages","data class SystemMessages(val userJoined: String? = null, val userLeft: String? = null, val userKicked: String? = null, val userBanned: String? = null)","app.revolt.model.server.RevoltServerApiModel.SystemMessages"]},{"name":"data class TOTPCode(val totpCode: String) : RevoltMFAApiModel","description":"app.revolt.model.auth.RevoltMFAApiModel.TOTPCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-t-o-t-p-code/index.html","searchKeys":["TOTPCode","data class TOTPCode(val totpCode: String) : RevoltMFAApiModel","app.revolt.model.auth.RevoltMFAApiModel.TOTPCode"]},{"name":"data class Text(val content: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.Text","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-text/index.html","searchKeys":["Text","data class Text(val content: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.Text"]},{"name":"data class Text(val iconUrl: String? = null, val url: String? = null, val title: String? = null, val description: String? = null, val media: RevoltFileApiModel? = null, val color: String? = null) : RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel.Text","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/index.html","searchKeys":["Text","data class Text(val iconUrl: String? = null, val url: String? = null, val title: String? = null, val description: String? = null, val media: RevoltFileApiModel? = null, val color: String? = null) : RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel.Text"]},{"name":"data class TextChannel(val id: String, val server: String, val name: String, val description: String? = null, val icon: RevoltFileApiModel? = null, val lastMessageId: String? = null, val defaultPermissions: RevoltOverrideFieldApiModel? = null, val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/index.html","searchKeys":["TextChannel","data class TextChannel(val id: String, val server: String, val name: String, val description: String? = null, val icon: RevoltFileApiModel? = null, val lastMessageId: String? = null, val defaultPermissions: RevoltOverrideFieldApiModel? = null, val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel.TextChannel"]},{"name":"data class Ticket(val id: String, val accountId: String, val token: String, val validated: Boolean, val authorised: Boolean, val lastTotpCode: String?)","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/index.html","searchKeys":["Ticket","data class Ticket(val id: String, val accountId: String, val token: String, val validated: Boolean, val authorised: Boolean, val lastTotpCode: String?)","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket"]},{"name":"data class Twitch(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/index.html","searchKeys":["Twitch","data class Twitch(val id: String, val contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch"]},{"name":"data class Unknown(val message: String?) : RevoltApiException","description":"app.revolt.exception.RevoltApiException.Unknown","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-unknown/index.html","searchKeys":["Unknown","data class Unknown(val message: String?) : RevoltApiException","app.revolt.exception.RevoltApiException.Unknown"]},{"name":"data class UserAdded(val id: String, val by: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserAdded","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-added/index.html","searchKeys":["UserAdded","data class UserAdded(val id: String, val by: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserAdded"]},{"name":"data class UserBanned(val id: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserBanned","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-banned/index.html","searchKeys":["UserBanned","data class UserBanned(val id: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserBanned"]},{"name":"data class UserJoined(val id: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserJoined","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-joined/index.html","searchKeys":["UserJoined","data class UserJoined(val id: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserJoined"]},{"name":"data class UserKicked(val id: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserKicked","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-kicked/index.html","searchKeys":["UserKicked","data class UserKicked(val id: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserKicked"]},{"name":"data class UserLeft(val id: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserLeft","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-left/index.html","searchKeys":["UserLeft","data class UserLeft(val id: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserLeft"]},{"name":"data class UserRemoved(val id: String, val by: String) : RevoltMessageApiModel.System","description":"app.revolt.model.RevoltMessageApiModel.System.UserRemoved","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-removed/index.html","searchKeys":["UserRemoved","data class UserRemoved(val id: String, val by: String) : RevoltMessageApiModel.System","app.revolt.model.RevoltMessageApiModel.System.UserRemoved"]},{"name":"data class UserUpdate(val id: String, val data: RevoltUserUpdateApiModel, val clear: List<RevoltServerApiEvent.UserUpdate.Field>) : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/index.html","searchKeys":["UserUpdate","data class UserUpdate(val id: String, val data: RevoltUserUpdateApiModel, val clear: List<RevoltServerApiEvent.UserUpdate.Field>) : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate"]},{"name":"data class Video(val url: String, val width: Int, val height: Int) : RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel.Video","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-video/index.html","searchKeys":["Video","data class Video(val url: String, val width: Int, val height: Int) : RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel.Video"]},{"name":"data class Video(val width: Int, val height: Int) : RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel.Video","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-video/index.html","searchKeys":["Video","data class Video(val width: Int, val height: Int) : RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel.Video"]},{"name":"data class VoiceChannel(val id: String, val server: String, val name: String, val description: String? = null, val icon: RevoltFileApiModel? = null, val defaultPermissions: RevoltOverrideFieldApiModel? = null, val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/index.html","searchKeys":["VoiceChannel","data class VoiceChannel(val id: String, val server: String, val name: String, val description: String? = null, val icon: RevoltFileApiModel? = null, val defaultPermissions: RevoltOverrideFieldApiModel? = null, val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null, val nsfw: Boolean? = null) : RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel"]},{"name":"data class VoiceServerConfiguration(val enabled: Boolean, val url: String, val ws: String)","description":"app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-voice-server-configuration/index.html","searchKeys":["VoiceServerConfiguration","data class VoiceServerConfiguration(val enabled: Boolean, val url: String, val ws: String)","app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration"]},{"name":"data class Webhook(val name: String, val avatar: String? = null)","description":"app.revolt.model.RevoltMessageApiModel.Webhook","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-webhook/index.html","searchKeys":["Webhook","data class Webhook(val name: String, val avatar: String? = null)","app.revolt.model.RevoltMessageApiModel.Webhook"]},{"name":"data class Website(val url: String? = null, val originalUrl: String? = null, val special: RevoltEmbedApiModel.Website.Special? = null, val title: String? = null, val description: String? = null, val image: RevoltEmbedApiModel.Image? = null, val video: RevoltEmbedApiModel.Video? = null, val siteName: String? = null, val iconUrl: String? = null, val color: String? = null) : RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel.Website","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/index.html","searchKeys":["Website","data class Website(val url: String? = null, val originalUrl: String? = null, val special: RevoltEmbedApiModel.Website.Special? = null, val title: String? = null, val description: String? = null, val image: RevoltEmbedApiModel.Image? = null, val video: RevoltEmbedApiModel.Video? = null, val siteName: String? = null, val iconUrl: String? = null, val color: String? = null) : RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel.Website"]},{"name":"data class Youtube(val id: String, val timestamp: String? = null) : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-youtube/index.html","searchKeys":["Youtube","data class Youtube(val id: String, val timestamp: String? = null) : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube"]},{"name":"data object Audio : RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel.Audio","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-audio/index.html","searchKeys":["Audio","data object Audio : RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel.Audio"]},{"name":"data object Authenticated : RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent.Authenticated","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-authenticated/index.html","searchKeys":["Authenticated","data object Authenticated : RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent.Authenticated"]},{"name":"data object Detached : RevoltEmojiApiModel.Parent","description":"app.revolt.model.general.RevoltEmojiApiModel.Parent.Detached","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-parent/-detached/index.html","searchKeys":["Detached","data object Detached : RevoltEmojiApiModel.Parent","app.revolt.model.general.RevoltEmojiApiModel.Parent.Detached"]},{"name":"data object File : RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel.File","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-file/index.html","searchKeys":["File","data object File : RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel.File"]},{"name":"data object GIF : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.GIF","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-g-i-f/index.html","searchKeys":["GIF","data object GIF : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.GIF"]},{"name":"data object None : RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel.None","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-none/index.html","searchKeys":["None","data object None : RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel.None"]},{"name":"data object None : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.None","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-none/index.html","searchKeys":["None","data object None : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.None"]},{"name":"data object Soundcloud : RevoltEmbedApiModel.Website.Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Soundcloud","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-soundcloud/index.html","searchKeys":["Soundcloud","data object Soundcloud : RevoltEmbedApiModel.Website.Special","app.revolt.model.RevoltEmbedApiModel.Website.Special.Soundcloud"]},{"name":"data object Text : RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel.Text","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-text/index.html","searchKeys":["Text","data object Text : RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel.Text"]},{"name":"data object Unauthorized : RevoltApiException","description":"app.revolt.exception.RevoltApiException.Unauthorized","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-unauthorized/index.html","searchKeys":["Unauthorized","data object Unauthorized : RevoltApiException","app.revolt.exception.RevoltApiException.Unauthorized"]},{"name":"enum ContentType : Enum<RevoltFileUploadApiRequest.ContentType> ","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/index.html","searchKeys":["ContentType","enum ContentType : Enum<RevoltFileUploadApiRequest.ContentType> ","app.revolt.model.RevoltFileUploadApiRequest.ContentType"]},{"name":"enum ErrorType : Enum<RevoltServerApiEvent.Error.ErrorType> ","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/index.html","searchKeys":["ErrorType","enum ErrorType : Enum<RevoltServerApiEvent.Error.ErrorType> ","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType"]},{"name":"enum Field : Enum<RevoltServerApiEvent.UserUpdate.Field> ","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/index.html","searchKeys":["Field","enum Field : Enum<RevoltServerApiEvent.UserUpdate.Field> ","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field"]},{"name":"enum FieldsUser : Enum<RevoltUserEditApiRequest.FieldsUser> ","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/index.html","searchKeys":["FieldsUser","enum FieldsUser : Enum<RevoltUserEditApiRequest.FieldsUser> ","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser"]},{"name":"enum RevoltErrorApiType : Enum<RevoltErrorApiType> ","description":"app.revolt.exception.RevoltErrorApiType","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/index.html","searchKeys":["RevoltErrorApiType","enum RevoltErrorApiType : Enum<RevoltErrorApiType> ","app.revolt.exception.RevoltErrorApiType"]},{"name":"enum RevoltMFAMethodApiType : Enum<RevoltMFAMethodApiType> ","description":"app.revolt.model.auth.RevoltMFAMethodApiType","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/index.html","searchKeys":["RevoltMFAMethodApiType","enum RevoltMFAMethodApiType : Enum<RevoltMFAMethodApiType> ","app.revolt.model.auth.RevoltMFAMethodApiType"]},{"name":"enum RevoltPermissionApiType : Enum<RevoltPermissionApiType> ","description":"app.revolt.exception.RevoltPermissionApiType","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/index.html","searchKeys":["RevoltPermissionApiType","enum RevoltPermissionApiType : Enum<RevoltPermissionApiType> ","app.revolt.exception.RevoltPermissionApiType"]},{"name":"enum RevoltRelationshipStatusApiType : Enum<RevoltRelationshipStatusApiType> ","description":"app.revolt.model.general.RevoltRelationshipStatusApiType","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/index.html","searchKeys":["RevoltRelationshipStatusApiType","enum RevoltRelationshipStatusApiType : Enum<RevoltRelationshipStatusApiType> ","app.revolt.model.general.RevoltRelationshipStatusApiType"]},{"name":"enum RevoltUserPermissionApiType : Enum<RevoltUserPermissionApiType> ","description":"app.revolt.exception.RevoltUserPermissionApiType","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/index.html","searchKeys":["RevoltUserPermissionApiType","enum RevoltUserPermissionApiType : Enum<RevoltUserPermissionApiType> ","app.revolt.exception.RevoltUserPermissionApiType"]},{"name":"enum RevoltUserPresenceApiType : Enum<RevoltUserPresenceApiType> ","description":"app.revolt.model.user.RevoltUserPresenceApiType","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/index.html","searchKeys":["RevoltUserPresenceApiType","enum RevoltUserPresenceApiType : Enum<RevoltUserPresenceApiType> ","app.revolt.model.user.RevoltUserPresenceApiType"]},{"name":"enum Size : Enum<RevoltEmbedApiModel.Image.Size> ","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/index.html","searchKeys":["Size","enum Size : Enum<RevoltEmbedApiModel.Image.Size> ","app.revolt.model.RevoltEmbedApiModel.Image.Size"]},{"name":"enum Sort : Enum<RevoltFetchMessagesRequestApiModel.Sort> ","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/index.html","searchKeys":["Sort","enum Sort : Enum<RevoltFetchMessagesRequestApiModel.Sort> ","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort"]},{"name":"enum Type : Enum<RevoltEmbedApiModel.Website.Special.Bandcamp.Type> ","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/index.html","searchKeys":["Type","enum Type : Enum<RevoltEmbedApiModel.Website.Special.Bandcamp.Type> ","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type"]},{"name":"enum Type : Enum<RevoltEmbedApiModel.Website.Special.Lightspeed.Type> ","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-type/index.html","searchKeys":["Type","enum Type : Enum<RevoltEmbedApiModel.Website.Special.Lightspeed.Type> ","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type"]},{"name":"enum Type : Enum<RevoltEmbedApiModel.Website.Special.Twitch.Type> ","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/index.html","searchKeys":["Type","enum Type : Enum<RevoltEmbedApiModel.Website.Special.Twitch.Type> ","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type"]},{"name":"fun revoltApi(config: RevoltApiConfig): RevoltApi","description":"app.revolt.revoltApi","location":"revolt-kotlin-api/app.revolt/revolt-api.html","searchKeys":["revoltApi","fun revoltApi(config: RevoltApiConfig): RevoltApi","app.revolt.revoltApi"]},{"name":"fun updateToken(token: String)","description":"app.revolt.RevoltApi.updateToken","location":"revolt-kotlin-api/app.revolt/-revolt-api/update-token.html","searchKeys":["updateToken","fun updateToken(token: String)","app.revolt.RevoltApi.updateToken"]},{"name":"fun valueOf(value: String): RevoltEmbedApiModel.Image.Size","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size.valueOf","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltEmbedApiModel.Image.Size","app.revolt.model.RevoltEmbedApiModel.Image.Size.valueOf"]},{"name":"fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Bandcamp.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.valueOf","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Bandcamp.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.valueOf"]},{"name":"fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Lightspeed.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.valueOf","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Lightspeed.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.valueOf"]},{"name":"fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Twitch.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.valueOf","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltEmbedApiModel.Website.Special.Twitch.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.valueOf"]},{"name":"fun valueOf(value: String): RevoltErrorApiType","description":"app.revolt.exception.RevoltErrorApiType.valueOf","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltErrorApiType","app.revolt.exception.RevoltErrorApiType.valueOf"]},{"name":"fun valueOf(value: String): RevoltFetchMessagesRequestApiModel.Sort","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.valueOf","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltFetchMessagesRequestApiModel.Sort","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.valueOf"]},{"name":"fun valueOf(value: String): RevoltFileUploadApiRequest.ContentType","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.valueOf","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltFileUploadApiRequest.ContentType","app.revolt.model.RevoltFileUploadApiRequest.ContentType.valueOf"]},{"name":"fun valueOf(value: String): RevoltMFAMethodApiType","description":"app.revolt.model.auth.RevoltMFAMethodApiType.valueOf","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltMFAMethodApiType","app.revolt.model.auth.RevoltMFAMethodApiType.valueOf"]},{"name":"fun valueOf(value: String): RevoltPermissionApiType","description":"app.revolt.exception.RevoltPermissionApiType.valueOf","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltPermissionApiType","app.revolt.exception.RevoltPermissionApiType.valueOf"]},{"name":"fun valueOf(value: String): RevoltRelationshipStatusApiType","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.valueOf","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltRelationshipStatusApiType","app.revolt.model.general.RevoltRelationshipStatusApiType.valueOf"]},{"name":"fun valueOf(value: String): RevoltServerApiEvent.Error.ErrorType","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.valueOf","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltServerApiEvent.Error.ErrorType","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.valueOf"]},{"name":"fun valueOf(value: String): RevoltServerApiEvent.UserUpdate.Field","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.valueOf","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltServerApiEvent.UserUpdate.Field","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.valueOf"]},{"name":"fun valueOf(value: String): RevoltUserEditApiRequest.FieldsUser","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.valueOf","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltUserEditApiRequest.FieldsUser","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.valueOf"]},{"name":"fun valueOf(value: String): RevoltUserPermissionApiType","description":"app.revolt.exception.RevoltUserPermissionApiType.valueOf","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltUserPermissionApiType","app.revolt.exception.RevoltUserPermissionApiType.valueOf"]},{"name":"fun valueOf(value: String): RevoltUserPresenceApiType","description":"app.revolt.model.user.RevoltUserPresenceApiType.valueOf","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RevoltUserPresenceApiType","app.revolt.model.user.RevoltUserPresenceApiType.valueOf"]},{"name":"fun values(): Array<RevoltEmbedApiModel.Image.Size>","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size.values","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/values.html","searchKeys":["values","fun values(): Array<RevoltEmbedApiModel.Image.Size>","app.revolt.model.RevoltEmbedApiModel.Image.Size.values"]},{"name":"fun values(): Array<RevoltEmbedApiModel.Website.Special.Bandcamp.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.values","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/values.html","searchKeys":["values","fun values(): Array<RevoltEmbedApiModel.Website.Special.Bandcamp.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.values"]},{"name":"fun values(): Array<RevoltEmbedApiModel.Website.Special.Lightspeed.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.values","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-type/values.html","searchKeys":["values","fun values(): Array<RevoltEmbedApiModel.Website.Special.Lightspeed.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.values"]},{"name":"fun values(): Array<RevoltEmbedApiModel.Website.Special.Twitch.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.values","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/values.html","searchKeys":["values","fun values(): Array<RevoltEmbedApiModel.Website.Special.Twitch.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.values"]},{"name":"fun values(): Array<RevoltErrorApiType>","description":"app.revolt.exception.RevoltErrorApiType.values","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltErrorApiType>","app.revolt.exception.RevoltErrorApiType.values"]},{"name":"fun values(): Array<RevoltFetchMessagesRequestApiModel.Sort>","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.values","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/values.html","searchKeys":["values","fun values(): Array<RevoltFetchMessagesRequestApiModel.Sort>","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.values"]},{"name":"fun values(): Array<RevoltFileUploadApiRequest.ContentType>","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.values","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/values.html","searchKeys":["values","fun values(): Array<RevoltFileUploadApiRequest.ContentType>","app.revolt.model.RevoltFileUploadApiRequest.ContentType.values"]},{"name":"fun values(): Array<RevoltMFAMethodApiType>","description":"app.revolt.model.auth.RevoltMFAMethodApiType.values","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltMFAMethodApiType>","app.revolt.model.auth.RevoltMFAMethodApiType.values"]},{"name":"fun values(): Array<RevoltPermissionApiType>","description":"app.revolt.exception.RevoltPermissionApiType.values","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltPermissionApiType>","app.revolt.exception.RevoltPermissionApiType.values"]},{"name":"fun values(): Array<RevoltRelationshipStatusApiType>","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.values","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltRelationshipStatusApiType>","app.revolt.model.general.RevoltRelationshipStatusApiType.values"]},{"name":"fun values(): Array<RevoltServerApiEvent.Error.ErrorType>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.values","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/values.html","searchKeys":["values","fun values(): Array<RevoltServerApiEvent.Error.ErrorType>","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.values"]},{"name":"fun values(): Array<RevoltServerApiEvent.UserUpdate.Field>","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.values","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/values.html","searchKeys":["values","fun values(): Array<RevoltServerApiEvent.UserUpdate.Field>","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.values"]},{"name":"fun values(): Array<RevoltUserEditApiRequest.FieldsUser>","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.values","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/values.html","searchKeys":["values","fun values(): Array<RevoltUserEditApiRequest.FieldsUser>","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.values"]},{"name":"fun values(): Array<RevoltUserPermissionApiType>","description":"app.revolt.exception.RevoltUserPermissionApiType.values","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltUserPermissionApiType>","app.revolt.exception.RevoltUserPermissionApiType.values"]},{"name":"fun values(): Array<RevoltUserPresenceApiType>","description":"app.revolt.model.user.RevoltUserPresenceApiType.values","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/values.html","searchKeys":["values","fun values(): Array<RevoltUserPresenceApiType>","app.revolt.model.user.RevoltUserPresenceApiType.values"]},{"name":"interface ApiClientProvider","description":"app.revolt.client.ApiClientProvider","location":"revolt-kotlin-api/app.revolt.client/-api-client-provider/index.html","searchKeys":["ApiClientProvider","interface ApiClientProvider","app.revolt.client.ApiClientProvider"]},{"name":"interface Parent","description":"app.revolt.model.general.RevoltEmojiApiModel.Parent","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-parent/index.html","searchKeys":["Parent","interface Parent","app.revolt.model.general.RevoltEmojiApiModel.Parent"]},{"name":"interface RevoltChannelApiModel","description":"app.revolt.model.channel.RevoltChannelApiModel","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/index.html","searchKeys":["RevoltChannelApiModel","interface RevoltChannelApiModel","app.revolt.model.channel.RevoltChannelApiModel"]},{"name":"interface RevoltLoginApiRequest","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/index.html","searchKeys":["RevoltLoginApiRequest","interface RevoltLoginApiRequest","app.revolt.model.auth.session.request.RevoltLoginApiRequest"]},{"name":"interface RevoltLoginApiResponse","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/index.html","searchKeys":["RevoltLoginApiResponse","interface RevoltLoginApiResponse","app.revolt.model.auth.session.response.RevoltLoginApiResponse"]},{"name":"interface RevoltMFAApiModel","description":"app.revolt.model.auth.RevoltMFAApiModel","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/index.html","searchKeys":["RevoltMFAApiModel","interface RevoltMFAApiModel","app.revolt.model.auth.RevoltMFAApiModel"]},{"name":"interface RevoltServerApiEvent","description":"app.revolt.websocket.server.RevoltServerApiEvent","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/index.html","searchKeys":["RevoltServerApiEvent","interface RevoltServerApiEvent","app.revolt.websocket.server.RevoltServerApiEvent"]},{"name":"interface Special","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/index.html","searchKeys":["Special","interface Special","app.revolt.model.RevoltEmbedApiModel.Website.Special"]},{"name":"object Companion","description":"app.revolt.exception.RevoltApiExceptionHandler.Companion","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception-handler/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.exception.RevoltApiExceptionHandler.Companion"]},{"name":"object Companion","description":"app.revolt.services.RevoltCoreApiService.Companion","location":"revolt-kotlin-api/app.revolt.services/-revolt-core-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.RevoltCoreApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.RevoltUsersApiService.Companion","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.RevoltUsersApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.auth.RevoltAccountApiService.Companion","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.auth.RevoltAccountApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.auth.RevoltMFAApiService.Companion","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.auth.RevoltMFAApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.auth.RevoltOnboardingApiService.Companion","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-onboarding-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.auth.RevoltOnboardingApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.auth.RevoltSessionApiService.Companion","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.auth.RevoltSessionApiService.Companion"]},{"name":"object Companion","description":"app.revolt.services.channels.RevoltMessagingApiService.Companion","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/-companion/index.html","searchKeys":["Companion","object Companion","app.revolt.services.channels.RevoltMessagingApiService.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"app.revolt.model.RevoltFileUploadApiRequest.equals","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","app.revolt.model.RevoltFileUploadApiRequest.equals"]},{"name":"open override fun hashCode(): Int","description":"app.revolt.model.RevoltFileUploadApiRequest.hashCode","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","app.revolt.model.RevoltFileUploadApiRequest.hashCode"]},{"name":"open override val error: RevoltErrorApiType","description":"app.revolt.exception.RevoltApiException.CountLimitException.error","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-count-limit-exception/error.html","searchKeys":["error","open override val error: RevoltErrorApiType","app.revolt.exception.RevoltApiException.CountLimitException.error"]},{"name":"open override val error: RevoltErrorApiType","description":"app.revolt.exception.RevoltApiException.Default.error","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-default/error.html","searchKeys":["error","open override val error: RevoltErrorApiType","app.revolt.exception.RevoltApiException.Default.error"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.CountLimitException.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-count-limit-exception/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.CountLimitException.location"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.DatabaseError.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.DatabaseError.location"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.Default.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-default/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.Default.location"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.FieldValidation.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-field-validation/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.FieldValidation.location"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.MissingPermission.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-permission/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.MissingPermission.location"]},{"name":"open override val location: String?","description":"app.revolt.exception.RevoltApiException.MissingUserPermission.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-user-permission/location.html","searchKeys":["location","open override val location: String?","app.revolt.exception.RevoltApiException.MissingUserPermission.location"]},{"name":"open override val message: String?","description":"app.revolt.exception.RevoltApiException.Unknown.message","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-unknown/message.html","searchKeys":["message","open override val message: String?","app.revolt.exception.RevoltApiException.Unknown.message"]},{"name":"open val error: RevoltErrorApiType","description":"app.revolt.exception.RevoltApiException.error","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/error.html","searchKeys":["error","open val error: RevoltErrorApiType","app.revolt.exception.RevoltApiException.error"]},{"name":"open val location: String?","description":"app.revolt.exception.RevoltApiException.location","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/location.html","searchKeys":["location","open val location: String?","app.revolt.exception.RevoltApiException.location"]},{"name":"sealed class RevoltApiException : Throwable","description":"app.revolt.exception.RevoltApiException","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/index.html","searchKeys":["RevoltApiException","sealed class RevoltApiException : Throwable","app.revolt.exception.RevoltApiException"]},{"name":"sealed class RevoltClientApiEvent","description":"app.revolt.websocket.client.RevoltClientApiEvent","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/index.html","searchKeys":["RevoltClientApiEvent","sealed class RevoltClientApiEvent","app.revolt.websocket.client.RevoltClientApiEvent"]},{"name":"sealed class RevoltEmbedApiModel","description":"app.revolt.model.RevoltEmbedApiModel","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/index.html","searchKeys":["RevoltEmbedApiModel","sealed class RevoltEmbedApiModel","app.revolt.model.RevoltEmbedApiModel"]},{"name":"sealed class RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltMetadataApiModel","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/index.html","searchKeys":["RevoltMetadataApiModel","sealed class RevoltMetadataApiModel","app.revolt.model.general.RevoltMetadataApiModel"]},{"name":"sealed class System","description":"app.revolt.model.RevoltMessageApiModel.System","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/index.html","searchKeys":["System","sealed class System","app.revolt.model.RevoltMessageApiModel.System"]},{"name":"suspend fun changeEmail(request: RevoltChangeEmailApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.changeEmail","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/change-email.html","searchKeys":["changeEmail","suspend fun changeEmail(request: RevoltChangeEmailApiRequest)","app.revolt.services.auth.RevoltAccountApiService.changeEmail"]},{"name":"suspend fun changePassword(request: RevoltChangePasswordApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.changePassword","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/change-password.html","searchKeys":["changePassword","suspend fun changePassword(request: RevoltChangePasswordApiRequest)","app.revolt.services.auth.RevoltAccountApiService.changePassword"]},{"name":"suspend fun changeUsername(request: RevoltUserChangeUsernameApiRequest): RevoltUserApiModel","description":"app.revolt.services.RevoltUsersApiService.changeUsername","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/change-username.html","searchKeys":["changeUsername","suspend fun changeUsername(request: RevoltUserChangeUsernameApiRequest): RevoltUserApiModel","app.revolt.services.RevoltUsersApiService.changeUsername"]},{"name":"suspend fun complete(request: RevoltOnboardingCompleteApiRequest)","description":"app.revolt.services.auth.RevoltOnboardingApiService.complete","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-onboarding-api-service/complete.html","searchKeys":["complete","suspend fun complete(request: RevoltOnboardingCompleteApiRequest)","app.revolt.services.auth.RevoltOnboardingApiService.complete"]},{"name":"suspend fun confirmAccountDeletion(request: RevoltConfirmAccountDeletionApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.confirmAccountDeletion","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/confirm-account-deletion.html","searchKeys":["confirmAccountDeletion","suspend fun confirmAccountDeletion(request: RevoltConfirmAccountDeletionApiRequest)","app.revolt.services.auth.RevoltAccountApiService.confirmAccountDeletion"]},{"name":"suspend fun createAccount(request: RevoltCreateAccountApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.createAccount","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/create-account.html","searchKeys":["createAccount","suspend fun createAccount(request: RevoltCreateAccountApiRequest)","app.revolt.services.auth.RevoltAccountApiService.createAccount"]},{"name":"suspend fun createMFATicket(request: RevoltCreateMFATicketApiRequest): RevoltCreateMFATicketApiResponse","description":"app.revolt.services.auth.RevoltMFAApiService.createMFATicket","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/create-m-f-a-ticket.html","searchKeys":["createMFATicket","suspend fun createMFATicket(request: RevoltCreateMFATicketApiRequest): RevoltCreateMFATicketApiResponse","app.revolt.services.auth.RevoltMFAApiService.createMFATicket"]},{"name":"suspend fun deleteAccount()","description":"app.revolt.services.auth.RevoltAccountApiService.deleteAccount","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/delete-account.html","searchKeys":["deleteAccount","suspend fun deleteAccount()","app.revolt.services.auth.RevoltAccountApiService.deleteAccount"]},{"name":"suspend fun deleteSession(sessionId: String)","description":"app.revolt.services.auth.RevoltSessionApiService.deleteSession","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/delete-session.html","searchKeys":["deleteSession","suspend fun deleteSession(sessionId: String)","app.revolt.services.auth.RevoltSessionApiService.deleteSession"]},{"name":"suspend fun deleteSessions()","description":"app.revolt.services.auth.RevoltSessionApiService.deleteSessions","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/delete-sessions.html","searchKeys":["deleteSessions","suspend fun deleteSessions()","app.revolt.services.auth.RevoltSessionApiService.deleteSessions"]},{"name":"suspend fun disableAccount()","description":"app.revolt.services.auth.RevoltAccountApiService.disableAccount","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/disable-account.html","searchKeys":["disableAccount","suspend fun disableAccount()","app.revolt.services.auth.RevoltAccountApiService.disableAccount"]},{"name":"suspend fun disableTOTP2FA()","description":"app.revolt.services.auth.RevoltMFAApiService.disableTOTP2FA","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/disable-t-o-t-p2-f-a.html","searchKeys":["disableTOTP2FA","suspend fun disableTOTP2FA()","app.revolt.services.auth.RevoltMFAApiService.disableTOTP2FA"]},{"name":"suspend fun editSession(sessionId: String, request: RevoltSessionEditApiRequest): HttpResponse","description":"app.revolt.services.auth.RevoltSessionApiService.editSession","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/edit-session.html","searchKeys":["editSession","suspend fun editSession(sessionId: String, request: RevoltSessionEditApiRequest): HttpResponse","app.revolt.services.auth.RevoltSessionApiService.editSession"]},{"name":"suspend fun editUser(request: RevoltUserEditApiRequest): RevoltUserApiModel","description":"app.revolt.services.RevoltUsersApiService.editUser","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/edit-user.html","searchKeys":["editUser","suspend fun editUser(request: RevoltUserEditApiRequest): RevoltUserApiModel","app.revolt.services.RevoltUsersApiService.editUser"]},{"name":"suspend fun enableTOTP2FA(request: RevoltMFAApiModel)","description":"app.revolt.services.auth.RevoltMFAApiService.enableTOTP2FA","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/enable-t-o-t-p2-f-a.html","searchKeys":["enableTOTP2FA","suspend fun enableTOTP2FA(request: RevoltMFAApiModel)","app.revolt.services.auth.RevoltMFAApiService.enableTOTP2FA"]},{"name":"suspend fun fetchAccount(): RevoltFetchAccountApiResponse","description":"app.revolt.services.auth.RevoltAccountApiService.fetchAccount","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/fetch-account.html","searchKeys":["fetchAccount","suspend fun fetchAccount(): RevoltFetchAccountApiResponse","app.revolt.services.auth.RevoltAccountApiService.fetchAccount"]},{"name":"suspend fun fetchConfiguration(): RevoltConfigurationApiModel","description":"app.revolt.services.RevoltCoreApiService.fetchConfiguration","location":"revolt-kotlin-api/app.revolt.services/-revolt-core-api-service/fetch-configuration.html","searchKeys":["fetchConfiguration","suspend fun fetchConfiguration(): RevoltConfigurationApiModel","app.revolt.services.RevoltCoreApiService.fetchConfiguration"]},{"name":"suspend fun fetchMessage(channelId: String, messageId: String): RevoltMessageApiModel","description":"app.revolt.services.channels.RevoltMessagingApiService.fetchMessage","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/fetch-message.html","searchKeys":["fetchMessage","suspend fun fetchMessage(channelId: String, messageId: String): RevoltMessageApiModel","app.revolt.services.channels.RevoltMessagingApiService.fetchMessage"]},{"name":"suspend fun fetchMessages(request: RevoltFetchMessagesRequestApiModel): List<RevoltMessageApiModel>","description":"app.revolt.services.channels.RevoltMessagingApiService.fetchMessages","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/fetch-messages.html","searchKeys":["fetchMessages","suspend fun fetchMessages(request: RevoltFetchMessagesRequestApiModel): List<RevoltMessageApiModel>","app.revolt.services.channels.RevoltMessagingApiService.fetchMessages"]},{"name":"suspend fun fetchMessagesWithUsers(request: RevoltFetchMessagesRequestApiModel): RevoltFetchMessagesResponseApiModel","description":"app.revolt.services.channels.RevoltMessagingApiService.fetchMessagesWithUsers","location":"revolt-kotlin-api/app.revolt.services.channels/-revolt-messaging-api-service/fetch-messages-with-users.html","searchKeys":["fetchMessagesWithUsers","suspend fun fetchMessagesWithUsers(request: RevoltFetchMessagesRequestApiModel): RevoltFetchMessagesResponseApiModel","app.revolt.services.channels.RevoltMessagingApiService.fetchMessagesWithUsers"]},{"name":"suspend fun fetchRecoveryCodes(): List<String>","description":"app.revolt.services.auth.RevoltMFAApiService.fetchRecoveryCodes","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/fetch-recovery-codes.html","searchKeys":["fetchRecoveryCodes","suspend fun fetchRecoveryCodes(): List<String>","app.revolt.services.auth.RevoltMFAApiService.fetchRecoveryCodes"]},{"name":"suspend fun fetchSelf(): RevoltUserApiModel","description":"app.revolt.services.RevoltUsersApiService.fetchSelf","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/fetch-self.html","searchKeys":["fetchSelf","suspend fun fetchSelf(): RevoltUserApiModel","app.revolt.services.RevoltUsersApiService.fetchSelf"]},{"name":"suspend fun fetchSessions(): List<RevoltFetchSessionApiResponse>","description":"app.revolt.services.auth.RevoltSessionApiService.fetchSessions","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/fetch-sessions.html","searchKeys":["fetchSessions","suspend fun fetchSessions(): List<RevoltFetchSessionApiResponse>","app.revolt.services.auth.RevoltSessionApiService.fetchSessions"]},{"name":"suspend fun fetchUser(userId: String): RevoltUserApiModel","description":"app.revolt.services.RevoltUsersApiService.fetchUser","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/fetch-user.html","searchKeys":["fetchUser","suspend fun fetchUser(userId: String): RevoltUserApiModel","app.revolt.services.RevoltUsersApiService.fetchUser"]},{"name":"suspend fun fetchUserDefaultAvatar(userId: String): ByteArray","description":"app.revolt.services.RevoltUsersApiService.fetchUserDefaultAvatar","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/fetch-user-default-avatar.html","searchKeys":["fetchUserDefaultAvatar","suspend fun fetchUserDefaultAvatar(userId: String): ByteArray","app.revolt.services.RevoltUsersApiService.fetchUserDefaultAvatar"]},{"name":"suspend fun fetchUserFlags(userId: String): RevoltUserFlagsApiResponse","description":"app.revolt.services.RevoltUsersApiService.fetchUserFlags","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/fetch-user-flags.html","searchKeys":["fetchUserFlags","suspend fun fetchUserFlags(userId: String): RevoltUserFlagsApiResponse","app.revolt.services.RevoltUsersApiService.fetchUserFlags"]},{"name":"suspend fun fetchUserProfile(userId: String): RevoltUserProfileApiModel","description":"app.revolt.services.RevoltUsersApiService.fetchUserProfile","location":"revolt-kotlin-api/app.revolt.services/-revolt-users-api-service/fetch-user-profile.html","searchKeys":["fetchUserProfile","suspend fun fetchUserProfile(userId: String): RevoltUserProfileApiModel","app.revolt.services.RevoltUsersApiService.fetchUserProfile"]},{"name":"suspend fun generateRecoveryCodes(): List<String>","description":"app.revolt.services.auth.RevoltMFAApiService.generateRecoveryCodes","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/generate-recovery-codes.html","searchKeys":["generateRecoveryCodes","suspend fun generateRecoveryCodes(): List<String>","app.revolt.services.auth.RevoltMFAApiService.generateRecoveryCodes"]},{"name":"suspend fun generateTOTPSecret(): RevoltGenerateTOTPSecretApiResponse","description":"app.revolt.services.auth.RevoltMFAApiService.generateTOTPSecret","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/generate-t-o-t-p-secret.html","searchKeys":["generateTOTPSecret","suspend fun generateTOTPSecret(): RevoltGenerateTOTPSecretApiResponse","app.revolt.services.auth.RevoltMFAApiService.generateTOTPSecret"]},{"name":"suspend fun getMFAMethods(): List<RevoltMFAMethodApiType>","description":"app.revolt.services.auth.RevoltMFAApiService.getMFAMethods","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/get-m-f-a-methods.html","searchKeys":["getMFAMethods","suspend fun getMFAMethods(): List<RevoltMFAMethodApiType>","app.revolt.services.auth.RevoltMFAApiService.getMFAMethods"]},{"name":"suspend fun handle(json: Json, cause: Throwable, request: HttpRequest)","description":"app.revolt.exception.RevoltApiExceptionHandler.handle","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception-handler/handle.html","searchKeys":["handle","suspend fun handle(json: Json, cause: Throwable, request: HttpRequest)","app.revolt.exception.RevoltApiExceptionHandler.handle"]},{"name":"suspend fun initialize(webSocketUrl: String)","description":"app.revolt.websocket.RevoltApiWebSocket.initialize","location":"revolt-kotlin-api/app.revolt.websocket/-revolt-api-web-socket/initialize.html","searchKeys":["initialize","suspend fun initialize(webSocketUrl: String)","app.revolt.websocket.RevoltApiWebSocket.initialize"]},{"name":"suspend fun login(request: RevoltLoginApiRequest): RevoltLoginApiResponse","description":"app.revolt.services.auth.RevoltSessionApiService.login","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/login.html","searchKeys":["login","suspend fun login(request: RevoltLoginApiRequest): RevoltLoginApiResponse","app.revolt.services.auth.RevoltSessionApiService.login"]},{"name":"suspend fun logout()","description":"app.revolt.services.auth.RevoltSessionApiService.logout","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-session-api-service/logout.html","searchKeys":["logout","suspend fun logout()","app.revolt.services.auth.RevoltSessionApiService.logout"]},{"name":"suspend fun mfaStatus(): RevoltMFAStatusApiResponse","description":"app.revolt.services.auth.RevoltMFAApiService.mfaStatus","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-m-f-a-api-service/mfa-status.html","searchKeys":["mfaStatus","suspend fun mfaStatus(): RevoltMFAStatusApiResponse","app.revolt.services.auth.RevoltMFAApiService.mfaStatus"]},{"name":"suspend fun resendVerification(request: RevoltResendVerificationApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.resendVerification","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/resend-verification.html","searchKeys":["resendVerification","suspend fun resendVerification(request: RevoltResendVerificationApiRequest)","app.revolt.services.auth.RevoltAccountApiService.resendVerification"]},{"name":"suspend fun resetPassword(request: RevoltResetPasswordApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.resetPassword","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/reset-password.html","searchKeys":["resetPassword","suspend fun resetPassword(request: RevoltResetPasswordApiRequest)","app.revolt.services.auth.RevoltAccountApiService.resetPassword"]},{"name":"suspend fun sendEvent(event: RevoltClientApiEvent)","description":"app.revolt.websocket.RevoltApiWebSocket.sendEvent","location":"revolt-kotlin-api/app.revolt.websocket/-revolt-api-web-socket/send-event.html","searchKeys":["sendEvent","suspend fun sendEvent(event: RevoltClientApiEvent)","app.revolt.websocket.RevoltApiWebSocket.sendEvent"]},{"name":"suspend fun sendPasswordReset(request: RevoltSendPasswordResetApiRequest)","description":"app.revolt.services.auth.RevoltAccountApiService.sendPasswordReset","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/send-password-reset.html","searchKeys":["sendPasswordReset","suspend fun sendPasswordReset(request: RevoltSendPasswordResetApiRequest)","app.revolt.services.auth.RevoltAccountApiService.sendPasswordReset"]},{"name":"suspend fun status(): RevoltOnboardingStatusApiResponse","description":"app.revolt.services.auth.RevoltOnboardingApiService.status","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-onboarding-api-service/status.html","searchKeys":["status","suspend fun status(): RevoltOnboardingStatusApiResponse","app.revolt.services.auth.RevoltOnboardingApiService.status"]},{"name":"suspend fun uploadFile(url: String, file: RevoltFileUploadApiRequest): RevoltFileUploadApiResponse","description":"app.revolt.services.RevoltFileApiService.uploadFile","location":"revolt-kotlin-api/app.revolt.services/-revolt-file-api-service/upload-file.html","searchKeys":["uploadFile","suspend fun uploadFile(url: String, file: RevoltFileUploadApiRequest): RevoltFileUploadApiResponse","app.revolt.services.RevoltFileApiService.uploadFile"]},{"name":"suspend fun verifyEmail(request: RevoltVerifyEmailApiRequest): RevoltVerifyEmailApiResponse","description":"app.revolt.services.auth.RevoltAccountApiService.verifyEmail","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-account-api-service/verify-email.html","searchKeys":["verifyEmail","suspend fun verifyEmail(request: RevoltVerifyEmailApiRequest): RevoltVerifyEmailApiResponse","app.revolt.services.auth.RevoltAccountApiService.verifyEmail"]},{"name":"val account: RevoltAccountApiService","description":"app.revolt.services.auth.RevoltAuthApiService.account","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/account.html","searchKeys":["account","val account: RevoltAccountApiService","app.revolt.services.auth.RevoltAuthApiService.account"]},{"name":"val accountId: String","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.accountId","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/account-id.html","searchKeys":["accountId","val accountId: String","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.accountId"]},{"name":"val accountId: String","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.accountId","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/account-id.html","searchKeys":["accountId","val accountId: String","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.accountId"]},{"name":"val active: Boolean","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.active","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/active.html","searchKeys":["active","val active: Boolean","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.active"]},{"name":"val admin: RevoltAdminApiService","description":"app.revolt.RevoltApi.admin","location":"revolt-kotlin-api/app.revolt/-revolt-api/admin.html","searchKeys":["admin","val admin: RevoltAdminApiService","app.revolt.RevoltApi.admin"]},{"name":"val after: String? = null","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.after","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/after.html","searchKeys":["after","val after: String? = null","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.after"]},{"name":"val allowed: Int","description":"app.revolt.model.general.RevoltOverrideFieldApiModel.allowed","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-override-field-api-model/allowed.html","searchKeys":["allowed","val allowed: Int","app.revolt.model.general.RevoltOverrideFieldApiModel.allowed"]},{"name":"val allowedMethods: RevoltMFAMethodApiType","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.allowedMethods","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-m-f-a/allowed-methods.html","searchKeys":["allowedMethods","val allowedMethods: RevoltMFAMethodApiType","app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.allowedMethods"]},{"name":"val analytics: Boolean? = null","description":"app.revolt.model.server.RevoltServerApiModel.analytics","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/analytics.html","searchKeys":["analytics","val analytics: Boolean? = null","app.revolt.model.server.RevoltServerApiModel.analytics"]},{"name":"val animated: Boolean? = null","description":"app.revolt.model.general.RevoltEmojiApiModel.animated","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/animated.html","searchKeys":["animated","val animated: Boolean? = null","app.revolt.model.general.RevoltEmojiApiModel.animated"]},{"name":"val app: String","description":"app.revolt.model.RevoltConfigurationApiModel.app","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/app.html","searchKeys":["app","val app: String","app.revolt.model.RevoltConfigurationApiModel.app"]},{"name":"val attachments: List<RevoltFileApiModel>? = null","description":"app.revolt.model.RevoltMessageApiModel.attachments","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/attachments.html","searchKeys":["attachments","val attachments: List<RevoltFileApiModel>? = null","app.revolt.model.RevoltMessageApiModel.attachments"]},{"name":"val auth: RevoltAuthApiService","description":"app.revolt.RevoltApi.auth","location":"revolt-kotlin-api/app.revolt/-revolt-api/auth.html","searchKeys":["auth","val auth: RevoltAuthApiService","app.revolt.RevoltApi.auth"]},{"name":"val auth: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.auth","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-subscription/auth.html","searchKeys":["auth","val auth: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.auth"]},{"name":"val author: String","description":"app.revolt.model.RevoltMessageApiModel.author","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/author.html","searchKeys":["author","val author: String","app.revolt.model.RevoltMessageApiModel.author"]},{"name":"val authorised: Boolean","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.authorised","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/authorised.html","searchKeys":["authorised","val authorised: Boolean","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.authorised"]},{"name":"val authorised: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.authorised","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/authorised.html","searchKeys":["authorised","val authorised: Boolean","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.authorised"]},{"name":"val autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration","description":"app.revolt.model.RevoltConfigurationApiModel.Features.autumn","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/autumn.html","searchKeys":["autumn","val autumn: RevoltConfigurationApiModel.Features.GeneralServerConfiguration","app.revolt.model.RevoltConfigurationApiModel.Features.autumn"]},{"name":"val avatar: RevoltFileApiModel? = null","description":"app.revolt.model.server.RevoltServerMemberApiModel.avatar","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/avatar.html","searchKeys":["avatar","val avatar: RevoltFileApiModel? = null","app.revolt.model.server.RevoltServerMemberApiModel.avatar"]},{"name":"val avatar: RevoltFileApiModel? = null","description":"app.revolt.model.user.RevoltUserApiModel.avatar","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/avatar.html","searchKeys":["avatar","val avatar: RevoltFileApiModel? = null","app.revolt.model.user.RevoltUserApiModel.avatar"]},{"name":"val avatar: RevoltFileApiModel? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.avatar","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/avatar.html","searchKeys":["avatar","val avatar: RevoltFileApiModel? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.avatar"]},{"name":"val avatar: String? = null","description":"app.revolt.model.RevoltMasqueradeApiModel.avatar","location":"revolt-kotlin-api/app.revolt.model/-revolt-masquerade-api-model/avatar.html","searchKeys":["avatar","val avatar: String? = null","app.revolt.model.RevoltMasqueradeApiModel.avatar"]},{"name":"val avatar: String? = null","description":"app.revolt.model.RevoltMessageApiModel.Webhook.avatar","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-webhook/avatar.html","searchKeys":["avatar","val avatar: String? = null","app.revolt.model.RevoltMessageApiModel.Webhook.avatar"]},{"name":"val avatarId: String? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.avatarId","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/avatar-id.html","searchKeys":["avatarId","val avatarId: String? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.avatarId"]},{"name":"val background: RevoltFileApiModel? = null","description":"app.revolt.model.user.RevoltUserProfileApiModel.background","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-profile-api-model/background.html","searchKeys":["background","val background: RevoltFileApiModel? = null","app.revolt.model.user.RevoltUserProfileApiModel.background"]},{"name":"val background: String? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.background","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-profile/background.html","searchKeys":["background","val background: String? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.background"]},{"name":"val badges: Int? = null","description":"app.revolt.model.user.RevoltUserApiModel.badges","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/badges.html","searchKeys":["badges","val badges: Int? = null","app.revolt.model.user.RevoltUserApiModel.badges"]},{"name":"val badges: Int? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.badges","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/badges.html","searchKeys":["badges","val badges: Int? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.badges"]},{"name":"val badges: Int? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.badges","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/badges.html","searchKeys":["badges","val badges: Int? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.badges"]},{"name":"val banner: RevoltFileApiModel? = null","description":"app.revolt.model.server.RevoltServerApiModel.banner","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/banner.html","searchKeys":["banner","val banner: RevoltFileApiModel? = null","app.revolt.model.server.RevoltServerApiModel.banner"]},{"name":"val before: String? = null","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.before","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/before.html","searchKeys":["before","val before: String? = null","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.before"]},{"name":"val bot: RevoltUserApiModel.Bot? = null","description":"app.revolt.model.user.RevoltUserApiModel.bot","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/bot.html","searchKeys":["bot","val bot: RevoltUserApiModel.Bot? = null","app.revolt.model.user.RevoltUserApiModel.bot"]},{"name":"val bot: RevoltUserApiModel.Bot? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.bot","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/bot.html","searchKeys":["bot","val bot: RevoltUserApiModel.Bot? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.bot"]},{"name":"val bots: RevoltBotsApiService","description":"app.revolt.RevoltApi.bots","location":"revolt-kotlin-api/app.revolt/-revolt-api/bots.html","searchKeys":["bots","val bots: RevoltBotsApiService","app.revolt.RevoltApi.bots"]},{"name":"val build: RevoltConfigurationApiModel.Build","description":"app.revolt.model.RevoltConfigurationApiModel.build","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/build.html","searchKeys":["build","val build: RevoltConfigurationApiModel.Build","app.revolt.model.RevoltConfigurationApiModel.build"]},{"name":"val by: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.by","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-description-changed/by.html","searchKeys":["by","val by: String","app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.by"]},{"name":"val by: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.by","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-icon-changed/by.html","searchKeys":["by","val by: String","app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.by"]},{"name":"val by: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.by","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-renamed/by.html","searchKeys":["by","val by: String","app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.by"]},{"name":"val by: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserAdded.by","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-added/by.html","searchKeys":["by","val by: String","app.revolt.model.RevoltMessageApiModel.System.UserAdded.by"]},{"name":"val by: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserRemoved.by","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-removed/by.html","searchKeys":["by","val by: String","app.revolt.model.RevoltMessageApiModel.System.UserRemoved.by"]},{"name":"val bytes: ByteArray","description":"app.revolt.model.RevoltFileUploadApiRequest.bytes","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/bytes.html","searchKeys":["bytes","val bytes: ByteArray","app.revolt.model.RevoltFileUploadApiRequest.bytes"]},{"name":"val captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration","description":"app.revolt.model.RevoltConfigurationApiModel.Features.captcha","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/captcha.html","searchKeys":["captcha","val captcha: RevoltConfigurationApiModel.Features.HCaptchaConfiguration","app.revolt.model.RevoltConfigurationApiModel.Features.captcha"]},{"name":"val captcha: String?","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.captcha","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/captcha.html","searchKeys":["captcha","val captcha: String?","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.captcha"]},{"name":"val captcha: String?","description":"app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.captcha","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-resend-verification-api-request/captcha.html","searchKeys":["captcha","val captcha: String?","app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.captcha"]},{"name":"val captcha: String?","description":"app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.captcha","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-send-password-reset-api-request/captcha.html","searchKeys":["captcha","val captcha: String?","app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.captcha"]},{"name":"val categories: List<RevoltServerApiModel.Category>? = null","description":"app.revolt.model.server.RevoltServerApiModel.categories","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/categories.html","searchKeys":["categories","val categories: List<RevoltServerApiModel.Category>? = null","app.revolt.model.server.RevoltServerApiModel.categories"]},{"name":"val channel: String","description":"app.revolt.model.RevoltMessageApiModel.channel","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/channel.html","searchKeys":["channel","val channel: String","app.revolt.model.RevoltMessageApiModel.channel"]},{"name":"val channel: String","description":"app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping.channel","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-begin-typing/channel.html","searchKeys":["channel","val channel: String","app.revolt.websocket.client.RevoltClientApiEvent.BeginTyping.channel"]},{"name":"val channel: String","description":"app.revolt.websocket.client.RevoltClientApiEvent.EndTyping.channel","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-end-typing/channel.html","searchKeys":["channel","val channel: String","app.revolt.websocket.client.RevoltClientApiEvent.EndTyping.channel"]},{"name":"val channelId: String","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.channelId","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/channel-id.html","searchKeys":["channelId","val channelId: String","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.channelId"]},{"name":"val channels: List<RevoltChannelApiModel>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready.channels","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/channels.html","searchKeys":["channels","val channels: List<RevoltChannelApiModel>","app.revolt.websocket.server.RevoltServerApiEvent.Ready.channels"]},{"name":"val channels: List<String>","description":"app.revolt.model.server.RevoltServerApiModel.Category.channels","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-category/channels.html","searchKeys":["channels","val channels: List<String>","app.revolt.model.server.RevoltServerApiModel.Category.channels"]},{"name":"val channels: List<String>","description":"app.revolt.model.server.RevoltServerApiModel.channels","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/channels.html","searchKeys":["channels","val channels: List<String>","app.revolt.model.server.RevoltServerApiModel.channels"]},{"name":"val channels: RevoltChannelsApiService","description":"app.revolt.RevoltApi.channels","location":"revolt-kotlin-api/app.revolt/-revolt-api/channels.html","searchKeys":["channels","val channels: RevoltChannelsApiService","app.revolt.RevoltApi.channels"]},{"name":"val clear: List<RevoltServerApiEvent.UserUpdate.Field>","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.clear","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/clear.html","searchKeys":["clear","val clear: List<RevoltServerApiEvent.UserUpdate.Field>","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.clear"]},{"name":"val code: String","description":"app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest.code","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-verify-email-api-request/code.html","searchKeys":["code","val code: String","app.revolt.model.auth.account.request.RevoltVerifyEmailApiRequest.code"]},{"name":"val collection: String?","description":"app.revolt.exception.RevoltApiException.DatabaseError.collection","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/collection.html","searchKeys":["collection","val collection: String?","app.revolt.exception.RevoltApiException.DatabaseError.collection"]},{"name":"val color: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.color","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/color.html","searchKeys":["color","val color: String? = null","app.revolt.model.RevoltEmbedApiModel.Text.color"]},{"name":"val color: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.color","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/color.html","searchKeys":["color","val color: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.color"]},{"name":"val color: String? = null","description":"app.revolt.model.RevoltMasqueradeApiModel.color","location":"revolt-kotlin-api/app.revolt.model/-revolt-masquerade-api-model/color.html","searchKeys":["color","val color: String? = null","app.revolt.model.RevoltMasqueradeApiModel.color"]},{"name":"val color: String? = null","description":"app.revolt.model.server.RevoltServerRoleApiModel.color","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/color.html","searchKeys":["color","val color: String? = null","app.revolt.model.server.RevoltServerRoleApiModel.color"]},{"name":"val commitSHA: String","description":"app.revolt.model.RevoltConfigurationApiModel.Build.commitSHA","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/commit-s-h-a.html","searchKeys":["commitSHA","val commitSHA: String","app.revolt.model.RevoltConfigurationApiModel.Build.commitSHA"]},{"name":"val commitTimestamp: String","description":"app.revolt.model.RevoltConfigurationApiModel.Build.commitTimestamp","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/commit-timestamp.html","searchKeys":["commitTimestamp","val commitTimestamp: String","app.revolt.model.RevoltConfigurationApiModel.Build.commitTimestamp"]},{"name":"val content: String","description":"app.revolt.model.RevoltMessageApiModel.System.Text.content","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-text/content.html","searchKeys":["content","val content: String","app.revolt.model.RevoltMessageApiModel.System.Text.content"]},{"name":"val content: String? = null","description":"app.revolt.model.RevoltMessageApiModel.content","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/content.html","searchKeys":["content","val content: String? = null","app.revolt.model.RevoltMessageApiModel.content"]},{"name":"val content: String? = null","description":"app.revolt.model.user.RevoltUserProfileApiModel.content","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-profile-api-model/content.html","searchKeys":["content","val content: String? = null","app.revolt.model.user.RevoltUserProfileApiModel.content"]},{"name":"val content: String? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.content","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-profile/content.html","searchKeys":["content","val content: String? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.Profile.content"]},{"name":"val contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.contentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/content-type.html","searchKeys":["contentType","val contentType: RevoltEmbedApiModel.Website.Special.Bandcamp.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.contentType"]},{"name":"val contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.contentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/content-type.html","searchKeys":["contentType","val contentType: RevoltEmbedApiModel.Website.Special.Lightspeed.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.contentType"]},{"name":"val contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.contentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/content-type.html","searchKeys":["contentType","val contentType: RevoltEmbedApiModel.Website.Special.Twitch.Type","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.contentType"]},{"name":"val contentType: RevoltFileUploadApiRequest.ContentType","description":"app.revolt.model.RevoltFileUploadApiRequest.contentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/content-type.html","searchKeys":["contentType","val contentType: RevoltFileUploadApiRequest.ContentType","app.revolt.model.RevoltFileUploadApiRequest.contentType"]},{"name":"val contentType: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.contentType","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-spotify/content-type.html","searchKeys":["contentType","val contentType: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.contentType"]},{"name":"val contentType: String","description":"app.revolt.model.general.RevoltFileApiModel.contentType","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/content-type.html","searchKeys":["contentType","val contentType: String","app.revolt.model.general.RevoltFileApiModel.contentType"]},{"name":"val core: RevoltCoreApiService","description":"app.revolt.RevoltApi.core","location":"revolt-kotlin-api/app.revolt/-revolt-api/core.html","searchKeys":["core","val core: RevoltCoreApiService","app.revolt.RevoltApi.core"]},{"name":"val creatorId: String","description":"app.revolt.model.general.RevoltEmojiApiModel.creatorId","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/creator-id.html","searchKeys":["creatorId","val creatorId: String","app.revolt.model.general.RevoltEmojiApiModel.creatorId"]},{"name":"val currentPassword: String","description":"app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.currentPassword","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-email-api-request/current-password.html","searchKeys":["currentPassword","val currentPassword: String","app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.currentPassword"]},{"name":"val currentPassword: String","description":"app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.currentPassword","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-password-api-request/current-password.html","searchKeys":["currentPassword","val currentPassword: String","app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.currentPassword"]},{"name":"val customisation: RevoltCustomisationApiService","description":"app.revolt.RevoltApi.customisation","location":"revolt-kotlin-api/app.revolt/-revolt-api/customisation.html","searchKeys":["customisation","val customisation: RevoltCustomisationApiService","app.revolt.RevoltApi.customisation"]},{"name":"val data: Long","description":"app.revolt.websocket.client.RevoltClientApiEvent.Ping.data","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-ping/data.html","searchKeys":["data","val data: Long","app.revolt.websocket.client.RevoltClientApiEvent.Ping.data"]},{"name":"val data: Long","description":"app.revolt.websocket.server.RevoltServerApiEvent.Pong.data","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-pong/data.html","searchKeys":["data","val data: Long","app.revolt.websocket.server.RevoltServerApiEvent.Pong.data"]},{"name":"val data: RevoltUserUpdateApiModel","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.data","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/data.html","searchKeys":["data","val data: RevoltUserUpdateApiModel","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.data"]},{"name":"val defaultPermissions: Int? = null","description":"app.revolt.model.server.RevoltServerApiModel.defaultPermissions","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/default-permissions.html","searchKeys":["defaultPermissions","val defaultPermissions: Int? = null","app.revolt.model.server.RevoltServerApiModel.defaultPermissions"]},{"name":"val defaultPermissions: RevoltOverrideFieldApiModel? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.defaultPermissions","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/default-permissions.html","searchKeys":["defaultPermissions","val defaultPermissions: RevoltOverrideFieldApiModel? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.defaultPermissions"]},{"name":"val defaultPermissions: RevoltOverrideFieldApiModel? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.defaultPermissions","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/default-permissions.html","searchKeys":["defaultPermissions","val defaultPermissions: RevoltOverrideFieldApiModel? = null","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.defaultPermissions"]},{"name":"val deleted: Boolean? = null","description":"app.revolt.model.general.RevoltFileApiModel.deleted","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/deleted.html","searchKeys":["deleted","val deleted: Boolean? = null","app.revolt.model.general.RevoltFileApiModel.deleted"]},{"name":"val description: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.description","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.RevoltEmbedApiModel.Text.description"]},{"name":"val description: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.description","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.description"]},{"name":"val description: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.description","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.channel.RevoltChannelApiModel.Group.description"]},{"name":"val description: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.description","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.description"]},{"name":"val description: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.description","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.description"]},{"name":"val description: String? = null","description":"app.revolt.model.server.RevoltServerApiModel.description","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/description.html","searchKeys":["description","val description: String? = null","app.revolt.model.server.RevoltServerApiModel.description"]},{"name":"val disallowed: Int","description":"app.revolt.model.general.RevoltOverrideFieldApiModel.disallowed","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-override-field-api-model/disallowed.html","searchKeys":["disallowed","val disallowed: Int","app.revolt.model.general.RevoltOverrideFieldApiModel.disallowed"]},{"name":"val discoverable: Boolean? = null","description":"app.revolt.model.server.RevoltServerApiModel.discoverable","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/discoverable.html","searchKeys":["discoverable","val discoverable: Boolean? = null","app.revolt.model.server.RevoltServerApiModel.discoverable"]},{"name":"val discriminator: String","description":"app.revolt.model.user.RevoltUserApiModel.discriminator","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/discriminator.html","searchKeys":["discriminator","val discriminator: String","app.revolt.model.user.RevoltUserApiModel.discriminator"]},{"name":"val discriminator: String? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.discriminator","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/discriminator.html","searchKeys":["discriminator","val discriminator: String? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.discriminator"]},{"name":"val displayName: String? = null","description":"app.revolt.model.user.RevoltUserApiModel.displayName","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/display-name.html","searchKeys":["displayName","val displayName: String? = null","app.revolt.model.user.RevoltUserApiModel.displayName"]},{"name":"val displayName: String? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.displayName","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/display-name.html","searchKeys":["displayName","val displayName: String? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.displayName"]},{"name":"val displayName: String? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.displayName","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/display-name.html","searchKeys":["displayName","val displayName: String? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.displayName"]},{"name":"val edited: String? = null","description":"app.revolt.model.RevoltMessageApiModel.edited","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/edited.html","searchKeys":["edited","val edited: String? = null","app.revolt.model.RevoltMessageApiModel.edited"]},{"name":"val email: Boolean","description":"app.revolt.model.RevoltConfigurationApiModel.Features.email","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/email.html","searchKeys":["email","val email: Boolean","app.revolt.model.RevoltConfigurationApiModel.Features.email"]},{"name":"val email: String","description":"app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.email","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-email-api-request/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.account.request.RevoltChangeEmailApiRequest.email"]},{"name":"val email: String","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.email","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.email"]},{"name":"val email: String","description":"app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.email","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-resend-verification-api-request/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.account.request.RevoltResendVerificationApiRequest.email"]},{"name":"val email: String","description":"app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.email","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-send-password-reset-api-request/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.account.request.RevoltSendPasswordResetApiRequest.email"]},{"name":"val email: String","description":"app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.email","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-fetch-account-api-response/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.email"]},{"name":"val email: String","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.email","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-normal/email.html","searchKeys":["email","val email: String","app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.email"]},{"name":"val emailMFA: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.emailMFA","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/email-m-f-a.html","searchKeys":["emailMFA","val emailMFA: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.emailMFA"]},{"name":"val emailOtp: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.emailOtp","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/email-otp.html","searchKeys":["emailOtp","val emailOtp: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.emailOtp"]},{"name":"val embeds: List<RevoltEmbedApiModel>? = null","description":"app.revolt.model.RevoltMessageApiModel.embeds","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/embeds.html","searchKeys":["embeds","val embeds: List<RevoltEmbedApiModel>? = null","app.revolt.model.RevoltMessageApiModel.embeds"]},{"name":"val emojis: List<RevoltEmojiApiModel>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready.emojis","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/emojis.html","searchKeys":["emojis","val emojis: List<RevoltEmojiApiModel>","app.revolt.websocket.server.RevoltServerApiEvent.Ready.emojis"]},{"name":"val enabled: Boolean","description":"app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.enabled","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-general-server-configuration/enabled.html","searchKeys":["enabled","val enabled: Boolean","app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.enabled"]},{"name":"val enabled: Boolean","description":"app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.enabled","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-h-captcha-configuration/enabled.html","searchKeys":["enabled","val enabled: Boolean","app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.enabled"]},{"name":"val enabled: Boolean","description":"app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.enabled","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-voice-server-configuration/enabled.html","searchKeys":["enabled","val enabled: Boolean","app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.enabled"]},{"name":"val endpoint: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.endpoint","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-subscription/endpoint.html","searchKeys":["endpoint","val endpoint: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.endpoint"]},{"name":"val entries: EnumEntries<RevoltEmbedApiModel.Image.Size>","description":"app.revolt.model.RevoltEmbedApiModel.Image.Size.entries","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/-size/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltEmbedApiModel.Image.Size>","app.revolt.model.RevoltEmbedApiModel.Image.Size.entries"]},{"name":"val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Bandcamp.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.entries","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Bandcamp.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.Type.entries"]},{"name":"val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Lightspeed.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.entries","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Lightspeed.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.Type.entries"]},{"name":"val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Twitch.Type>","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.entries","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltEmbedApiModel.Website.Special.Twitch.Type>","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.Type.entries"]},{"name":"val entries: EnumEntries<RevoltErrorApiType>","description":"app.revolt.exception.RevoltErrorApiType.entries","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltErrorApiType>","app.revolt.exception.RevoltErrorApiType.entries"]},{"name":"val entries: EnumEntries<RevoltFetchMessagesRequestApiModel.Sort>","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.entries","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/-sort/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltFetchMessagesRequestApiModel.Sort>","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.Sort.entries"]},{"name":"val entries: EnumEntries<RevoltFileUploadApiRequest.ContentType>","description":"app.revolt.model.RevoltFileUploadApiRequest.ContentType.entries","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/-content-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltFileUploadApiRequest.ContentType>","app.revolt.model.RevoltFileUploadApiRequest.ContentType.entries"]},{"name":"val entries: EnumEntries<RevoltMFAMethodApiType>","description":"app.revolt.model.auth.RevoltMFAMethodApiType.entries","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-method-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltMFAMethodApiType>","app.revolt.model.auth.RevoltMFAMethodApiType.entries"]},{"name":"val entries: EnumEntries<RevoltPermissionApiType>","description":"app.revolt.exception.RevoltPermissionApiType.entries","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltPermissionApiType>","app.revolt.exception.RevoltPermissionApiType.entries"]},{"name":"val entries: EnumEntries<RevoltRelationshipStatusApiType>","description":"app.revolt.model.general.RevoltRelationshipStatusApiType.entries","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-relationship-status-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltRelationshipStatusApiType>","app.revolt.model.general.RevoltRelationshipStatusApiType.entries"]},{"name":"val entries: EnumEntries<RevoltServerApiEvent.Error.ErrorType>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.entries","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/-error-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltServerApiEvent.Error.ErrorType>","app.revolt.websocket.server.RevoltServerApiEvent.Error.ErrorType.entries"]},{"name":"val entries: EnumEntries<RevoltServerApiEvent.UserUpdate.Field>","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.entries","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/-field/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltServerApiEvent.UserUpdate.Field>","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.Field.entries"]},{"name":"val entries: EnumEntries<RevoltUserEditApiRequest.FieldsUser>","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.entries","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/-fields-user/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltUserEditApiRequest.FieldsUser>","app.revolt.model.user.request.RevoltUserEditApiRequest.FieldsUser.entries"]},{"name":"val entries: EnumEntries<RevoltUserPermissionApiType>","description":"app.revolt.exception.RevoltUserPermissionApiType.entries","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltUserPermissionApiType>","app.revolt.exception.RevoltUserPermissionApiType.entries"]},{"name":"val entries: EnumEntries<RevoltUserPresenceApiType>","description":"app.revolt.model.user.RevoltUserPresenceApiType.entries","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-presence-api-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RevoltUserPresenceApiType>","app.revolt.model.user.RevoltUserPresenceApiType.entries"]},{"name":"val error: RevoltServerApiEvent.Error.ErrorType","description":"app.revolt.websocket.server.RevoltServerApiEvent.Error.error","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-error/error.html","searchKeys":["error","val error: RevoltServerApiEvent.Error.ErrorType","app.revolt.websocket.server.RevoltServerApiEvent.Error.error"]},{"name":"val events: List<RevoltServerApiEvent>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Bulk.events","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-bulk/events.html","searchKeys":["events","val events: List<RevoltServerApiEvent>","app.revolt.websocket.server.RevoltServerApiEvent.Bulk.events"]},{"name":"val features: RevoltConfigurationApiModel.Features","description":"app.revolt.model.RevoltConfigurationApiModel.features","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/features.html","searchKeys":["features","val features: RevoltConfigurationApiModel.Features","app.revolt.model.RevoltConfigurationApiModel.features"]},{"name":"val fieldError: String?","description":"app.revolt.exception.RevoltApiException.FieldValidation.fieldError","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-field-validation/field-error.html","searchKeys":["fieldError","val fieldError: String?","app.revolt.exception.RevoltApiException.FieldValidation.fieldError"]},{"name":"val fileApi: RevoltFileApiService","description":"app.revolt.RevoltApi.fileApi","location":"revolt-kotlin-api/app.revolt/-revolt-api/file-api.html","searchKeys":["fileApi","val fileApi: RevoltFileApiService","app.revolt.RevoltApi.fileApi"]},{"name":"val fileName: String","description":"app.revolt.model.RevoltFileUploadApiRequest.fileName","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-request/file-name.html","searchKeys":["fileName","val fileName: String","app.revolt.model.RevoltFileUploadApiRequest.fileName"]},{"name":"val filename: String","description":"app.revolt.model.general.RevoltFileApiModel.filename","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/filename.html","searchKeys":["filename","val filename: String","app.revolt.model.general.RevoltFileApiModel.filename"]},{"name":"val flags: Int","description":"app.revolt.model.user.response.RevoltUserFlagsApiResponse.flags","location":"revolt-kotlin-api/app.revolt.model.user.response/-revolt-user-flags-api-response/flags.html","searchKeys":["flags","val flags: Int","app.revolt.model.user.response.RevoltUserFlagsApiResponse.flags"]},{"name":"val flags: Int? = null","description":"app.revolt.model.server.RevoltServerApiModel.flags","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/flags.html","searchKeys":["flags","val flags: Int? = null","app.revolt.model.server.RevoltServerApiModel.flags"]},{"name":"val flags: Int? = null","description":"app.revolt.model.user.RevoltUserApiModel.flags","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/flags.html","searchKeys":["flags","val flags: Int? = null","app.revolt.model.user.RevoltUserApiModel.flags"]},{"name":"val flags: Int? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.flags","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/flags.html","searchKeys":["flags","val flags: Int? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.flags"]},{"name":"val flags: Int? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.flags","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/flags.html","searchKeys":["flags","val flags: Int? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.flags"]},{"name":"val friendlyName: String","description":"app.revolt.model.auth.session.request.RevoltSessionEditApiRequest.friendlyName","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-session-edit-api-request/friendly-name.html","searchKeys":["friendlyName","val friendlyName: String","app.revolt.model.auth.session.request.RevoltSessionEditApiRequest.friendlyName"]},{"name":"val friendlyName: String? = null","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.friendlyName","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-m-f-a/friendly-name.html","searchKeys":["friendlyName","val friendlyName: String? = null","app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.friendlyName"]},{"name":"val friendlyName: String? = null","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.friendlyName","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-normal/friendly-name.html","searchKeys":["friendlyName","val friendlyName: String? = null","app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.friendlyName"]},{"name":"val from: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.from","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-ownership-changed/from.html","searchKeys":["from","val from: String","app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.from"]},{"name":"val height: Int","description":"app.revolt.model.RevoltEmbedApiModel.Image.height","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/height.html","searchKeys":["height","val height: Int","app.revolt.model.RevoltEmbedApiModel.Image.height"]},{"name":"val height: Int","description":"app.revolt.model.RevoltEmbedApiModel.Video.height","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-video/height.html","searchKeys":["height","val height: Int","app.revolt.model.RevoltEmbedApiModel.Video.height"]},{"name":"val height: Int","description":"app.revolt.model.general.RevoltMetadataApiModel.Image.height","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-image/height.html","searchKeys":["height","val height: Int","app.revolt.model.general.RevoltMetadataApiModel.Image.height"]},{"name":"val height: Int","description":"app.revolt.model.general.RevoltMetadataApiModel.Video.height","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-video/height.html","searchKeys":["height","val height: Int","app.revolt.model.general.RevoltMetadataApiModel.Video.height"]},{"name":"val hoist: Boolean? = null","description":"app.revolt.model.server.RevoltServerRoleApiModel.hoist","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/hoist.html","searchKeys":["hoist","val hoist: Boolean? = null","app.revolt.model.server.RevoltServerRoleApiModel.hoist"]},{"name":"val icon: RevoltFileApiModel? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.icon","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/icon.html","searchKeys":["icon","val icon: RevoltFileApiModel? = null","app.revolt.model.channel.RevoltChannelApiModel.Group.icon"]},{"name":"val icon: RevoltFileApiModel? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.icon","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/icon.html","searchKeys":["icon","val icon: RevoltFileApiModel? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.icon"]},{"name":"val icon: RevoltFileApiModel? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.icon","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/icon.html","searchKeys":["icon","val icon: RevoltFileApiModel? = null","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.icon"]},{"name":"val icon: RevoltFileApiModel? = null","description":"app.revolt.model.server.RevoltServerApiModel.icon","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/icon.html","searchKeys":["icon","val icon: RevoltFileApiModel? = null","app.revolt.model.server.RevoltServerApiModel.icon"]},{"name":"val iconUrl: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.iconUrl","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/icon-url.html","searchKeys":["iconUrl","val iconUrl: String? = null","app.revolt.model.RevoltEmbedApiModel.Text.iconUrl"]},{"name":"val iconUrl: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.iconUrl","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/icon-url.html","searchKeys":["iconUrl","val iconUrl: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.iconUrl"]},{"name":"val id: RevoltServerMemberApiModel.ID","description":"app.revolt.model.server.RevoltServerMemberApiModel.id","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/id.html","searchKeys":["id","val id: RevoltServerMemberApiModel.ID","app.revolt.model.server.RevoltServerMemberApiModel.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-bandcamp/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Bandcamp.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-lightspeed/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Lightspeed.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-spotify/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Spotify.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-streamable/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Streamable.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-twitch/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Twitch.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-youtube/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltFileUploadApiResponse.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-file-upload-api-response/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltFileUploadApiResponse.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserAdded.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-added/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserAdded.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserBanned.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-banned/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserBanned.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserJoined.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-joined/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserJoined.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserKicked.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-kicked/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserKicked.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserLeft.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-left/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserLeft.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.System.UserRemoved.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-user-removed/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.System.UserRemoved.id"]},{"name":"val id: String","description":"app.revolt.model.RevoltMessageApiModel.id","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/id.html","searchKeys":["id","val id: String","app.revolt.model.RevoltMessageApiModel.id"]},{"name":"val id: String","description":"app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.id","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-fetch-account-api-response/id.html","searchKeys":["id","val id: String","app.revolt.model.auth.account.response.RevoltFetchAccountApiResponse.id"]},{"name":"val id: String","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.id","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/id.html","searchKeys":["id","val id: String","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.id"]},{"name":"val id: String","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.id","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/id.html","searchKeys":["id","val id: String","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.id"]},{"name":"val id: String","description":"app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.id","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-fetch-session-api-response/id.html","searchKeys":["id","val id: String","app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.id"]},{"name":"val id: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.id","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/id.html","searchKeys":["id","val id: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.id"]},{"name":"val id: String","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.id","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/id.html","searchKeys":["id","val id: String","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.id"]},{"name":"val id: String","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.id","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/id.html","searchKeys":["id","val id: String","app.revolt.model.channel.RevoltChannelApiModel.Group.id"]},{"name":"val id: String","description":"app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.id","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-saved-messages/id.html","searchKeys":["id","val id: String","app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.id"]},{"name":"val id: String","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.id","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/id.html","searchKeys":["id","val id: String","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.id"]},{"name":"val id: String","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.id","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/id.html","searchKeys":["id","val id: String","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.id"]},{"name":"val id: String","description":"app.revolt.model.general.RevoltEmojiApiModel.Parent.Server.id","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/-parent/-server/id.html","searchKeys":["id","val id: String","app.revolt.model.general.RevoltEmojiApiModel.Parent.Server.id"]},{"name":"val id: String","description":"app.revolt.model.general.RevoltEmojiApiModel.id","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/id.html","searchKeys":["id","val id: String","app.revolt.model.general.RevoltEmojiApiModel.id"]},{"name":"val id: String","description":"app.revolt.model.general.RevoltFileApiModel.id","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/id.html","searchKeys":["id","val id: String","app.revolt.model.general.RevoltFileApiModel.id"]},{"name":"val id: String","description":"app.revolt.model.server.RevoltServerApiModel.Category.id","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-category/id.html","searchKeys":["id","val id: String","app.revolt.model.server.RevoltServerApiModel.Category.id"]},{"name":"val id: String","description":"app.revolt.model.server.RevoltServerApiModel.id","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/id.html","searchKeys":["id","val id: String","app.revolt.model.server.RevoltServerApiModel.id"]},{"name":"val id: String","description":"app.revolt.model.user.RevoltUserApiModel.Relationship.id","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-relationship/id.html","searchKeys":["id","val id: String","app.revolt.model.user.RevoltUserApiModel.Relationship.id"]},{"name":"val id: String","description":"app.revolt.model.user.RevoltUserApiModel.id","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/id.html","searchKeys":["id","val id: String","app.revolt.model.user.RevoltUserApiModel.id"]},{"name":"val id: String","description":"app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.id","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-user-update/id.html","searchKeys":["id","val id: String","app.revolt.websocket.server.RevoltServerApiEvent.UserUpdate.id"]},{"name":"val image: RevoltEmbedApiModel.Image? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.image","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/image.html","searchKeys":["image","val image: RevoltEmbedApiModel.Image? = null","app.revolt.model.RevoltEmbedApiModel.Website.image"]},{"name":"val incomingEvents: Channel<RevoltServerApiEvent>","description":"app.revolt.websocket.RevoltApiWebSocket.incomingEvents","location":"revolt-kotlin-api/app.revolt.websocket/-revolt-api-web-socket/incoming-events.html","searchKeys":["incomingEvents","val incomingEvents: Channel<RevoltServerApiEvent>","app.revolt.websocket.RevoltApiWebSocket.incomingEvents"]},{"name":"val interactions: RevoltMessageApiModel.Interactions? = null","description":"app.revolt.model.RevoltMessageApiModel.interactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/interactions.html","searchKeys":["interactions","val interactions: RevoltMessageApiModel.Interactions? = null","app.revolt.model.RevoltMessageApiModel.interactions"]},{"name":"val invite: String?","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.invite","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/invite.html","searchKeys":["invite","val invite: String?","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.invite"]},{"name":"val inviteOnly: Boolean","description":"app.revolt.model.RevoltConfigurationApiModel.Features.inviteOnly","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/invite-only.html","searchKeys":["inviteOnly","val inviteOnly: Boolean","app.revolt.model.RevoltConfigurationApiModel.Features.inviteOnly"]},{"name":"val invites: RevoltInvitesApiService","description":"app.revolt.RevoltApi.invites","location":"revolt-kotlin-api/app.revolt/-revolt-api/invites.html","searchKeys":["invites","val invites: RevoltInvitesApiService","app.revolt.RevoltApi.invites"]},{"name":"val january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration","description":"app.revolt.model.RevoltConfigurationApiModel.Features.january","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/january.html","searchKeys":["january","val january: RevoltConfigurationApiModel.Features.GeneralServerConfiguration","app.revolt.model.RevoltConfigurationApiModel.Features.january"]},{"name":"val joinedAt: String","description":"app.revolt.model.server.RevoltServerMemberApiModel.joinedAt","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/joined-at.html","searchKeys":["joinedAt","val joinedAt: String","app.revolt.model.server.RevoltServerMemberApiModel.joinedAt"]},{"name":"val key: String","description":"app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.key","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-h-captcha-configuration/key.html","searchKeys":["key","val key: String","app.revolt.model.RevoltConfigurationApiModel.Features.HCaptchaConfiguration.key"]},{"name":"val lastMessageId: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.lastMessageId","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/last-message-id.html","searchKeys":["lastMessageId","val lastMessageId: String? = null","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.lastMessageId"]},{"name":"val lastMessageId: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.lastMessageId","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/last-message-id.html","searchKeys":["lastMessageId","val lastMessageId: String? = null","app.revolt.model.channel.RevoltChannelApiModel.Group.lastMessageId"]},{"name":"val lastMessageId: String? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.lastMessageId","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/last-message-id.html","searchKeys":["lastMessageId","val lastMessageId: String? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.lastMessageId"]},{"name":"val lastTotpCode: String?","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.lastTotpCode","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/last-totp-code.html","searchKeys":["lastTotpCode","val lastTotpCode: String?","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.lastTotpCode"]},{"name":"val lastTotpCode: String? = null","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.lastTotpCode","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/last-totp-code.html","searchKeys":["lastTotpCode","val lastTotpCode: String? = null","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.lastTotpCode"]},{"name":"val limit: Int? = null","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.limit","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/limit.html","searchKeys":["limit","val limit: Int? = null","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.limit"]},{"name":"val masquerade: RevoltMasqueradeApiModel? = null","description":"app.revolt.model.RevoltMessageApiModel.masquerade","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/masquerade.html","searchKeys":["masquerade","val masquerade: RevoltMasqueradeApiModel? = null","app.revolt.model.RevoltMessageApiModel.masquerade"]},{"name":"val max: Int","description":"app.revolt.exception.RevoltApiException.CountLimitException.max","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-count-limit-exception/max.html","searchKeys":["max","val max: Int","app.revolt.exception.RevoltApiException.CountLimitException.max"]},{"name":"val media: RevoltFileApiModel? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.media","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/media.html","searchKeys":["media","val media: RevoltFileApiModel? = null","app.revolt.model.RevoltEmbedApiModel.Text.media"]},{"name":"val members: List<RevoltServerMemberApiModel>? = null","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.members","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-response-api-model/members.html","searchKeys":["members","val members: List<RevoltServerMemberApiModel>? = null","app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.members"]},{"name":"val mentions: List<String>? = null","description":"app.revolt.model.RevoltMessageApiModel.mentions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/mentions.html","searchKeys":["mentions","val mentions: List<String>? = null","app.revolt.model.RevoltMessageApiModel.mentions"]},{"name":"val messageId: String? = null","description":"app.revolt.model.general.RevoltFileApiModel.messageId","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/message-id.html","searchKeys":["messageId","val messageId: String? = null","app.revolt.model.general.RevoltFileApiModel.messageId"]},{"name":"val messages: List<RevoltMessageApiModel>","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.messages","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-response-api-model/messages.html","searchKeys":["messages","val messages: List<RevoltMessageApiModel>","app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.messages"]},{"name":"val messaging: RevoltMessagingApiService","description":"app.revolt.services.RevoltChannelsApiService.messaging","location":"revolt-kotlin-api/app.revolt.services/-revolt-channels-api-service/messaging.html","searchKeys":["messaging","val messaging: RevoltMessagingApiService","app.revolt.services.RevoltChannelsApiService.messaging"]},{"name":"val metadata: RevoltMetadataApiModel","description":"app.revolt.model.general.RevoltFileApiModel.metadata","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/metadata.html","searchKeys":["metadata","val metadata: RevoltMetadataApiModel","app.revolt.model.general.RevoltFileApiModel.metadata"]},{"name":"val mfa: RevoltMFAApiService","description":"app.revolt.services.auth.RevoltAuthApiService.mfa","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/mfa.html","searchKeys":["mfa","val mfa: RevoltMFAApiService","app.revolt.services.auth.RevoltAuthApiService.mfa"]},{"name":"val mfaResponse: RevoltMFAApiModel","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.mfaResponse","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-m-f-a/mfa-response.html","searchKeys":["mfaResponse","val mfaResponse: RevoltMFAApiModel","app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.mfaResponse"]},{"name":"val mfaTicket: String","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.mfaTicket","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-m-f-a/mfa-ticket.html","searchKeys":["mfaTicket","val mfaTicket: String","app.revolt.model.auth.session.request.RevoltLoginApiRequest.MFA.mfaTicket"]},{"name":"val misc: RevoltMiscApiService","description":"app.revolt.RevoltApi.misc","location":"revolt-kotlin-api/app.revolt/-revolt-api/misc.html","searchKeys":["misc","val misc: RevoltMiscApiService","app.revolt.RevoltApi.misc"]},{"name":"val name: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.name","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-description-changed/name.html","searchKeys":["name","val name: String","app.revolt.model.RevoltMessageApiModel.System.ChannelDescriptionChanged.name"]},{"name":"val name: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.name","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-icon-changed/name.html","searchKeys":["name","val name: String","app.revolt.model.RevoltMessageApiModel.System.ChannelIconChanged.name"]},{"name":"val name: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.name","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-renamed/name.html","searchKeys":["name","val name: String","app.revolt.model.RevoltMessageApiModel.System.ChannelRenamed.name"]},{"name":"val name: String","description":"app.revolt.model.RevoltMessageApiModel.Webhook.name","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-webhook/name.html","searchKeys":["name","val name: String","app.revolt.model.RevoltMessageApiModel.Webhook.name"]},{"name":"val name: String","description":"app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.name","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-fetch-session-api-response/name.html","searchKeys":["name","val name: String","app.revolt.model.auth.session.response.RevoltFetchSessionApiResponse.name"]},{"name":"val name: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.name","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/name.html","searchKeys":["name","val name: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.name"]},{"name":"val name: String","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.name","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/name.html","searchKeys":["name","val name: String","app.revolt.model.channel.RevoltChannelApiModel.Group.name"]},{"name":"val name: String","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.name","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/name.html","searchKeys":["name","val name: String","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.name"]},{"name":"val name: String","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.name","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/name.html","searchKeys":["name","val name: String","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.name"]},{"name":"val name: String","description":"app.revolt.model.general.RevoltEmojiApiModel.name","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/name.html","searchKeys":["name","val name: String","app.revolt.model.general.RevoltEmojiApiModel.name"]},{"name":"val name: String","description":"app.revolt.model.server.RevoltServerApiModel.name","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/name.html","searchKeys":["name","val name: String","app.revolt.model.server.RevoltServerApiModel.name"]},{"name":"val name: String","description":"app.revolt.model.server.RevoltServerRoleApiModel.name","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/name.html","searchKeys":["name","val name: String","app.revolt.model.server.RevoltServerRoleApiModel.name"]},{"name":"val name: String? = null","description":"app.revolt.model.RevoltMasqueradeApiModel.name","location":"revolt-kotlin-api/app.revolt.model/-revolt-masquerade-api-model/name.html","searchKeys":["name","val name: String? = null","app.revolt.model.RevoltMasqueradeApiModel.name"]},{"name":"val nearby: String? = null","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.nearby","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/nearby.html","searchKeys":["nearby","val nearby: String? = null","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.nearby"]},{"name":"val nickname: String? = null","description":"app.revolt.model.server.RevoltServerMemberApiModel.nickname","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/nickname.html","searchKeys":["nickname","val nickname: String? = null","app.revolt.model.server.RevoltServerMemberApiModel.nickname"]},{"name":"val nonce: String? = null","description":"app.revolt.model.RevoltMessageApiModel.nonce","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/nonce.html","searchKeys":["nonce","val nonce: String? = null","app.revolt.model.RevoltMessageApiModel.nonce"]},{"name":"val nsfw: Boolean? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.nsfw","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","app.revolt.model.channel.RevoltChannelApiModel.Group.nsfw"]},{"name":"val nsfw: Boolean? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.nsfw","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.nsfw"]},{"name":"val nsfw: Boolean? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.nsfw","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.nsfw"]},{"name":"val nsfw: Boolean? = null","description":"app.revolt.model.general.RevoltEmojiApiModel.nsfw","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","app.revolt.model.general.RevoltEmojiApiModel.nsfw"]},{"name":"val nsfw: Boolean? = null","description":"app.revolt.model.server.RevoltServerApiModel.nsfw","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/nsfw.html","searchKeys":["nsfw","val nsfw: Boolean? = null","app.revolt.model.server.RevoltServerApiModel.nsfw"]},{"name":"val objectId: String? = null","description":"app.revolt.model.general.RevoltFileApiModel.objectId","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/object-id.html","searchKeys":["objectId","val objectId: String? = null","app.revolt.model.general.RevoltFileApiModel.objectId"]},{"name":"val onboarding: Boolean","description":"app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse.onboarding","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.response/-revolt-onboarding-status-api-response/onboarding.html","searchKeys":["onboarding","val onboarding: Boolean","app.revolt.model.auth.onboarding.response.RevoltOnboardingStatusApiResponse.onboarding"]},{"name":"val onboarding: RevoltOnboardingApiService","description":"app.revolt.services.auth.RevoltAuthApiService.onboarding","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/onboarding.html","searchKeys":["onboarding","val onboarding: RevoltOnboardingApiService","app.revolt.services.auth.RevoltAuthApiService.onboarding"]},{"name":"val online: Boolean? = null","description":"app.revolt.model.user.RevoltUserApiModel.online","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/online.html","searchKeys":["online","val online: Boolean? = null","app.revolt.model.user.RevoltUserApiModel.online"]},{"name":"val online: Boolean? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.online","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/online.html","searchKeys":["online","val online: Boolean? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.online"]},{"name":"val operation: String","description":"app.revolt.exception.RevoltApiException.DatabaseError.operation","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/operation.html","searchKeys":["operation","val operation: String","app.revolt.exception.RevoltApiException.DatabaseError.operation"]},{"name":"val originUrl: String","description":"app.revolt.model.RevoltConfigurationApiModel.Build.originUrl","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/origin-url.html","searchKeys":["originUrl","val originUrl: String","app.revolt.model.RevoltConfigurationApiModel.Build.originUrl"]},{"name":"val originalUrl: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.originalUrl","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/original-url.html","searchKeys":["originalUrl","val originalUrl: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.originalUrl"]},{"name":"val owner: String","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.owner","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/owner.html","searchKeys":["owner","val owner: String","app.revolt.model.channel.RevoltChannelApiModel.Group.owner"]},{"name":"val owner: String","description":"app.revolt.model.server.RevoltServerApiModel.owner","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/owner.html","searchKeys":["owner","val owner: String","app.revolt.model.server.RevoltServerApiModel.owner"]},{"name":"val owner: String","description":"app.revolt.model.user.RevoltUserApiModel.Bot.owner","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-bot/owner.html","searchKeys":["owner","val owner: String","app.revolt.model.user.RevoltUserApiModel.Bot.owner"]},{"name":"val p256dh: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.p256dh","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/-subscription/p256dh.html","searchKeys":["p256dh","val p256dh: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.Subscription.p256dh"]},{"name":"val parent: RevoltEmojiApiModel.Parent","description":"app.revolt.model.general.RevoltEmojiApiModel.parent","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-emoji-api-model/parent.html","searchKeys":["parent","val parent: RevoltEmojiApiModel.Parent","app.revolt.model.general.RevoltEmojiApiModel.parent"]},{"name":"val password: String","description":"app.revolt.model.auth.RevoltMFAApiModel.Password.password","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-password/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.RevoltMFAApiModel.Password.password"]},{"name":"val password: String","description":"app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.password","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-change-password-api-request/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.account.request.RevoltChangePasswordApiRequest.password"]},{"name":"val password: String","description":"app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.password","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-create-account-api-request/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.account.request.RevoltCreateAccountApiRequest.password"]},{"name":"val password: String","description":"app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.password","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-reset-password-api-request/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.password"]},{"name":"val password: String","description":"app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest.password","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.request/-revolt-create-m-f-a-ticket-api-request/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.mfa.request.RevoltCreateMFATicketApiRequest.password"]},{"name":"val password: String","description":"app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.password","location":"revolt-kotlin-api/app.revolt.model.auth.session.request/-revolt-login-api-request/-normal/password.html","searchKeys":["password","val password: String","app.revolt.model.auth.session.request.RevoltLoginApiRequest.Normal.password"]},{"name":"val password: String","description":"app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.password","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-change-username-api-request/password.html","searchKeys":["password","val password: String","app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.password"]},{"name":"val permissionType: RevoltPermissionApiType","description":"app.revolt.exception.RevoltApiException.MissingPermission.permissionType","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-permission/permission-type.html","searchKeys":["permissionType","val permissionType: RevoltPermissionApiType","app.revolt.exception.RevoltApiException.MissingPermission.permissionType"]},{"name":"val permissionType: RevoltUserPermissionApiType","description":"app.revolt.exception.RevoltApiException.MissingUserPermission.permissionType","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-missing-user-permission/permission-type.html","searchKeys":["permissionType","val permissionType: RevoltUserPermissionApiType","app.revolt.exception.RevoltApiException.MissingUserPermission.permissionType"]},{"name":"val permissions: Int? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.permissions","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/permissions.html","searchKeys":["permissions","val permissions: Int? = null","app.revolt.model.channel.RevoltChannelApiModel.Group.permissions"]},{"name":"val permissions: RevoltOverrideFieldApiModel","description":"app.revolt.model.server.RevoltServerRoleApiModel.permissions","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/permissions.html","searchKeys":["permissions","val permissions: RevoltOverrideFieldApiModel","app.revolt.model.server.RevoltServerRoleApiModel.permissions"]},{"name":"val presence: RevoltUserPresenceApiType? = null","description":"app.revolt.model.user.RevoltUserStatusApiModel.presence","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-status-api-model/presence.html","searchKeys":["presence","val presence: RevoltUserPresenceApiType? = null","app.revolt.model.user.RevoltUserStatusApiModel.presence"]},{"name":"val privileged: Boolean? = null","description":"app.revolt.model.user.RevoltUserApiModel.privileged","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/privileged.html","searchKeys":["privileged","val privileged: Boolean? = null","app.revolt.model.user.RevoltUserApiModel.privileged"]},{"name":"val privileged: Boolean? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.privileged","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/privileged.html","searchKeys":["privileged","val privileged: Boolean? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.privileged"]},{"name":"val profile: RevoltUserEditApiRequest.Profile? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.profile","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/profile.html","searchKeys":["profile","val profile: RevoltUserEditApiRequest.Profile? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.profile"]},{"name":"val profile: RevoltUserProfileApiModel? = null","description":"app.revolt.model.user.RevoltUserApiModel.profile","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/profile.html","searchKeys":["profile","val profile: RevoltUserProfileApiModel? = null","app.revolt.model.user.RevoltUserApiModel.profile"]},{"name":"val profile: RevoltUserProfileApiModel? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.profile","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/profile.html","searchKeys":["profile","val profile: RevoltUserProfileApiModel? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.profile"]},{"name":"val rank: Int = 0","description":"app.revolt.model.server.RevoltServerRoleApiModel.rank","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-role-api-model/rank.html","searchKeys":["rank","val rank: Int = 0","app.revolt.model.server.RevoltServerRoleApiModel.rank"]},{"name":"val reactions: List<String>?","description":"app.revolt.model.RevoltMessageApiModel.Interactions.reactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-interactions/reactions.html","searchKeys":["reactions","val reactions: List<String>?","app.revolt.model.RevoltMessageApiModel.Interactions.reactions"]},{"name":"val reactions: Map<String, List<String>>? = null","description":"app.revolt.model.RevoltMessageApiModel.reactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/reactions.html","searchKeys":["reactions","val reactions: Map<String, List<String>>? = null","app.revolt.model.RevoltMessageApiModel.reactions"]},{"name":"val recipients: List<String>","description":"app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.recipients","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-direct-message/recipients.html","searchKeys":["recipients","val recipients: List<String>","app.revolt.model.channel.RevoltChannelApiModel.DirectMessage.recipients"]},{"name":"val recipients: List<String>","description":"app.revolt.model.channel.RevoltChannelApiModel.Group.recipients","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-group/recipients.html","searchKeys":["recipients","val recipients: List<String>","app.revolt.model.channel.RevoltChannelApiModel.Group.recipients"]},{"name":"val recoveryActive: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.recoveryActive","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/recovery-active.html","searchKeys":["recoveryActive","val recoveryActive: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.recoveryActive"]},{"name":"val recoveryCode: String","description":"app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode.recoveryCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-recovery-code/recovery-code.html","searchKeys":["recoveryCode","val recoveryCode: String","app.revolt.model.auth.RevoltMFAApiModel.RecoveryCode.recoveryCode"]},{"name":"val relations: List<RevoltUserApiModel.Relationship>? = null","description":"app.revolt.model.user.RevoltUserApiModel.relations","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/relations.html","searchKeys":["relations","val relations: List<RevoltUserApiModel.Relationship>? = null","app.revolt.model.user.RevoltUserApiModel.relations"]},{"name":"val relations: List<RevoltUserApiModel.Relationship>? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.relations","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/relations.html","searchKeys":["relations","val relations: List<RevoltUserApiModel.Relationship>? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.relations"]},{"name":"val relationship: RevoltRelationshipStatusApiType? = null","description":"app.revolt.model.user.RevoltUserApiModel.relationship","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/relationship.html","searchKeys":["relationship","val relationship: RevoltRelationshipStatusApiType? = null","app.revolt.model.user.RevoltUserApiModel.relationship"]},{"name":"val relationship: RevoltRelationshipStatusApiType? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.relationship","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/relationship.html","searchKeys":["relationship","val relationship: RevoltRelationshipStatusApiType? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.relationship"]},{"name":"val remove: List<RevoltUserEditApiRequest.FieldsUser>? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.remove","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/remove.html","searchKeys":["remove","val remove: List<RevoltUserEditApiRequest.FieldsUser>? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.remove"]},{"name":"val removeSessions: Boolean = false","description":"app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.removeSessions","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-reset-password-api-request/remove-sessions.html","searchKeys":["removeSessions","val removeSessions: Boolean = false","app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.removeSessions"]},{"name":"val replies: List<String>? = null","description":"app.revolt.model.RevoltMessageApiModel.replies","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/replies.html","searchKeys":["replies","val replies: List<String>? = null","app.revolt.model.RevoltMessageApiModel.replies"]},{"name":"val reported: Boolean? = null","description":"app.revolt.model.general.RevoltFileApiModel.reported","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/reported.html","searchKeys":["reported","val reported: Boolean? = null","app.revolt.model.general.RevoltFileApiModel.reported"]},{"name":"val restrictReactions: Boolean? = null","description":"app.revolt.model.RevoltMessageApiModel.Interactions.restrictReactions","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-interactions/restrict-reactions.html","searchKeys":["restrictReactions","val restrictReactions: Boolean? = null","app.revolt.model.RevoltMessageApiModel.Interactions.restrictReactions"]},{"name":"val retryAfter: Int","description":"app.revolt.exception.RevoltApiException.RateLimitException.retryAfter","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-rate-limit-exception/retry-after.html","searchKeys":["retryAfter","val retryAfter: Int","app.revolt.exception.RevoltApiException.RateLimitException.retryAfter"]},{"name":"val revolt: String","description":"app.revolt.model.RevoltConfigurationApiModel.revolt","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/revolt.html","searchKeys":["revolt","val revolt: String","app.revolt.model.RevoltConfigurationApiModel.revolt"]},{"name":"val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.rolePermissions","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/role-permissions.html","searchKeys":["rolePermissions","val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.rolePermissions"]},{"name":"val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.rolePermissions","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/role-permissions.html","searchKeys":["rolePermissions","val rolePermissions: Map<String, RevoltOverrideFieldApiModel>? = null","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.rolePermissions"]},{"name":"val roles: List<String>? = null","description":"app.revolt.model.server.RevoltServerMemberApiModel.roles","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/roles.html","searchKeys":["roles","val roles: List<String>? = null","app.revolt.model.server.RevoltServerMemberApiModel.roles"]},{"name":"val roles: Map<String, RevoltServerRoleApiModel>? = null","description":"app.revolt.model.server.RevoltServerApiModel.roles","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/roles.html","searchKeys":["roles","val roles: Map<String, RevoltServerRoleApiModel>? = null","app.revolt.model.server.RevoltServerApiModel.roles"]},{"name":"val secret: String","description":"app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse.secret","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-generate-t-o-t-p-secret-api-response/secret.html","searchKeys":["secret","val secret: String","app.revolt.model.auth.mfa.response.RevoltGenerateTOTPSecretApiResponse.secret"]},{"name":"val securityKeyMFA: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.securityKeyMFA","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/security-key-m-f-a.html","searchKeys":["securityKeyMFA","val securityKeyMFA: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.securityKeyMFA"]},{"name":"val semver: String","description":"app.revolt.model.RevoltConfigurationApiModel.Build.semver","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/semver.html","searchKeys":["semver","val semver: String","app.revolt.model.RevoltConfigurationApiModel.Build.semver"]},{"name":"val server: String","description":"app.revolt.model.channel.RevoltChannelApiModel.TextChannel.server","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-text-channel/server.html","searchKeys":["server","val server: String","app.revolt.model.channel.RevoltChannelApiModel.TextChannel.server"]},{"name":"val server: String","description":"app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.server","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-voice-channel/server.html","searchKeys":["server","val server: String","app.revolt.model.channel.RevoltChannelApiModel.VoiceChannel.server"]},{"name":"val server: String","description":"app.revolt.model.server.RevoltServerMemberApiModel.ID.server","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/-i-d/server.html","searchKeys":["server","val server: String","app.revolt.model.server.RevoltServerMemberApiModel.ID.server"]},{"name":"val serverId: String? = null","description":"app.revolt.model.general.RevoltFileApiModel.serverId","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/server-id.html","searchKeys":["serverId","val serverId: String? = null","app.revolt.model.general.RevoltFileApiModel.serverId"]},{"name":"val servers: List<RevoltServerApiModel>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready.servers","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/servers.html","searchKeys":["servers","val servers: List<RevoltServerApiModel>","app.revolt.websocket.server.RevoltServerApiEvent.Ready.servers"]},{"name":"val servers: RevoltServersApiService","description":"app.revolt.RevoltApi.servers","location":"revolt-kotlin-api/app.revolt/-revolt-api/servers.html","searchKeys":["servers","val servers: RevoltServersApiService","app.revolt.RevoltApi.servers"]},{"name":"val session: RevoltSessionApiService","description":"app.revolt.services.auth.RevoltAuthApiService.session","location":"revolt-kotlin-api/app.revolt.services.auth/-revolt-auth-api-service/session.html","searchKeys":["session","val session: RevoltSessionApiService","app.revolt.services.auth.RevoltAuthApiService.session"]},{"name":"val siteName: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.siteName","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/site-name.html","searchKeys":["siteName","val siteName: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.siteName"]},{"name":"val size: Int","description":"app.revolt.model.general.RevoltFileApiModel.size","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/size.html","searchKeys":["size","val size: Int","app.revolt.model.general.RevoltFileApiModel.size"]},{"name":"val size: RevoltEmbedApiModel.Image.Size","description":"app.revolt.model.RevoltEmbedApiModel.Image.size","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/size.html","searchKeys":["size","val size: RevoltEmbedApiModel.Image.Size","app.revolt.model.RevoltEmbedApiModel.Image.size"]},{"name":"val sort: RevoltFetchMessagesRequestApiModel.Sort","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.sort","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-request-api-model/sort.html","searchKeys":["sort","val sort: RevoltFetchMessagesRequestApiModel.Sort","app.revolt.model.channel.messaging.RevoltFetchMessagesRequestApiModel.sort"]},{"name":"val special: RevoltEmbedApiModel.Website.Special? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.special","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/special.html","searchKeys":["special","val special: RevoltEmbedApiModel.Website.Special? = null","app.revolt.model.RevoltEmbedApiModel.Website.special"]},{"name":"val status: RevoltRelationshipStatusApiType","description":"app.revolt.model.user.RevoltUserApiModel.Relationship.status","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/-relationship/status.html","searchKeys":["status","val status: RevoltRelationshipStatusApiType","app.revolt.model.user.RevoltUserApiModel.Relationship.status"]},{"name":"val status: RevoltUserStatusApiModel? = null","description":"app.revolt.model.user.RevoltUserApiModel.status","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/status.html","searchKeys":["status","val status: RevoltUserStatusApiModel? = null","app.revolt.model.user.RevoltUserApiModel.status"]},{"name":"val status: RevoltUserStatusApiModel? = null","description":"app.revolt.model.user.request.RevoltUserEditApiRequest.status","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-edit-api-request/status.html","searchKeys":["status","val status: RevoltUserStatusApiModel? = null","app.revolt.model.user.request.RevoltUserEditApiRequest.status"]},{"name":"val status: RevoltUserStatusApiModel? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.status","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/status.html","searchKeys":["status","val status: RevoltUserStatusApiModel? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.status"]},{"name":"val subscription: RevoltLoginApiResponse.Success.Subscription? = null","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.subscription","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/subscription.html","searchKeys":["subscription","val subscription: RevoltLoginApiResponse.Success.Subscription? = null","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.subscription"]},{"name":"val system: RevoltMessageApiModel.System? = null","description":"app.revolt.model.RevoltMessageApiModel.system","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/system.html","searchKeys":["system","val system: RevoltMessageApiModel.System? = null","app.revolt.model.RevoltMessageApiModel.system"]},{"name":"val systemMessages: RevoltServerApiModel.SystemMessages? = null","description":"app.revolt.model.server.RevoltServerApiModel.systemMessages","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/system-messages.html","searchKeys":["systemMessages","val systemMessages: RevoltServerApiModel.SystemMessages? = null","app.revolt.model.server.RevoltServerApiModel.systemMessages"]},{"name":"val tag: String","description":"app.revolt.model.general.RevoltFileApiModel.tag","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/tag.html","searchKeys":["tag","val tag: String","app.revolt.model.general.RevoltFileApiModel.tag"]},{"name":"val text: String? = null","description":"app.revolt.model.user.RevoltUserStatusApiModel.text","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-status-api-model/text.html","searchKeys":["text","val text: String? = null","app.revolt.model.user.RevoltUserStatusApiModel.text"]},{"name":"val ticket: RevoltVerifyEmailApiResponse.Ticket","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.ticket","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/ticket.html","searchKeys":["ticket","val ticket: RevoltVerifyEmailApiResponse.Ticket","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.ticket"]},{"name":"val ticket: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.ticket","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-m-f-a/ticket.html","searchKeys":["ticket","val ticket: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.MFA.ticket"]},{"name":"val timeout: String? = null","description":"app.revolt.model.server.RevoltServerMemberApiModel.timeout","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/timeout.html","searchKeys":["timeout","val timeout: String? = null","app.revolt.model.server.RevoltServerMemberApiModel.timeout"]},{"name":"val timestamp: String","description":"app.revolt.model.RevoltConfigurationApiModel.Build.timestamp","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-build/timestamp.html","searchKeys":["timestamp","val timestamp: String","app.revolt.model.RevoltConfigurationApiModel.Build.timestamp"]},{"name":"val timestamp: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.timestamp","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/-special/-youtube/timestamp.html","searchKeys":["timestamp","val timestamp: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.Special.Youtube.timestamp"]},{"name":"val title: String","description":"app.revolt.model.server.RevoltServerApiModel.Category.title","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-category/title.html","searchKeys":["title","val title: String","app.revolt.model.server.RevoltServerApiModel.Category.title"]},{"name":"val title: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.title","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/title.html","searchKeys":["title","val title: String? = null","app.revolt.model.RevoltEmbedApiModel.Text.title"]},{"name":"val title: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.title","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/title.html","searchKeys":["title","val title: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.title"]},{"name":"val to: String","description":"app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.to","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/-system/-channel-ownership-changed/to.html","searchKeys":["to","val to: String","app.revolt.model.RevoltMessageApiModel.System.ChannelOwnershipChanged.to"]},{"name":"val token: String","description":"app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest.token","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-confirm-account-deletion-api-request/token.html","searchKeys":["token","val token: String","app.revolt.model.auth.account.request.RevoltConfirmAccountDeletionApiRequest.token"]},{"name":"val token: String","description":"app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.token","location":"revolt-kotlin-api/app.revolt.model.auth.account.request/-revolt-reset-password-api-request/token.html","searchKeys":["token","val token: String","app.revolt.model.auth.account.request.RevoltResetPasswordApiRequest.token"]},{"name":"val token: String","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.token","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/token.html","searchKeys":["token","val token: String","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.token"]},{"name":"val token: String","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.token","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/token.html","searchKeys":["token","val token: String","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.token"]},{"name":"val token: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.token","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/token.html","searchKeys":["token","val token: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.token"]},{"name":"val token: String","description":"app.revolt.websocket.client.RevoltClientApiEvent.Authenticate.token","location":"revolt-kotlin-api/app.revolt.websocket.client/-revolt-client-api-event/-authenticate/token.html","searchKeys":["token","val token: String","app.revolt.websocket.client.RevoltClientApiEvent.Authenticate.token"]},{"name":"val token: String? = null","description":"app.revolt.RevoltApiConfig.token","location":"revolt-kotlin-api/app.revolt/-revolt-api-config/token.html","searchKeys":["token","val token: String? = null","app.revolt.RevoltApiConfig.token"]},{"name":"val totpCode: String","description":"app.revolt.model.auth.RevoltMFAApiModel.TOTPCode.totpCode","location":"revolt-kotlin-api/app.revolt.model.auth/-revolt-m-f-a-api-model/-t-o-t-p-code/totp-code.html","searchKeys":["totpCode","val totpCode: String","app.revolt.model.auth.RevoltMFAApiModel.TOTPCode.totpCode"]},{"name":"val totpMFA: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.totpMFA","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/totp-m-f-a.html","searchKeys":["totpMFA","val totpMFA: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.totpMFA"]},{"name":"val trustedHandover: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.trustedHandover","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-m-f-a-status-api-response/trusted-handover.html","searchKeys":["trustedHandover","val trustedHandover: Boolean","app.revolt.model.auth.mfa.response.RevoltMFAStatusApiResponse.trustedHandover"]},{"name":"val type: String","description":"app.revolt.exception.RevoltErrorApiType.type","location":"revolt-kotlin-api/app.revolt.exception/-revolt-error-api-type/type.html","searchKeys":["type","val type: String","app.revolt.exception.RevoltErrorApiType.type"]},{"name":"val type: String","description":"app.revolt.exception.RevoltPermissionApiType.type","location":"revolt-kotlin-api/app.revolt.exception/-revolt-permission-api-type/type.html","searchKeys":["type","val type: String","app.revolt.exception.RevoltPermissionApiType.type"]},{"name":"val type: String","description":"app.revolt.exception.RevoltUserPermissionApiType.type","location":"revolt-kotlin-api/app.revolt.exception/-revolt-user-permission-api-type/type.html","searchKeys":["type","val type: String","app.revolt.exception.RevoltUserPermissionApiType.type"]},{"name":"val url: String","description":"app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-general-server-configuration/url.html","searchKeys":["url","val url: String","app.revolt.model.RevoltConfigurationApiModel.Features.GeneralServerConfiguration.url"]},{"name":"val url: String","description":"app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-voice-server-configuration/url.html","searchKeys":["url","val url: String","app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.url"]},{"name":"val url: String","description":"app.revolt.model.RevoltEmbedApiModel.Image.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/url.html","searchKeys":["url","val url: String","app.revolt.model.RevoltEmbedApiModel.Image.url"]},{"name":"val url: String","description":"app.revolt.model.RevoltEmbedApiModel.Video.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-video/url.html","searchKeys":["url","val url: String","app.revolt.model.RevoltEmbedApiModel.Video.url"]},{"name":"val url: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Text.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-text/url.html","searchKeys":["url","val url: String? = null","app.revolt.model.RevoltEmbedApiModel.Text.url"]},{"name":"val url: String? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.url","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/url.html","searchKeys":["url","val url: String? = null","app.revolt.model.RevoltEmbedApiModel.Website.url"]},{"name":"val user: String","description":"app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.user","location":"revolt-kotlin-api/app.revolt.model.channel/-revolt-channel-api-model/-saved-messages/user.html","searchKeys":["user","val user: String","app.revolt.model.channel.RevoltChannelApiModel.SavedMessages.user"]},{"name":"val user: String","description":"app.revolt.model.server.RevoltServerMemberApiModel.ID.user","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-member-api-model/-i-d/user.html","searchKeys":["user","val user: String","app.revolt.model.server.RevoltServerMemberApiModel.ID.user"]},{"name":"val userBanned: String? = null","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages.userBanned","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/user-banned.html","searchKeys":["userBanned","val userBanned: String? = null","app.revolt.model.server.RevoltServerApiModel.SystemMessages.userBanned"]},{"name":"val userId: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled.userId","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-disabled/user-id.html","searchKeys":["userId","val userId: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Disabled.userId"]},{"name":"val userId: String","description":"app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.userId","location":"revolt-kotlin-api/app.revolt.model.auth.session.response/-revolt-login-api-response/-success/user-id.html","searchKeys":["userId","val userId: String","app.revolt.model.auth.session.response.RevoltLoginApiResponse.Success.userId"]},{"name":"val userId: String? = null","description":"app.revolt.model.general.RevoltFileApiModel.userId","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-file-api-model/user-id.html","searchKeys":["userId","val userId: String? = null","app.revolt.model.general.RevoltFileApiModel.userId"]},{"name":"val userJoined: String? = null","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages.userJoined","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/user-joined.html","searchKeys":["userJoined","val userJoined: String? = null","app.revolt.model.server.RevoltServerApiModel.SystemMessages.userJoined"]},{"name":"val userKicked: String? = null","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages.userKicked","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/user-kicked.html","searchKeys":["userKicked","val userKicked: String? = null","app.revolt.model.server.RevoltServerApiModel.SystemMessages.userKicked"]},{"name":"val userLeft: String? = null","description":"app.revolt.model.server.RevoltServerApiModel.SystemMessages.userLeft","location":"revolt-kotlin-api/app.revolt.model.server/-revolt-server-api-model/-system-messages/user-left.html","searchKeys":["userLeft","val userLeft: String? = null","app.revolt.model.server.RevoltServerApiModel.SystemMessages.userLeft"]},{"name":"val username: String","description":"app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest.username","location":"revolt-kotlin-api/app.revolt.model.auth.onboarding.request/-revolt-onboarding-complete-api-request/username.html","searchKeys":["username","val username: String","app.revolt.model.auth.onboarding.request.RevoltOnboardingCompleteApiRequest.username"]},{"name":"val username: String","description":"app.revolt.model.user.RevoltUserApiModel.username","location":"revolt-kotlin-api/app.revolt.model.user/-revolt-user-api-model/username.html","searchKeys":["username","val username: String","app.revolt.model.user.RevoltUserApiModel.username"]},{"name":"val username: String","description":"app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.username","location":"revolt-kotlin-api/app.revolt.model.user.request/-revolt-user-change-username-api-request/username.html","searchKeys":["username","val username: String","app.revolt.model.user.request.RevoltUserChangeUsernameApiRequest.username"]},{"name":"val username: String? = null","description":"app.revolt.model.websocket.RevoltUserUpdateApiModel.username","location":"revolt-kotlin-api/app.revolt.model.websocket/-revolt-user-update-api-model/username.html","searchKeys":["username","val username: String? = null","app.revolt.model.websocket.RevoltUserUpdateApiModel.username"]},{"name":"val users: List<RevoltUserApiModel>","description":"app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.users","location":"revolt-kotlin-api/app.revolt.model.channel.messaging/-revolt-fetch-messages-response-api-model/users.html","searchKeys":["users","val users: List<RevoltUserApiModel>","app.revolt.model.channel.messaging.RevoltFetchMessagesResponseApiModel.users"]},{"name":"val users: List<RevoltUserApiModel>","description":"app.revolt.websocket.server.RevoltServerApiEvent.Ready.users","location":"revolt-kotlin-api/app.revolt.websocket.server/-revolt-server-api-event/-ready/users.html","searchKeys":["users","val users: List<RevoltUserApiModel>","app.revolt.websocket.server.RevoltServerApiEvent.Ready.users"]},{"name":"val users: RevoltUsersApiService","description":"app.revolt.RevoltApi.users","location":"revolt-kotlin-api/app.revolt/-revolt-api/users.html","searchKeys":["users","val users: RevoltUsersApiService","app.revolt.RevoltApi.users"]},{"name":"val validated: Boolean","description":"app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.validated","location":"revolt-kotlin-api/app.revolt.model.auth.account.response/-revolt-verify-email-api-response/-ticket/validated.html","searchKeys":["validated","val validated: Boolean","app.revolt.model.auth.account.response.RevoltVerifyEmailApiResponse.Ticket.validated"]},{"name":"val validated: Boolean","description":"app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.validated","location":"revolt-kotlin-api/app.revolt.model.auth.mfa.response/-revolt-create-m-f-a-ticket-api-response/validated.html","searchKeys":["validated","val validated: Boolean","app.revolt.model.auth.mfa.response.RevoltCreateMFATicketApiResponse.validated"]},{"name":"val vapid: String","description":"app.revolt.model.RevoltConfigurationApiModel.vapid","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/vapid.html","searchKeys":["vapid","val vapid: String","app.revolt.model.RevoltConfigurationApiModel.vapid"]},{"name":"val video: RevoltEmbedApiModel.Video? = null","description":"app.revolt.model.RevoltEmbedApiModel.Website.video","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-website/video.html","searchKeys":["video","val video: RevoltEmbedApiModel.Video? = null","app.revolt.model.RevoltEmbedApiModel.Website.video"]},{"name":"val voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration","description":"app.revolt.model.RevoltConfigurationApiModel.Features.voso","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/voso.html","searchKeys":["voso","val voso: RevoltConfigurationApiModel.Features.VoiceServerConfiguration","app.revolt.model.RevoltConfigurationApiModel.Features.voso"]},{"name":"val webhook: RevoltMessageApiModel.Webhook? = null","description":"app.revolt.model.RevoltMessageApiModel.webhook","location":"revolt-kotlin-api/app.revolt.model/-revolt-message-api-model/webhook.html","searchKeys":["webhook","val webhook: RevoltMessageApiModel.Webhook? = null","app.revolt.model.RevoltMessageApiModel.webhook"]},{"name":"val width: Int","description":"app.revolt.model.RevoltEmbedApiModel.Image.width","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-image/width.html","searchKeys":["width","val width: Int","app.revolt.model.RevoltEmbedApiModel.Image.width"]},{"name":"val width: Int","description":"app.revolt.model.RevoltEmbedApiModel.Video.width","location":"revolt-kotlin-api/app.revolt.model/-revolt-embed-api-model/-video/width.html","searchKeys":["width","val width: Int","app.revolt.model.RevoltEmbedApiModel.Video.width"]},{"name":"val width: Int","description":"app.revolt.model.general.RevoltMetadataApiModel.Image.width","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-image/width.html","searchKeys":["width","val width: Int","app.revolt.model.general.RevoltMetadataApiModel.Image.width"]},{"name":"val width: Int","description":"app.revolt.model.general.RevoltMetadataApiModel.Video.width","location":"revolt-kotlin-api/app.revolt.model.general/-revolt-metadata-api-model/-video/width.html","searchKeys":["width","val width: Int","app.revolt.model.general.RevoltMetadataApiModel.Video.width"]},{"name":"val with: String","description":"app.revolt.exception.RevoltApiException.DatabaseError.with","location":"revolt-kotlin-api/app.revolt.exception/-revolt-api-exception/-database-error/with.html","searchKeys":["with","val with: String","app.revolt.exception.RevoltApiException.DatabaseError.with"]},{"name":"val ws: RevoltApiWebSocket","description":"app.revolt.RevoltApi.ws","location":"revolt-kotlin-api/app.revolt/-revolt-api/ws.html","searchKeys":["ws","val ws: RevoltApiWebSocket","app.revolt.RevoltApi.ws"]},{"name":"val ws: String","description":"app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.ws","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/-features/-voice-server-configuration/ws.html","searchKeys":["ws","val ws: String","app.revolt.model.RevoltConfigurationApiModel.Features.VoiceServerConfiguration.ws"]},{"name":"val ws: String","description":"app.revolt.model.RevoltConfigurationApiModel.ws","location":"revolt-kotlin-api/app.revolt.model/-revolt-configuration-api-model/ws.html","searchKeys":["ws","val ws: String","app.revolt.model.RevoltConfigurationApiModel.ws"]}]
